module M_18_trait_laws__uses_op [#"18_trait_laws.rs" 16 0 16 48]
  let%span s18_trait_laws = "18_trait_laws.rs" 15 10 15 24
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 17 16 17 34
  let%span s18_trait_laws'1 = "18_trait_laws.rs" 9 14 9 32
  
  type t_T
  
  function op [#"18_trait_laws.rs" 6 4 6 33] (self: t_T) (_1: t_T) : t_T
  
  function reflexive [#"18_trait_laws.rs" 10 4 10 35] (a: t_T) (b: t_T) : ()
  
  axiom reflexive_spec: forall a: t_T, b: t_T. [%#s18_trait_laws'1] op a b = op b a
  
  constant x  : t_T
  
  constant y  : t_T
  
  predicate uses_op [#"18_trait_laws.rs" 16 0 16 48] (x'0: t_T) (y'0: t_T)
  
  goal vc_uses_op: [%#s18_trait_laws] (op x y = op y x) = true
end
module M_18_trait_laws__qyi15007366726265329150__reflexive [#"18_trait_laws.rs" 30 4 30 34] (* <() as Symmetric> *)
  let%span s18_trait_laws = "18_trait_laws.rs" 29 14 29 32
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 30 35 30 37
  let%span s18_trait_laws'1 = "18_trait_laws.rs" 24 8 24 10
  
  function op [#"18_trait_laws.rs" 23 4 23 32] (self: ()) (_1: ()) : () =
    [%#s18_trait_laws'1] ()
  
  constant a  : ()
  
  constant b  : ()
  
  function reflexive [#"18_trait_laws.rs" 30 4 30 34] (a'0: ()) (b'0: ()) : ()
  
  goal vc_reflexive: [%#s18_trait_laws] op a b = op b a
end
module M_18_trait_laws__impl_laws [#"18_trait_laws.rs" 36 0 36 26]
  let%span s18_trait_laws = "18_trait_laws.rs" 35 10 35 24
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 37 16 37 38
  let%span s18_trait_laws'1 = "18_trait_laws.rs" 24 8 24 10
  let%span s18_trait_laws'2 = "18_trait_laws.rs" 29 14 29 32
  let%span s18_trait_laws'3 = "18_trait_laws.rs" 30 35 30 37
  
  function op [#"18_trait_laws.rs" 23 4 23 32] (self: ()) (_1: ()) : () =
    [%#s18_trait_laws'1] ()
  
  function reflexive [#"18_trait_laws.rs" 30 4 30 34] (a: ()) (b: ()) : () =
    [%#s18_trait_laws'3] ()
  
  axiom reflexive_spec: forall a: (), b: (). [%#s18_trait_laws'2] op a b = op b a
  
  predicate impl_laws [#"18_trait_laws.rs" 36 0 36 26] 
  
  goal vc_impl_laws: [%#s18_trait_laws] (op () () = op () ()) = true
end
module M_18_trait_laws__qyi15007366726265329150__reflexive__refines [#"18_trait_laws.rs" 30 4 30 34] (* <() as Symmetric> *)
  let%span s18_trait_laws = "18_trait_laws.rs" 30 4 30 34
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 24 8 24 10
  
  function op [#"18_trait_laws.rs" 23 4 23 32] (self: ()) (_1: ()) : () =
    [%#s18_trait_laws'0] ()
  
  goal refines: [%#s18_trait_laws] forall a: (). forall b: (). forall result: (). op a b = op b a  -> op a b = op b a
end
