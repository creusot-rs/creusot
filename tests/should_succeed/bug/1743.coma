module M_impl_S__minimize (* S *)
  use creusot.prelude.MutBorrow
  use creusot.prelude.Opaque
  use creusot.prelude.Ptr
  use creusot.int.UInt64
  use creusot.int.Int32
  use mach.int.Int
  use creusot.prelude.Any
  
  type t_PtrOwn_i32
  
  type t_S = { perm: t_PtrOwn_i32; ptr: Opaque.ptr }
  
  predicate is_null_ptr_i32 (self: Opaque.ptr) = Ptr.addr_logic_u64 self = (0: UInt64.t)
  
  function ptr_i32 (self: t_PtrOwn_i32) : Opaque.ptr
  
  predicate metadata_matches_i32 [@inline:trivial] (_value: Int32.t) (_metadata: ()) = true
  
  meta "rewrite_def" predicate metadata_matches_i32
  
  function val_i32 (self: t_PtrOwn_i32) : Int32.t
  
  function metadata_i32 (_1: Opaque.ptr) : ()
  
  predicate inv_ref_i32 [@inline:trivial] (_1: Int32.t) = true
  
  meta "rewrite_def" predicate inv_ref_i32
  
  predicate invariant_PtrOwn_i32 (self: t_PtrOwn_i32) =
    not is_null_ptr_i32 (ptr_i32 self)
    /\ metadata_matches_i32 (val_i32 self) (metadata_i32 (ptr_i32 self)) /\ inv_ref_i32 (val_i32 self)
  
  predicate inv_PtrOwn_i32 (_1: t_PtrOwn_i32)
  
  axiom inv_axiom [@rewrite]: forall x: t_PtrOwn_i32 [inv_PtrOwn_i32 x]. inv_PtrOwn_i32 x = invariant_PtrOwn_i32 x
  
  predicate invariant_Ghost_PtrOwn_i32 [@inline:trivial] (self: t_PtrOwn_i32) = inv_PtrOwn_i32 self
  
  meta "rewrite_def" predicate invariant_Ghost_PtrOwn_i32
  
  predicate inv_Ghost_PtrOwn_i32 [@inline:trivial] (_1: t_PtrOwn_i32) = invariant_Ghost_PtrOwn_i32 _1
  
  meta "rewrite_def" predicate inv_Ghost_PtrOwn_i32
  
  predicate inv_S (_1: t_S)
  
  axiom inv_axiom'0 [@rewrite]: forall x: t_S [inv_S x]. inv_S x = inv_Ghost_PtrOwn_i32 x.perm
  
  predicate invariant_ref_S [@inline:trivial] (self: MutBorrow.t t_S) = inv_S self.current /\ inv_S self.final
  
  meta "rewrite_def" predicate invariant_ref_S
  
  predicate inv_ref_S [@inline:trivial] (_1: MutBorrow.t t_S) = invariant_ref_S _1
  
  meta "rewrite_def" predicate inv_ref_S
  
  predicate resolve_ref_S [@inline:trivial] (_1: MutBorrow.t t_S) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve_ref_S
  
  predicate invariant_ref_Ghost_PtrOwn_i32 [@inline:trivial] (self: t_PtrOwn_i32) = inv_Ghost_PtrOwn_i32 self
  
  meta "rewrite_def" predicate invariant_ref_Ghost_PtrOwn_i32
  
  predicate inv_ref_Ghost_PtrOwn_i32 [@inline:trivial] (_1: t_PtrOwn_i32) = invariant_ref_Ghost_PtrOwn_i32 _1
  
  meta "rewrite_def" predicate inv_ref_Ghost_PtrOwn_i32
  
  predicate invariant_ref_PtrOwn_i32 [@inline:trivial] (self: t_PtrOwn_i32) = inv_PtrOwn_i32 self
  
  meta "rewrite_def" predicate invariant_ref_PtrOwn_i32
  
  predicate inv_ref_PtrOwn_i32 [@inline:trivial] (_1: t_PtrOwn_i32) = invariant_ref_PtrOwn_i32 _1
  
  meta "rewrite_def" predicate inv_ref_PtrOwn_i32
  
  let rec deref_Ghost_PtrOwn_i32 (self: t_PtrOwn_i32) (return (x: t_PtrOwn_i32)) =
    {[@expl:deref 'self' type invariant] inv_ref_Ghost_PtrOwn_i32 self}
    any [ return (result: t_PtrOwn_i32) -> {inv_ref_PtrOwn_i32 result} {result = self} (! return {result}) ]
  
  predicate invariant_Ghost_ref_PtrOwn_i32 [@inline:trivial] (self: t_PtrOwn_i32) = inv_ref_PtrOwn_i32 self
  
  meta "rewrite_def" predicate invariant_Ghost_ref_PtrOwn_i32
  
  predicate inv_Ghost_ref_PtrOwn_i32 [@inline:trivial] (_1: t_PtrOwn_i32) = invariant_Ghost_ref_PtrOwn_i32 _1
  
  meta "rewrite_def" predicate inv_Ghost_ref_PtrOwn_i32
  
  let rec new_ref_PtrOwn_i32 (x: t_PtrOwn_i32) (return (x'0: t_PtrOwn_i32)) =
    {[@expl:new 'x' type invariant] inv_ref_PtrOwn_i32 x}
    any [ return (result: t_PtrOwn_i32) -> {inv_Ghost_ref_PtrOwn_i32 result} {result = x} (! return {result}) ]
  
  let rec as_ref_i32 (ptr'0: Opaque.ptr) (own: t_PtrOwn_i32) (return (x: Int32.t)) =
    {[@expl:as_ref 'own' type invariant] inv_Ghost_ref_PtrOwn_i32 own}
    {[@expl:as_ref requires] ptr'0 = ptr_i32 own}
    any [ return (result: Int32.t) -> {result = val_i32 own} (! return {result}) ]
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec minimize (self: MutBorrow.t t_S) (return (x: ())) = {[@expl:minimize 'self' type invariant] inv_ref_S self}
    {[@expl:minimize requires #0] Int32.to_int (val_i32 self.current.perm) = 1}
    {[@expl:minimize requires #1] ptr_i32 self.current.perm = self.current.ptr}
    (! bb0
    [ bb0 = s0
      [ s0 = {[@expl:type invariant] inv_ref_S self} s1
      | s1 = -{resolve_ref_S self}- s2
      | s2 = deref_Ghost_PtrOwn_i32 {self.current.perm} (fun (_ret: t_PtrOwn_i32) -> [ &_9 <- _ret ] s3)
      | s3 = bb1 ]
    | bb1 = s0
      [ s0 = [ &_8 <- _9 ] s1
      | s1 = new_ref_PtrOwn_i32 {_8} (fun (_ret: t_PtrOwn_i32) -> [ &_6 <- _ret ] s2)
      | s2 = bb2 ]
    | bb2 = s0 [ s0 = as_ref_i32 {self.current.ptr} {_6} (fun (_ret: Int32.t) -> [ &r <- _ret ] s1) | s1 = bb4 ]
    | bb4 = bb4 [ bb4 = {[@expl:loop invariant] 0 <= Int32.to_int (val_i32 self.current.perm)} (! s0) [ s0 = bb4 ] ] ]
    [ & self: MutBorrow.t t_S = self
    | & r: Int32.t = Any.any_l ()
    | & _6: t_PtrOwn_i32 = Any.any_l ()
    | & _8: t_PtrOwn_i32 = Any.any_l ()
    | & _9: t_PtrOwn_i32 = Any.any_l () ]) [ return (result: ()) -> (! return {result}) ]
end
