
module C222_A_IsTrue_Impl
  type self
  use prelude.Int
  function mktrue0 [#"../222.rs" 7 4 7 22] (_1 : ()) : int
  val mktrue0 [#"../222.rs" 7 4 7 22] (_1 : ()) : int
    ensures { result = mktrue0 _1 }
    
  constant _1  : ()
  function is_true [#"../222.rs" 14 4 14 16] (_1 : ()) : ()
  goal vc_is_true : [#"../222.rs" 13 14 13 34] mktrue0 () <= 10
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module C222_Once_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  type t_once 't =
    | C_Once (Core_Option_Option_Type.t_option 't)
    
  let function once_0 (self : t_once 't) : Core_Option_Option_Type.t_option 't = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Once a -> a
      end
end
module C222_UsesInvariant
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  use prelude.Borrow
  predicate invariant3 (self : borrowed (Core_Option_Option_Type.t_option t))
  val invariant3 (self : borrowed (Core_Option_Option_Type.t_option t)) : bool
    ensures { result = invariant3 self }
    
  predicate inv2 (_x : borrowed (Core_Option_Option_Type.t_option t))
  val inv2 (_x : borrowed (Core_Option_Option_Type.t_option t)) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : borrowed (Core_Option_Option_Type.t_option t) . inv2 x = true
  use C222_Once_Type as C222_Once_Type
  predicate invariant2 (self : borrowed (C222_Once_Type.t_once t))
  val invariant2 (self : borrowed (C222_Once_Type.t_once t)) : bool
    ensures { result = invariant2 self }
    
  predicate inv1 (_x : borrowed (C222_Once_Type.t_once t))
  val inv1 (_x : borrowed (C222_Once_Type.t_once t)) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : borrowed (C222_Once_Type.t_once t) . inv1 x = true
  predicate invariant1 (self : Core_Option_Option_Type.t_option t)
  val invariant1 (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = invariant1 self }
    
  predicate inv0 (_x : Core_Option_Option_Type.t_option t)
  val inv0 (_x : Core_Option_Option_Type.t_option t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Core_Option_Option_Type.t_option t . inv0 x = true
  predicate invariant0 [#"../222.rs" 29 4 29 30] (self : C222_Once_Type.t_once t) =
    [#"../222.rs" 30 8 30 12] true
  val invariant0 [#"../222.rs" 29 4 29 30] (self : C222_Once_Type.t_once t) : bool
    ensures { result = invariant0 self }
    
  predicate resolve1 (self : borrowed (C222_Once_Type.t_once t)) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve1 (self : borrowed (C222_Once_Type.t_once t)) : bool
    ensures { result = resolve1 self }
    
  predicate resolve0 (self : Core_Option_Option_Type.t_option t)
  val resolve0 (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = resolve0 self }
    
  val take0 (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    requires {inv2 self}
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 29 0 126 1] result =  * self
    /\  ^ self = Core_Option_Option_Type.C_None }
    ensures { inv0 result }
    
  let rec cfg uses_invariant [#"../222.rs" 40 0 40 41] [@cfg:stackify] [@cfg:subregion_analysis] (x : borrowed (C222_Once_Type.t_once t)) : ()
    requires {[#"../222.rs" 38 11 38 24] invariant0 ( * x)}
    requires {[#"../222.rs" 40 25 40 26] inv1 x}
    ensures { [#"../222.rs" 39 10 39 26] invariant0 ( ^ x) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x : borrowed (C222_Once_Type.t_once t) = x;
  var _4 : Core_Option_Option_Type.t_option t;
  var _5 : borrowed (Core_Option_Option_Type.t_option t);
  {
    goto BB0
  }
  BB0 {
    [#"../222.rs" 41 4 41 7] _5 <- Borrow.borrow_final (C222_Once_Type.once_0 ( * x)) (Borrow.inherit_id (Borrow.get_id x) 1);
    [#"../222.rs" 41 4 41 7] x <- { x with current = (let C222_Once_Type.C_Once x0 =  * x in C222_Once_Type.C_Once ( ^ _5)) ; };
    assume { inv0 ( ^ _5) };
    [#"../222.rs" 41 4 41 14] _4 <- ([#"../222.rs" 41 4 41 14] take0 _5);
    _5 <- any borrowed (Core_Option_Option_Type.t_option t);
    goto BB1
  }
  BB1 {
    assert { [@expl:type invariant] inv0 _4 };
    assume { resolve0 _4 };
    assert { [@expl:type invariant] inv1 x };
    assume { resolve1 x };
    goto BB2
  }
  BB2 {
    [#"../222.rs" 40 42 42 1] _0 <- ([#"../222.rs" 40 42 42 1] ());
    return _0
  }
  
end
module C222_Impl0
  
end
module C222_Impl1
  type t
end
