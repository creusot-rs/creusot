
module Subregion_ListReversalH_Interface
  use prelude.Int
  use prelude.UIntSize
  val list_reversal_h [#"../subregion.rs" 3 0 3 37] (l : usize) : usize
end
module Subregion_ListReversalH
  use prelude.Int
  use prelude.UIntSize
  let rec cfg list_reversal_h [#"../subregion.rs" 3 0 3 37] [@cfg:stackify] [@cfg:subregion_analysis] (l : usize) : usize
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var l : usize = l;
  var r : usize;
  var x : usize;
  var tmp : usize;
  {
    goto BB0
  }
  BB0 {
    r <- ([#"../subregion.rs" 4 16 4 17] [#"../subregion.rs" 4 16 4 17] (0 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../subregion.rs" 5 16 5 20] true };
    goto BB2
  }
  BB2 {
    switch ([#"../subregion.rs" 6 10 6 16] l <> ([#"../subregion.rs" 6 15 6 16] [#"../subregion.rs" 6 15 6 16] (0 : usize)))
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    assert { [@expl:assertion] [#"../subregion.rs" 7 22 7 27] false };
    x <- r;
    tmp <- l;
    r <- tmp;
    goto BB1
  }
  BB4 {
    _0 <- r;
    return _0
  }
  
end
