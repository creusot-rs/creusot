
module C869_Unsound
  use prelude.Snapshot
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.Snapshot
  use prelude.Snapshot
  predicate resolve0 (self : borrowed (Snapshot.snap_ty bool)) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve0 (self : borrowed (Snapshot.snap_ty bool)) : bool
    ensures { result = resolve0 self }
    
  use prelude.Snapshot
  let rec cfg unsound [#"../869.rs" 4 0 4 16] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x : Snapshot.snap_ty bool;
  var xm : borrowed (Snapshot.snap_ty bool);
  var _4 : borrowed (Snapshot.snap_ty bool);
  var b : borrowed (Snapshot.snap_ty bool);
  var _6 : borrowed (Snapshot.snap_ty bool);
  var bg : Snapshot.snap_ty (borrowed (Snapshot.snap_ty bool));
  var evil : borrowed (Snapshot.snap_ty bool);
  var _12 : borrowed (Snapshot.snap_ty bool);
  var _15 : Snapshot.snap_ty bool;
  {
    goto BB0
  }
  BB0 {
    [#"../869.rs" 5 32 5 50] x <- ([#"../869.rs" 5 32 5 50] Snapshot.new true);
    goto BB1
  }
  BB1 {
    [#"../869.rs" 7 34 7 40] _4 <- Borrow.borrow_mut x;
    [#"../869.rs" 7 34 7 40] x <-  ^ _4;
    [#"../869.rs" 7 34 7 40] xm <- Borrow.borrow_final ( * _4) (Borrow.get_id _4);
    [#"../869.rs" 7 34 7 40] _4 <- { _4 with current = ( ^ xm) ; };
    assume { resolve0 _4 };
    [#"../869.rs" 9 33 9 41] _6 <- Borrow.borrow_mut ( * xm);
    [#"../869.rs" 9 33 9 41] xm <- { xm with current = ( ^ _6) ; };
    [#"../869.rs" 9 33 9 41] b <- Borrow.borrow_final ( * _6) (Borrow.get_id _6);
    [#"../869.rs" 9 33 9 41] _6 <- { _6 with current = ( ^ b) ; };
    assume { resolve0 b };
    assume { resolve0 _6 };
    [#"../869.rs" 10 44 10 59] bg <- ([#"../869.rs" 10 44 10 59] Snapshot.new b);
    goto BB2
  }
  BB2 {
    assert { [@expl:assertion] [#"../869.rs" 11 20 11 50] Snapshot.inner ( * Snapshot.inner bg) = true
    /\ Snapshot.inner ( ^ Snapshot.inner bg) = true };
    [#"../869.rs" 13 36 13 44] _12 <- Borrow.borrow_final ( * xm) (Borrow.get_id xm);
    [#"../869.rs" 13 36 13 44] xm <- { xm with current = ( ^ _12) ; };
    [#"../869.rs" 13 36 13 44] evil <- Borrow.borrow_final ( * _12) (Borrow.get_id _12);
    [#"../869.rs" 13 36 13 44] _12 <- { _12 with current = ( ^ evil) ; };
    assume { resolve0 _12 };
    assert { [@expl:assertion] [#"../869.rs" 17 20 17 53] (evil = Snapshot.inner bg)
    = (Snapshot.inner ( ^ evil) = true) };
    [#"../869.rs" 18 12 18 64] _15 <- ([#"../869.rs" 18 12 18 64] Snapshot.new (if evil = Snapshot.inner bg then
      false
    else
      true
    ));
    goto BB3
  }
  BB3 {
    [#"../869.rs" 18 4 18 64] evil <- { evil with current = _15 ; };
    _15 <- any Snapshot.snap_ty bool;
    assume { resolve0 evil };
    assume { resolve0 xm };
    assert { [@expl:assertion] [#"../869.rs" 19 20 19 37] Snapshot.inner ( * evil) = (not Snapshot.inner ( ^ evil)) };
    assert { [@expl:assertion] [#"../869.rs" 20 20 20 37] Snapshot.inner ( * evil) = (not Snapshot.inner ( * evil)) };
    [#"../869.rs" 4 17 21 1] _0 <- ([#"../869.rs" 4 17 21 1] ());
    return _0
  }
  
end
