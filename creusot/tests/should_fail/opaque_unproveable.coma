
module OpaqueUnproveable_Test
  use prelude.Intrinsic
  predicate opaque'0 [#"../opaque_unproveable.rs" 9 4 9 27] (_1 : ())
  let rec opaque'0 (_1:()) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = opaque'0 _1} (! return' {result}) ]
    
  let rec test (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 = {[@expl:assertion] [#"../opaque_unproveable.rs" 16 18 16 29] opaque'0 ()} s1
      | s1 =  [ &_0 <- [#"../opaque_unproveable.rs" 14 14 17 1] () ] s2
      | s2 = return' {_0} ]
       ]
    ) [ & _0 : () = any_l () : () ]  [ return' (result:())-> (! return' {result}) ] 
end
