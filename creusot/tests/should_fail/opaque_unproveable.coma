module M_opaque_unproveable__test [#"opaque_unproveable.rs" 14 0 14 13]
  let%span sopaque_unproveable0 = "opaque_unproveable.rs" 16 18 16 29
  
  predicate opaque'0 [#"opaque_unproveable.rs" 9 4 9 27] (_1 : ())
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec test'0 (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0 [ s0 = {[@expl:assertion] [%#sopaque_unproveable0] opaque'0 ()} s1 | s1 = return' {_0} ]  ]
    ) [ & _0 : () = any_l () ]  [ return' (result:())-> (! return' {result}) ] 
end
