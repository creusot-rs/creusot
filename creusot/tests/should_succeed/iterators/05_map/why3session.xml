<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="05_map.coma"/>
<theory name="M_05_map__qyi14910388998417814812" proved="true">
 <goal name="produces_refl_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.012082" steps="0"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.049331" steps="1099"/></proof>
 </goal>
 <goal name="produces_trans_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.018997" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_05_map__qyi14910388998417814812__produces_refl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0">
  <goal name="vc_produces_refl.0" proved="true">
  <proof prover="0"><result status="valid" time="0.036142" steps="122353"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_05_map__qyi14910388998417814812__produces_trans" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0" arg2="in" arg3="H3,H4">
    <goal name="vc_produces_trans.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans.0.0.0.0" proved="true">
     <proof prover="3" timelimit="1"><result status="valid" time="0.073807" steps="18031"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(fs++fs1)">
      <goal name="vc_produces_trans.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.0.0.1.0.0" proved="true">
       <proof prover="0"><result status="valid" time="0.048188" steps="135367"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.0.1.0.1" proved="true">
       <proof prover="1" timelimit="5"><result status="valid" time="0.015781" steps="41"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.0.1.0.2" proved="true">
       <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H">
        <goal name="vc_produces_trans.0.0.0.1.0.2.0" proved="true">
        <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H1">
         <goal name="vc_produces_trans.0.0.0.1.0.2.0.0" proved="true">
         <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H2">
          <goal name="vc_produces_trans.0.0.0.1.0.2.0.0.0" proved="true">
          <transf name="exists" proved="true" arg1="(s++s1)">
           <goal name="vc_produces_trans.0.0.0.1.0.2.0.0.0.0" proved="true">
           <proof prover="0"><result status="valid" time="0.687361" steps="1658296"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_05_map__qyi14910388998417814812__next" proved="true">
 <goal name="vc_next" proved="true">
 <proof prover="0"><result status="valid" time="0.180132" steps="392244"/></proof>
 </goal>
</theory>
<theory name="M_05_map__qyi9543869049664362474__produces_one_invariant" proved="true">
 <goal name="vc_produces_one_invariant" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H5">
    <goal name="vc_produces_one_invariant.0.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.053570" steps="15444"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_produces_one_invariant.0.1" proved="true">
   <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H1">
    <goal name="vc_produces_one_invariant.0.1.0" proved="true">
    <transf name="remove" proved="true" arg1="([]),singleton,cons,snoc,(++),create&#39;spec,create&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,associative,cons_def,cat_back,cons_dec,snoc_dec,cat_dec,empty_dec,singleton_dec">
     <goal name="vc_produces_one_invariant.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.040745" steps="9861"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_produces_one_invariant.0.2" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_produces_one_invariant.0.2.0" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_produces_one_invariant.0.2.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_produces_one_invariant.0.2.0.0.0" proved="true">
      <transf name="remove" proved="true" arg1="singleton,cons,next_precondition&#39;0,(==)&#39;spec,create&#39;spec,create&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;def,(++)&#39;spec,associative,left_neutral,right_neutral,snoc_back,cat_back&#39;0,cons_dec,snoc_dec,cat_dec,empty_dec,singleton_dec,produces_trans&#39;0_spec,produces_refl&#39;0_spec">
       <goal name="vc_produces_one_invariant.0.2.0.0.0.0" proved="true">
       <proof prover="0"><result status="valid" time="0.029076" steps="138526"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_05_map__qyi9543869049664362474__produces_one" proved="true">
 <goal name="vc_produces_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one.0" proved="true">
  <transf name="unfold" proved="true" arg1="produces&#39;0">
   <goal name="vc_produces_one.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_one.0.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.024109" steps="70958"/></proof>
    </goal>
    <goal name="vc_produces_one.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(singleton f)">
     <goal name="vc_produces_one.0.0.1.0" proved="true">
     <proof prover="0"><result status="valid" time="0.185817" steps="305248"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one.1.0" proved="true">
   <proof prover="3"><result status="valid" time="0.307296" steps="55876"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_05_map__map" proved="true">
 <goal name="vc_map" proved="true">
 <proof prover="1"><result status="valid" time="0.019946" steps="58"/></proof>
 </goal>
</theory>
</file>
</why3session>
