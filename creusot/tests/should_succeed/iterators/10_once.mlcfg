
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module C10Once_Once_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  type t_once 't =
    | C_Once (Core_Option_Option_Type.t_option 't)
    
  let function once_0 (self : t_once 't) : Core_Option_Option_Type.t_option 't = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Once a -> a
      end
end
module C10Once_Impl0_ProducesRefl_Impl
  type t
  predicate invariant1 (self : t)
  val invariant1 (self : t) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : t)
  val inv1 (_x : t) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : t . inv1 x = true
  use C10Once_Once_Type as C10Once_Once_Type
  predicate invariant0 (self : C10Once_Once_Type.t_once t)
  val invariant0 (self : C10Once_Once_Type.t_once t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : C10Once_Once_Type.t_once t)
  val inv0 (_x : C10Once_Once_Type.t_once t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : C10Once_Once_Type.t_once t . inv0 x = true
  use seq.Seq
  use Core_Option_Option_Type as Core_Option_Option_Type
  use seq.Seq
  use seq.Seq
  predicate produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t)
    
   =
    [#"../10_once.rs" 22 8 25 9] visited = Seq.empty  /\ self = o \/ (exists e : t . inv1 e /\ self = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_Some e) /\ visited = Seq.singleton e /\ o = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_None))
  val produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t) : bool
    ensures { result = produces0 self visited o }
    
  constant self  : C10Once_Once_Type.t_once t
  function produces_refl [#"../10_once.rs" 31 4 31 26] (self : C10Once_Once_Type.t_once t) : ()
  goal vc_produces_refl : ([#"../10_once.rs" 31 21 31 25] inv0 self)
   -> ([#"../10_once.rs" 30 14 30 45] produces0 self (Seq.empty ) self)
end
module C10Once_Impl0_ProducesTrans_Impl
  type t
  predicate invariant2 (self : t)
  val invariant2 (self : t) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : t)
  val inv2 (_x : t) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : t . inv2 x = true
  use seq.Seq
  predicate invariant1 (self : Seq.seq t)
  val invariant1 (self : Seq.seq t) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : Seq.seq t)
  val inv1 (_x : Seq.seq t) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : Seq.seq t . inv1 x = true
  use C10Once_Once_Type as C10Once_Once_Type
  predicate invariant0 (self : C10Once_Once_Type.t_once t)
  val invariant0 (self : C10Once_Once_Type.t_once t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : C10Once_Once_Type.t_once t)
  val inv0 (_x : C10Once_Once_Type.t_once t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : C10Once_Once_Type.t_once t . inv0 x = true
  use seq.Seq
  use seq.Seq
  use Core_Option_Option_Type as Core_Option_Option_Type
  use seq.Seq
  predicate produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t)
    
   =
    [#"../10_once.rs" 22 8 25 9] visited = Seq.empty  /\ self = o \/ (exists e : t . inv2 e /\ self = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_Some e) /\ visited = Seq.singleton e /\ o = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_None))
  val produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t) : bool
    ensures { result = produces0 self visited o }
    
  constant a  : C10Once_Once_Type.t_once t
  constant ab  : Seq.seq t
  constant b  : C10Once_Once_Type.t_once t
  constant bc  : Seq.seq t
  constant c  : C10Once_Once_Type.t_once t
  function produces_trans [#"../10_once.rs" 38 4 38 90] (a : C10Once_Once_Type.t_once t) (ab : Seq.seq t) (b : C10Once_Once_Type.t_once t) (bc : Seq.seq t) (c : C10Once_Once_Type.t_once t) : ()
    
  goal vc_produces_trans : ([#"../10_once.rs" 38 82 38 83] inv0 c)
   -> ([#"../10_once.rs" 38 61 38 63] inv1 bc)
   -> ([#"../10_once.rs" 38 52 38 53] inv0 b)
   -> ([#"../10_once.rs" 38 31 38 33] inv1 ab)
   -> ([#"../10_once.rs" 38 22 38 23] inv0 a)
   -> ([#"../10_once.rs" 36 15 36 32] produces0 b bc c)
   -> ([#"../10_once.rs" 35 15 35 32] produces0 a ab b)
   -> ([#"../10_once.rs" 37 14 37 42] produces0 a (Seq.(++) ab bc) c)
end
module C10Once_Impl0_Next
  type t
  predicate invariant3 (self : t)
  val invariant3 (self : t) : bool
    ensures { result = invariant3 self }
    
  predicate inv3 (_x : t)
  val inv3 (_x : t) : bool
    ensures { result = inv3 _x }
    
  axiom inv3 : forall x : t . inv3 x = true
  use Core_Option_Option_Type as Core_Option_Option_Type
  use prelude.Borrow
  predicate invariant2 (self : borrowed (Core_Option_Option_Type.t_option t))
  val invariant2 (self : borrowed (Core_Option_Option_Type.t_option t)) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : borrowed (Core_Option_Option_Type.t_option t))
  val inv2 (_x : borrowed (Core_Option_Option_Type.t_option t)) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : borrowed (Core_Option_Option_Type.t_option t) . inv2 x = true
  use C10Once_Once_Type as C10Once_Once_Type
  predicate invariant1 (self : borrowed (C10Once_Once_Type.t_once t))
  val invariant1 (self : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : borrowed (C10Once_Once_Type.t_once t))
  val inv1 (_x : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : borrowed (C10Once_Once_Type.t_once t) . inv1 x = true
  predicate invariant0 (self : Core_Option_Option_Type.t_option t)
  val invariant0 (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : Core_Option_Option_Type.t_option t)
  val inv0 (_x : Core_Option_Option_Type.t_option t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Core_Option_Option_Type.t_option t . inv0 x = true
  use seq.Seq
  use seq.Seq
  use seq.Seq
  predicate produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t)
    
   =
    [#"../10_once.rs" 22 8 25 9] visited = Seq.empty  /\ self = o \/ (exists e : t . inv3 e /\ self = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_Some e) /\ visited = Seq.singleton e /\ o = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_None))
  val produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t) : bool
    ensures { result = produces0 self visited o }
    
  predicate resolve0 (self : borrowed (C10Once_Once_Type.t_once t)) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve0 (self : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = resolve0 self }
    
  predicate completed0 [#"../10_once.rs" 15 4 15 35] (self : borrowed (C10Once_Once_Type.t_once t)) =
    [#"../10_once.rs" 16 20 16 57]  * self = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_None) /\ resolve0 self
  val completed0 [#"../10_once.rs" 15 4 15 35] (self : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = completed0 self }
    
  val take0 (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    requires {inv2 self}
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 29 0 126 1] result =  * self /\  ^ self = Core_Option_Option_Type.C_None }
    ensures { inv0 result }
    
  let rec cfg next [#"../10_once.rs" 44 4 44 35] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (C10Once_Once_Type.t_once t)) : Core_Option_Option_Type.t_option t
    requires {[#"../10_once.rs" 44 17 44 21] inv1 self}
    ensures { [#"../10_once.rs" 40 14 43 5] match result with
      | Core_Option_Option_Type.C_None -> completed0 self
      | Core_Option_Option_Type.C_Some v -> produces0 ( * self) (Seq.singleton v) ( ^ self)
      end }
    ensures { [#"../10_once.rs" 44 26 44 35] inv0 result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.t_option t;
  var self : borrowed (C10Once_Once_Type.t_once t) = self;
  var _3 : borrowed (Core_Option_Option_Type.t_option t);
  {
    goto BB0
  }
  BB0 {
    [#"../10_once.rs" 45 8 45 14] _3 <- Borrow.borrow_final (C10Once_Once_Type.once_0 ( * self)) (Borrow.inherit_id (Borrow.get_id self) 1);
    [#"../10_once.rs" 45 8 45 14] self <- { self with current = (let C10Once_Once_Type.C_Once x0 =  * self in C10Once_Once_Type.C_Once ( ^ _3)) ; };
    assume { inv0 ( ^ _3) };
    [#"../10_once.rs" 45 8 45 21] _0 <- ([#"../10_once.rs" 45 8 45 21] take0 _3);
    _3 <- any borrowed (Core_Option_Option_Type.t_option t);
    goto BB1
  }
  BB1 {
    assert { [@expl:type invariant] inv1 self };
    assume { resolve0 self };
    return _0
  }
  
end
module C10Once_Impl0
  type t
  predicate invariant4 (self : t)
  val invariant4 (self : t) : bool
    ensures { result = invariant4 self }
    
  predicate inv4 (_x : t)
  val inv4 (_x : t) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : t . inv4 x = true
  use Core_Option_Option_Type as Core_Option_Option_Type
  predicate invariant3 (self : Core_Option_Option_Type.t_option t)
  val invariant3 (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = invariant3 self }
    
  predicate inv3 (_x : Core_Option_Option_Type.t_option t)
  val inv3 (_x : Core_Option_Option_Type.t_option t) : bool
    ensures { result = inv3 _x }
    
  axiom inv3 : forall x : Core_Option_Option_Type.t_option t . inv3 x = true
  use C10Once_Once_Type as C10Once_Once_Type
  use prelude.Borrow
  predicate invariant2 (self : borrowed (C10Once_Once_Type.t_once t))
  val invariant2 (self : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : borrowed (C10Once_Once_Type.t_once t))
  val inv2 (_x : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : borrowed (C10Once_Once_Type.t_once t) . inv2 x = true
  use seq.Seq
  predicate invariant1 (self : Seq.seq t)
  val invariant1 (self : Seq.seq t) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : Seq.seq t)
  val inv1 (_x : Seq.seq t) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : Seq.seq t . inv1 x = true
  predicate invariant0 (self : C10Once_Once_Type.t_once t)
  val invariant0 (self : C10Once_Once_Type.t_once t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : C10Once_Once_Type.t_once t)
  val inv0 (_x : C10Once_Once_Type.t_once t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : C10Once_Once_Type.t_once t . inv0 x = true
  use seq.Seq
  use seq.Seq
  use seq.Seq
  predicate resolve0 (self : borrowed (C10Once_Once_Type.t_once t)) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve0 (self : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = resolve0 self }
    
  predicate completed0 [#"../10_once.rs" 15 4 15 35] (self : borrowed (C10Once_Once_Type.t_once t)) =
    [#"../10_once.rs" 16 20 16 57]  * self = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_None) /\ resolve0 self
  val completed0 [#"../10_once.rs" 15 4 15 35] (self : borrowed (C10Once_Once_Type.t_once t)) : bool
    ensures { result = completed0 self }
    
  use seq.Seq
  predicate produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t)
    
   =
    [#"../10_once.rs" 22 8 25 9] visited = Seq.empty  /\ self = o \/ (exists e : t . inv4 e /\ self = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_Some e) /\ visited = Seq.singleton e /\ o = C10Once_Once_Type.C_Once (Core_Option_Option_Type.C_None))
  val produces0 [#"../10_once.rs" 21 4 21 64] (self : C10Once_Once_Type.t_once t) (visited : Seq.seq t) (o : C10Once_Once_Type.t_once t) : bool
    ensures { result = produces0 self visited o }
    
  goal produces_trans_refn : [#"../10_once.rs" 38 4 38 90] forall a : C10Once_Once_Type.t_once t . forall ab : Seq.seq t . forall b : C10Once_Once_Type.t_once t . forall bc : Seq.seq t . forall c : C10Once_Once_Type.t_once t . inv0 c /\ inv1 bc /\ inv0 b /\ inv1 ab /\ inv0 a /\ produces0 b bc c /\ produces0 a ab b
   -> inv0 c /\ inv1 bc /\ inv0 b /\ inv1 ab /\ inv0 a /\ produces0 b bc c /\ produces0 a ab b /\ (forall result : () . produces0 a (Seq.(++) ab bc) c
   -> produces0 a (Seq.(++) ab bc) c)
  goal next_refn : [#"../10_once.rs" 44 4 44 35] forall self : borrowed (C10Once_Once_Type.t_once t) . inv2 self
   -> inv2 self /\ (forall result : Core_Option_Option_Type.t_option t . inv3 result /\ match result with
    | Core_Option_Option_Type.C_None -> completed0 self
    | Core_Option_Option_Type.C_Some v -> produces0 ( * self) (Seq.singleton v) ( ^ self)
    end
   -> inv3 result /\ match result with
    | Core_Option_Option_Type.C_None -> completed0 self
    | Core_Option_Option_Type.C_Some v -> produces0 ( * self) (Seq.singleton v) ( ^ self)
    end)
  goal produces_refl_refn : [#"../10_once.rs" 31 4 31 26] forall self : C10Once_Once_Type.t_once t . inv0 self
   -> inv0 self /\ (forall result : () . produces0 self (Seq.empty ) self  -> produces0 self (Seq.empty ) self)
end
