<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="03_std_iterators.mlcfg"/>
<theory name="C03StdIterators_SliceIter" proved="true">
 <goal name="slice_iter&#39;vc" expl="VC for slice_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.108748" steps="2158"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_VecIter" proved="true">
 <goal name="vec_iter&#39;vc" expl="VC for vec_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.095837" steps="1836"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_AllZero" proved="true">
 <goal name="all_zero&#39;vc" expl="VC for all_zero" proved="true">
 <proof prover="5"><result status="valid" time="2.233738" steps="7618123"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_SkipTake" proved="true">
 <goal name="skip_take&#39;vc" expl="VC for skip_take" proved="true">
 <proof prover="0"><result status="valid" time="0.017024" steps="236"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter_Closure0" proved="true">
 <goal name="c03stditerators_counter_closure0&#39;vc" expl="VC for c03stditerators_counter_closure0" proved="true">
 <proof prover="0"><result status="valid" time="0.016591" steps="193"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter" proved="true">
 <goal name="counter&#39;vc" expl="VC for counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="counter&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015346" steps="13"/></proof>
  </goal>
  <goal name="counter&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013505" steps="12"/></proof>
  </goal>
  <goal name="counter&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013377" steps="100"/></proof>
  </goal>
  <goal name="counter&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.036443" steps="498"/></proof>
  </goal>
  <goal name="counter&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.036352" steps="385"/></proof>
  </goal>
  <goal name="counter&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.016501" steps="26"/></proof>
  </goal>
  <goal name="counter&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.012931" steps="28"/></proof>
  </goal>
  <goal name="counter&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017793" steps="24"/></proof>
  </goal>
  <goal name="counter&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.168834" steps="614"/></proof>
  </goal>
  <goal name="counter&#39;vc.9" expl="assertion" proved="true">
  <proof prover="5" timelimit="1"><result status="valid" time="0.065371" steps="288507"/></proof>
  </goal>
  <goal name="counter&#39;vc.10" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.203151" steps="57523"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C03StdIterators_SumRange" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="4"><result status="valid" time="0.102982" steps="32129"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_EnumerateRange" proved="true">
 <goal name="enumerate_range&#39;vc" expl="VC for enumerate_range" proved="true">
 <proof prover="5"><result status="valid" time="1.440527" steps="3592868"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_MyReverse" proved="true">
 <goal name="my_reverse&#39;vc" expl="VC for my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="my_reverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013162" steps="8"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.010626" steps="14"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.015183" steps="17"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.010218" steps="21"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.013437" steps="37"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.5" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.014181" steps="27"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.6" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.017341" steps="27"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.016700" steps="40"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010123" steps="31"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015943" steps="46"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013265" steps="48"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010001" steps="37"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017360" steps="37"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.013872" steps="44"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.021824" steps="59"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.017024" steps="62"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.024180" steps="130"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.017360" steps="134"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.024086" steps="138"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017494" steps="75"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016073" steps="80"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.201396" steps="3601"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.452606" steps="85058"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.443452" steps="85861"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.24" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.391394" steps="86683"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.025398" steps="146"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.023635" steps="135"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.019823" steps="136"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.088538" steps="1268"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.027717" steps="149"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.236373" steps="91901"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.675607" steps="385994"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.386931" steps="152462"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
