<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="03_std_iterators.coma"/>
<theory name="M_03_std_iterators__slice_iter" proved="true">
 <goal name="vc_slice_iter" proved="true">
 <proof prover="2"><result status="valid" time="0.104407" steps="1613"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__vec_iter" proved="true">
 <goal name="vc_vec_iter" proved="true">
 <proof prover="2"><result status="valid" time="0.121294" steps="2063"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__all_zero" proved="true">
 <goal name="vc_all_zero" proved="true">
 <proof prover="2"><result status="valid" time="0.148592" steps="1930"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__skip_take" proved="true">
 <goal name="vc_skip_take" proved="true">
 <proof prover="2"><result status="valid" time="0.040673" steps="277"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__counter" proved="true">
 <goal name="vc_counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_counter.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.013694" steps="3"/></proof>
  </goal>
  <goal name="vc_counter.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.013632" steps="4"/></proof>
  </goal>
  <goal name="vc_counter.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.027072" steps="90920"/></proof>
  </goal>
  <goal name="vc_counter.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.017393" steps="14"/></proof>
  </goal>
  <goal name="vc_counter.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.028716" steps="217"/></proof>
  </goal>
  <goal name="vc_counter.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.039402" steps="462"/></proof>
  </goal>
  <goal name="vc_counter.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.019799" steps="83"/></proof>
  </goal>
  <goal name="vc_counter.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.015260" steps="14"/></proof>
  </goal>
  <goal name="vc_counter.8" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.071451" steps="307099"/></proof>
  </goal>
  <goal name="vc_counter.9" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.058705" steps="265223"/></proof>
  </goal>
  <goal name="vc_counter.10" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.088457" steps="391768"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_03_std_iterators__counter__qyClosure0" proved="true">
 <goal name="vc_m_03_std_iterators__counter__qyClosure0" proved="true">
 <proof prover="4"><result status="valid" time="0.084475" steps="10123"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__sum_range" proved="true">
 <goal name="vc_sum_range" proved="true">
 <proof prover="2"><result status="valid" time="0.172639" steps="2741"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__enumerate_range" proved="true">
 <goal name="vc_enumerate_range" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_enumerate_range.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.018426" steps="7841"/></proof>
  </goal>
  <goal name="vc_enumerate_range.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.034465" steps="11414"/></proof>
  </goal>
  <goal name="vc_enumerate_range.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.039798" steps="12998"/></proof>
  </goal>
  <goal name="vc_enumerate_range.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.014045" steps="7164"/></proof>
  </goal>
  <goal name="vc_enumerate_range.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.014189" steps="7163"/></proof>
  </goal>
  <goal name="vc_enumerate_range.5" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.036627" steps="12072"/></proof>
  </goal>
  <goal name="vc_enumerate_range.6" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030398" steps="12378"/></proof>
  </goal>
  <goal name="vc_enumerate_range.7" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.021874" steps="10283"/></proof>
  </goal>
  <goal name="vc_enumerate_range.8" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030215" steps="12118"/></proof>
  </goal>
  <goal name="vc_enumerate_range.9" proved="true">
  <proof prover="1"><result status="valid" time="0.051974" steps="16854"/></proof>
  </goal>
  <goal name="vc_enumerate_range.10" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.057671" steps="10406"/></proof>
  </goal>
  <goal name="vc_enumerate_range.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.036495" steps="13346"/></proof>
  </goal>
  <goal name="vc_enumerate_range.12" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.044430" steps="15135"/></proof>
  </goal>
  <goal name="vc_enumerate_range.13" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.514453" steps="127329"/></proof>
  </goal>
  <goal name="vc_enumerate_range.14" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.033681" steps="13897"/></proof>
  </goal>
  <goal name="vc_enumerate_range.15" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022592" steps="10826"/></proof>
  </goal>
  <goal name="vc_enumerate_range.16" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.032130" steps="13304"/></proof>
  </goal>
  <goal name="vc_enumerate_range.17" proved="true">
  <proof prover="4"><result status="valid" time="0.027799" steps="11229"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_03_std_iterators__my_reverse" proved="true">
 <goal name="vc_my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_my_reverse.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020454" steps="9"/></proof>
  </goal>
  <goal name="vc_my_reverse.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.020352" steps="10"/></proof>
  </goal>
  <goal name="vc_my_reverse.2" expl="division by zero" proved="true">
  <proof prover="5"><result status="valid" time="0.012192" steps="10054"/></proof>
  </goal>
  <goal name="vc_my_reverse.3" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.021821" steps="33"/></proof>
  </goal>
  <goal name="vc_my_reverse.4" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.022519" steps="17"/></proof>
  </goal>
  <goal name="vc_my_reverse.5" expl="division by zero" proved="true">
  <proof prover="5"><result status="valid" time="0.012041" steps="10717"/></proof>
  </goal>
  <goal name="vc_my_reverse.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.022492" steps="31"/></proof>
  </goal>
  <goal name="vc_my_reverse.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.022920" steps="37"/></proof>
  </goal>
  <goal name="vc_my_reverse.8" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.029755" steps="144761"/></proof>
  </goal>
  <goal name="vc_my_reverse.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020027" steps="23"/></proof>
  </goal>
  <goal name="vc_my_reverse.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.022901" steps="25"/></proof>
  </goal>
  <goal name="vc_my_reverse.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.021634" steps="25"/></proof>
  </goal>
  <goal name="vc_my_reverse.12" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.023344" steps="45"/></proof>
  </goal>
  <goal name="vc_my_reverse.13" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.027823" steps="104"/></proof>
  </goal>
  <goal name="vc_my_reverse.14" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.026441" steps="108"/></proof>
  </goal>
  <goal name="vc_my_reverse.15" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.025141" steps="112"/></proof>
  </goal>
  <goal name="vc_my_reverse.16" expl="loop invariant" proved="true">
  <proof prover="5"><result status="valid" time="0.034202" steps="188823"/></proof>
  </goal>
  <goal name="vc_my_reverse.17" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.025686" steps="61"/></proof>
  </goal>
  <goal name="vc_my_reverse.18" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024318" steps="41"/></proof>
  </goal>
  <goal name="vc_my_reverse.19" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.032337" steps="58"/></proof>
  </goal>
  <goal name="vc_my_reverse.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.024595" steps="65"/></proof>
  </goal>
  <goal name="vc_my_reverse.21" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.193242" steps="2512"/></proof>
  </goal>
  <goal name="vc_my_reverse.22" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.204987" steps="3136"/></proof>
  </goal>
  <goal name="vc_my_reverse.23" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.279442" steps="3772"/></proof>
  </goal>
  <goal name="vc_my_reverse.24" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.050368" steps="260222"/></proof>
  </goal>
  <goal name="vc_my_reverse.25" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.049282" steps="260551"/></proof>
  </goal>
  <goal name="vc_my_reverse.26" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.26.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="inv_axiom&#39;3">
    <goal name="vc_my_reverse.26.0.0" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_my_reverse.26.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.026869" steps="63"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.026958" steps="137"/></proof>
  </goal>
  <goal name="vc_my_reverse.28" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.052237" steps="266548"/></proof>
  </goal>
  <goal name="vc_my_reverse.29" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.506667" steps="81838"/></proof>
  </goal>
  <goal name="vc_my_reverse.30" expl="loop invariant" proved="true">
  <proof prover="5"><result status="valid" time="0.014786" steps="15304"/></proof>
  </goal>
  <goal name="vc_my_reverse.31" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.31.0" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="0.735461" steps="158591"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.32" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.32.0" expl="loop invariant" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_my_reverse.32.0.0" expl="loop invariant" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_my_reverse.32.0.0.0" expl="loop invariant" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_my_reverse.32.0.0.0.0" expl="loop invariant" proved="true">
      <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="1.955957" steps="397948"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.33" expl="loop invariant" proved="true">
  <proof prover="5"><result status="valid" time="0.701053" steps="2569451"/></proof>
  </goal>
  <goal name="vc_my_reverse.34" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.032105" steps="136"/></proof>
  </goal>
  <goal name="vc_my_reverse.35" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.087417" steps="838"/></proof>
  </goal>
  <goal name="vc_my_reverse.36" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.037229" steps="130"/></proof>
  </goal>
  <goal name="vc_my_reverse.37" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.029814" steps="130"/></proof>
  </goal>
  <goal name="vc_my_reverse.38" proved="true">
  <proof prover="2"><result status="valid" time="0.028494" steps="72"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
