<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="03_std_iterators.mlcfg"/>
<theory name="C03StdIterators_SliceIter" proved="true">
 <goal name="slice_iter&#39;vc" expl="VC for slice_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.158075" steps="1313"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_VecIter" proved="true">
 <goal name="vec_iter&#39;vc" expl="VC for vec_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.215396" steps="1232"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_AllZero" proved="true">
 <goal name="all_zero&#39;vc" expl="VC for all_zero" proved="true">
 <proof prover="0"><result status="valid" time="0.215967" steps="2008"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_SkipTake" proved="true">
 <goal name="skip_take&#39;vc" expl="VC for skip_take" proved="true">
 <proof prover="0"><result status="valid" time="0.020000" steps="240"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter_Closure0" proved="true">
 <goal name="c03StdIterators_Counter_Closure0&#39;vc" expl="VC for c03StdIterators_Counter_Closure0" proved="true">
 <proof prover="0"><result status="valid" time="0.020000" steps="126"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter" proved="true">
 <goal name="counter&#39;vc" expl="VC for counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="counter&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="counter&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.028332" steps="12"/></proof>
  </goal>
  <goal name="counter&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="89"/></proof>
  </goal>
  <goal name="counter&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.059895" steps="193434"/></proof>
  </goal>
  <goal name="counter&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="302"/></proof>
  </goal>
  <goal name="counter&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.056748" steps="110885"/></proof>
  </goal>
  <goal name="counter&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.024487" steps="26"/></proof>
  </goal>
  <goal name="counter&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.025325" steps="22"/></proof>
  </goal>
  <goal name="counter&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.234495" steps="618"/></proof>
  </goal>
  <goal name="counter&#39;vc.9" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="271726"/></proof>
  </goal>
  <goal name="counter&#39;vc.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.118193" steps="414854"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C03StdIterators_SumRange" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="0"><result status="valid" time="0.383139" steps="1656"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_EnumerateRange" proved="true">
 <goal name="enumerate_range&#39;vc" expl="VC for enumerate_range" proved="true">
 <proof prover="0"><result status="valid" time="0.236249" steps="2261"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_MyReverse" proved="true">
 <goal name="my_reverse&#39;vc" expl="VC for my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="my_reverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.067079" steps="19437"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016334" steps="14"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.059613" steps="26526"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.042711" steps="26233"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.4" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.043480" steps="26244"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.067909" steps="30060"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.6" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.045045" steps="27890"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.056021" steps="28281"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.041619" steps="27909"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.082838" steps="28590"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.064227" steps="28606"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.067717" steps="28242"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.116451" steps="28245"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.047024" steps="29036"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.062704" steps="29099"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.059406" steps="29239"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.101071" steps="38856"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.210750" steps="39303"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.128860" steps="39578"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.232471" steps="36567"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.237774" steps="38228"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.714636" steps="10396"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.610429" steps="70898"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.514444" steps="70879"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.594327" steps="73015"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.296823" steps="43971"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.255419" steps="40055"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.246796" steps="40080"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.342139" steps="49704"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.356173" steps="44657"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.654114" steps="91124"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="1.770357" steps="398532"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.968666" steps="150354"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
