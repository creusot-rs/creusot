<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="03_std_iterators.coma"/>
<theory name="M_03_std_iterators__slice_iter" proved="true">
 <goal name="vc_slice_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.108748" steps="952"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__vec_iter" proved="true">
 <goal name="vc_vec_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.095837" steps="996"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__all_zero" proved="true">
 <goal name="vc_all_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_all_zero.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.017460" steps="7828"/></proof>
  </goal>
  <goal name="vc_all_zero.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.017685" steps="7827"/></proof>
  </goal>
  <goal name="vc_all_zero.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.017439" steps="7837"/></proof>
  </goal>
  <goal name="vc_all_zero.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.013385" steps="6973"/></proof>
  </goal>
  <goal name="vc_all_zero.4" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.071851" steps="12258"/></proof>
  </goal>
  <goal name="vc_all_zero.5" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.028463" steps="12341"/></proof>
  </goal>
  <goal name="vc_all_zero.6" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.021154" steps="10201"/></proof>
  </goal>
  <goal name="vc_all_zero.7" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.038730" steps="540"/></proof>
  </goal>
  <goal name="vc_all_zero.8" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.047829" steps="17087"/></proof>
  </goal>
  <goal name="vc_all_zero.9" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.132721" steps="21620"/></proof>
  </goal>
  <goal name="vc_all_zero.10" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.039921" steps="13182"/></proof>
  </goal>
  <goal name="vc_all_zero.11" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030408" steps="12922"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_03_std_iterators__skip_take" proved="true">
 <goal name="vc_skip_take" proved="true">
 <proof prover="0"><result status="valid" time="0.017024" steps="239"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__counter__qy123zclosureqy35z0qy125z" proved="true">
 <goal name="vc_c03stditerators_counter_closure0" proved="true">
 <proof prover="0"><result status="valid" time="0.016591" steps="137"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__counter" proved="true">
 <goal name="vc_counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_counter.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017793" steps="3"/></proof>
  </goal>
  <goal name="vc_counter.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.012931" steps="4"/></proof>
  </goal>
  <goal name="vc_counter.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.016501" steps="13"/></proof>
  </goal>
  <goal name="vc_counter.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015346" steps="15"/></proof>
  </goal>
  <goal name="vc_counter.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.036352" steps="279"/></proof>
  </goal>
  <goal name="vc_counter.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.036443" steps="473"/></proof>
  </goal>
  <goal name="vc_counter.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013377" steps="81"/></proof>
  </goal>
  <goal name="vc_counter.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013505" steps="14"/></proof>
  </goal>
  <goal name="vc_counter.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.105766" steps="306"/></proof>
  </goal>
  <goal name="vc_counter.9" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.065371" steps="175132"/></proof>
  </goal>
  <goal name="vc_counter.10" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.203748" steps="44595"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_03_std_iterators__sum_range" proved="true">
 <goal name="vc_sum_range" proved="true">
 <proof prover="4"><result status="valid" time="0.215762" steps="23461"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__enumerate_range" proved="true">
 <goal name="vc_enumerate_range" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_enumerate_range.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.027479" steps="7802"/></proof>
  </goal>
  <goal name="vc_enumerate_range.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.018966" steps="7130"/></proof>
  </goal>
  <goal name="vc_enumerate_range.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.019991" steps="7129"/></proof>
  </goal>
  <goal name="vc_enumerate_range.3" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.067087" steps="12033"/></proof>
  </goal>
  <goal name="vc_enumerate_range.4" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.039372" steps="12339"/></proof>
  </goal>
  <goal name="vc_enumerate_range.5" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.024705" steps="10249"/></proof>
  </goal>
  <goal name="vc_enumerate_range.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.041220" steps="13294"/></proof>
  </goal>
  <goal name="vc_enumerate_range.7" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.039919" steps="15020"/></proof>
  </goal>
  <goal name="vc_enumerate_range.8" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.563592" steps="115947"/></proof>
  </goal>
  <goal name="vc_enumerate_range.9" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.058826" steps="13771"/></proof>
  </goal>
  <goal name="vc_enumerate_range.10" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.026985" steps="10746"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_03_std_iterators__my_reverse" proved="true">
 <goal name="vc_my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_my_reverse.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015943" steps="4"/></proof>
  </goal>
  <goal name="vc_my_reverse.1" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.014181" steps="10"/></proof>
  </goal>
  <goal name="vc_my_reverse.2" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.010218" steps="13"/></proof>
  </goal>
  <goal name="vc_my_reverse.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.013437" steps="29"/></proof>
  </goal>
  <goal name="vc_my_reverse.4" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.015183" steps="17"/></proof>
  </goal>
  <goal name="vc_my_reverse.5" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.017341" steps="17"/></proof>
  </goal>
  <goal name="vc_my_reverse.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.016700" steps="31"/></proof>
  </goal>
  <goal name="vc_my_reverse.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013265" steps="37"/></proof>
  </goal>
  <goal name="vc_my_reverse.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013162" steps="41"/></proof>
  </goal>
  <goal name="vc_my_reverse.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010001" steps="24"/></proof>
  </goal>
  <goal name="vc_my_reverse.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.023635" steps="25"/></proof>
  </goal>
  <goal name="vc_my_reverse.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010123" steps="25"/></proof>
  </goal>
  <goal name="vc_my_reverse.12" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.088538" steps="44"/></proof>
  </goal>
  <goal name="vc_my_reverse.13" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017360" steps="98"/></proof>
  </goal>
  <goal name="vc_my_reverse.14" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024086" steps="102"/></proof>
  </goal>
  <goal name="vc_my_reverse.15" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.027717" steps="106"/></proof>
  </goal>
  <goal name="vc_my_reverse.16" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.158705" steps="35705"/></proof>
  </goal>
  <goal name="vc_my_reverse.17" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.067647" steps="22006"/></proof>
  </goal>
  <goal name="vc_my_reverse.18" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.083258" steps="23845"/></proof>
  </goal>
  <goal name="vc_my_reverse.19" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024180" steps="41"/></proof>
  </goal>
  <goal name="vc_my_reverse.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017360" steps="64"/></proof>
  </goal>
  <goal name="vc_my_reverse.21" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.010626" steps="78"/></proof>
  </goal>
  <goal name="vc_my_reverse.22" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.469169" steps="6293"/></proof>
  </goal>
  <goal name="vc_my_reverse.23" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.349364" steps="48702"/></proof>
  </goal>
  <goal name="vc_my_reverse.24" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.285740" steps="48590"/></proof>
  </goal>
  <goal name="vc_my_reverse.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017494" steps="104"/></proof>
  </goal>
  <goal name="vc_my_reverse.26" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.163366" steps="29772"/></proof>
  </goal>
  <goal name="vc_my_reverse.27" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.399048" steps="48977"/></proof>
  </goal>
  <goal name="vc_my_reverse.28" expl="assertion" proved="true">
  <transf name="remove" proved="true" arg1="completed&#39;0">
   <goal name="vc_my_reverse.28.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.650527" steps="52676"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.29" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.019823" steps="78"/></proof>
  </goal>
  <goal name="vc_my_reverse.30" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.30.0" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="1.138514" steps="110511"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.31" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.31.0" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.861424" steps="75869"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.32" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.477805" steps="69669"/></proof>
  </goal>
  <goal name="vc_my_reverse.33" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.223452" steps="44345"/></proof>
  </goal>
  <goal name="vc_my_reverse.34" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.063197" steps="24083"/></proof>
  </goal>
  <goal name="vc_my_reverse.35" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.263299" steps="28119"/></proof>
  </goal>
  <goal name="vc_my_reverse.36" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017024" steps="137"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
