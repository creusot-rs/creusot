<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="03_std_iterators.mlcfg"/>
<theory name="C03StdIterators_SliceIter" proved="true">
 <goal name="slice_iter&#39;vc" expl="VC for slice_iter" proved="true">
 <proof prover="1"><result status="valid" time="0.158075" steps="2357"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_VecIter" proved="true">
 <goal name="vec_iter&#39;vc" expl="VC for vec_iter" proved="true">
 <proof prover="1"><result status="valid" time="0.068472" steps="2154"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_AllZero" proved="true">
 <goal name="all_zero&#39;vc" expl="VC for all_zero" proved="true">
 <proof prover="1"><result status="valid" time="0.215967" steps="3841"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_SkipTake" proved="true">
 <goal name="skip_take&#39;vc" expl="VC for skip_take" proved="true">
 <proof prover="1"><result status="valid" time="0.020000" steps="245"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter_Closure0" proved="true">
 <goal name="c03StdIterators_Counter_Closure0&#39;vc" expl="VC for c03StdIterators_Counter_Closure0" proved="true">
 <proof prover="1"><result status="valid" time="0.020000" steps="137"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter" proved="true">
 <goal name="counter&#39;vc" expl="VC for counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="counter&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="17"/></proof>
  </goal>
  <goal name="counter&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.028332" steps="16"/></proof>
  </goal>
  <goal name="counter&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="95"/></proof>
  </goal>
  <goal name="counter&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.059895" steps="216589"/></proof>
  </goal>
  <goal name="counter&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="330"/></proof>
  </goal>
  <goal name="counter&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.056748" steps="132933"/></proof>
  </goal>
  <goal name="counter&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024487" steps="31"/></proof>
  </goal>
  <goal name="counter&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.025325" steps="27"/></proof>
  </goal>
  <goal name="counter&#39;vc.8" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.212152" steps="633"/></proof>
  </goal>
  <goal name="counter&#39;vc.9" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.050000" steps="296132"/></proof>
  </goal>
  <goal name="counter&#39;vc.10" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.118193" steps="446700"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C03StdIterators_SumRange" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="1"><result status="valid" time="0.111099" steps="2049"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_EnumerateRange" proved="true">
 <goal name="enumerate_range&#39;vc" expl="VC for enumerate_range" proved="true">
 <proof prover="1"><result status="valid" time="0.236249" steps="2238"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_MyReverse" proved="true">
 <goal name="my_reverse&#39;vc" expl="VC for my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="my_reverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.032996" steps="14956"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.016334" steps="16"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.046112" steps="19875"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.038032" steps="19384"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.4" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.041819" steps="19391"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.166155" steps="21141"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.6" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.038767" steps="19407"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.186683" steps="20212"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.042483" steps="19408"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.054959" steps="20759"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.054220" steps="19533"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.043056" steps="19550"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.042858" steps="19553"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.043813" steps="20032"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.057108" steps="21478"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.056545" steps="21360"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.222862" steps="28144"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.217319" steps="28499"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.215902" steps="28942"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.182350" steps="26282"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.193220" steps="27508"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="1.695541" steps="31307"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.899271" steps="91454"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.935196" steps="92267"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.24" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="1.000659" steps="94634"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.25" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.283690" steps="34592"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.26" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.255111" steps="30214"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.212105" steps="30187"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.255125" steps="37062"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.275779" steps="35260"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.30" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="my_reverse&#39;vc.30.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.509768" steps="97900"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="my_reverse&#39;vc.31" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="my_reverse&#39;vc.31.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="1.279263" steps="341114"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="my_reverse&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.908398" steps="164406"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
