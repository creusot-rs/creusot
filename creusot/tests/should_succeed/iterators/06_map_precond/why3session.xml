<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="M_06_map_precond__qyi18374305379273630819" proved="true">
 <goal name="produces_trans_refn" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.010885" steps="0"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="4"><result status="valid" time="0.060943" steps="21808"/></proof>
 </goal>
 <goal name="produces_refl_refn" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.007106" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_refl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_refl.0.0.0.0" proved="true">
     <proof prover="0"><result status="valid" time="0.049011" steps="14249"/></proof>
     </goal>
     <goal name="vc_produces_refl.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(empty : seq (borrowed f))">
      <goal name="vc_produces_refl.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_refl.0.0.0.1.0.0" proved="true">
       <proof prover="3" timelimit="1"><result status="valid" time="0.018900" steps="23"/></proof>
       </goal>
       <goal name="vc_produces_refl.0.0.0.1.0.1" proved="true">
       <proof prover="3" timelimit="1"><result status="valid" time="0.017548" steps="8"/></proof>
       </goal>
       <goal name="vc_produces_refl.0.0.0.1.0.2" proved="true">
       <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H">
        <goal name="vc_produces_refl.0.0.0.1.0.2.0" proved="true">
        <proof prover="2" timelimit="1"><result status="valid" time="0.063039" steps="261425"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_trans" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.021772" steps="54"/></proof>
   </goal>
   <goal name="vc_produces_trans.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(fs++fs1)">
    <goal name="vc_produces_trans.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.051060" steps="409"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.029943" steps="47"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.2" proved="true">
     <transf name="exists" proved="true" arg1="(s++s1)">
      <goal name="vc_produces_trans.0.1.0.2.0" proved="true">
      <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
       <goal name="vc_produces_trans.0.1.0.2.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_trans.0.1.0.2.0.0.0" proved="true">
        <proof prover="3"><result status="valid" time="0.116568" steps="1151"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.1" proved="true">
        <proof prover="3"><result status="valid" time="0.031077" steps="53"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.2" proved="true">
        <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H">
         <goal name="vc_produces_trans.0.1.0.2.0.0.2.0" proved="true">
         <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H1">
          <goal name="vc_produces_trans.0.1.0.2.0.0.2.0.0" proved="true">
          <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H2">
           <goal name="vc_produces_trans.0.1.0.2.0.0.2.0.0.0" proved="true">
           <proof prover="4"><result status="valid" time="0.091605" steps="22919"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.3" proved="true">
        <proof prover="3"><result status="valid" time="0.032317" steps="46"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.4" proved="true">
        <proof prover="3"><result status="valid" time="0.091952" steps="479"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.5" proved="true">
        <proof prover="3"><result status="valid" time="0.031623" steps="93"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.6" proved="true">
        <proof prover="3"><result status="valid" time="0.053770" steps="271"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.7" proved="true">
        <proof prover="3"><result status="valid" time="0.058183" steps="331"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.8" proved="true">
        <proof prover="3"><result status="valid" time="0.181325" steps="854"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.9" proved="true">
        <transf name="instantiate" proved="true" arg1="H5" arg2="i">
         <goal name="vc_produces_trans.0.1.0.2.0.0.9.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
          <goal name="vc_produces_trans.0.1.0.2.0.0.9.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.263436" steps="2871"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.10" proved="true">
        <transf name="instantiate" proved="true" arg1="H5" arg2="i">
         <goal name="vc_produces_trans.0.1.0.2.0.0.10.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
          <goal name="vc_produces_trans.0.1.0.2.0.0.10.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.323021" steps="2886"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__next" proved="true">
 <goal name="vc_next" proved="true">
 <proof prover="4" timelimit="1"><result status="valid" time="0.145745" steps="38993"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__preservation_inv" proved="true">
 <goal name="vc_preservation_inv" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.073555" steps="19866"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one_invariant" proved="true">
 <goal name="vc_produces_one_invariant" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H5">
    <goal name="vc_produces_one_invariant.0.0.0" proved="true">
    <proof prover="4"><result status="valid" time="0.082495" steps="17431"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_produces_one_invariant.0.1" proved="true">
   <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H1">
    <goal name="vc_produces_one_invariant.0.1.0" proved="true">
    <transf name="unfold" proved="true" arg1="next_precondition&#39;0">
     <goal name="vc_produces_one_invariant.0.1.0.0" proved="true">
     <transf name="unfold" proved="true" arg1="invariant&#39;0" arg2="in" arg3="H1">
      <goal name="vc_produces_one_invariant.0.1.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one_invariant.0.1.0.0.0.0" proved="true">
       <transf name="unfold" proved="true" arg1="preservation_inv&#39;0" arg2="in" arg3="H6">
        <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0" proved="true">
        <transf name="replace" proved="true" arg1="(inner (t_Map__produced self))" arg2="(inner (t_Map__produced self)++empty)">
         <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="H6" arg2="with" arg3="r,i">
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.022035" steps="137"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="4"><result status="valid" time="0.080734" steps="12021"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.028182" steps="74"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.027905" steps="29"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="3"><result status="valid" time="0.013346" steps="26"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_produces_one_invariant.0.2" proved="true">
   <transf name="unfold" proved="true" arg1="preservation_inv&#39;0">
    <goal name="vc_produces_one_invariant.0.2.0" proved="true">
    <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H2">
     <goal name="vc_produces_one_invariant.0.2.0.0" proved="true">
     <transf name="unfold" proved="true" arg1="invariant&#39;0" arg2="in" arg3="H2">
      <goal name="vc_produces_one_invariant.0.2.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one_invariant.0.2.0.0.0.0" proved="true">
       <transf name="replace" proved="true" arg1="(snoc (inner (t_Map__produced self)) e ++ s)" arg2="(inner (t_Map__produced self) ++ cons e s)">
        <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0" proved="true">
        <transf name="unfold" proved="true" arg1="preservation_inv&#39;0" arg2="in" arg3="H14">
         <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="H14" arg2="with" arg3="b,i">
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.824079" steps="112188"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.031500" steps="46"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.050422" steps="191"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.047204" steps="193"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_one_invariant.0.2.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4"><result status="valid" time="0.059867" steps="13275"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one" proved="true">
 <goal name="vc_produces_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0">
    <goal name="vc_produces_one.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one.0.0.0.0" proved="true">
     <proof prover="3" timelimit="1"><result status="valid" time="0.017247" steps="19"/></proof>
     </goal>
     <goal name="vc_produces_one.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(singleton f)">
      <goal name="vc_produces_one.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one.0.0.0.1.0.0" proved="true">
       <proof prover="4" timelimit="1"><result status="valid" time="0.106575" steps="16895"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.1" proved="true">
       <proof prover="4" timelimit="1"><result status="valid" time="0.087038" steps="19721"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.2" proved="true">
       <transf name="exists" proved="true" arg1="(singleton e)">
        <goal name="vc_produces_one.0.0.0.1.0.2.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="vc_produces_one.0.0.0.1.0.2.0.0" proved="true">
         <proof prover="3"><result status="valid" time="0.024748" steps="82"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.1" proved="true">
         <proof prover="3"><result status="valid" time="0.016188" steps="22"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.2" proved="true">
         <proof prover="3"><result status="valid" time="0.015339" steps="16"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.3" proved="true">
         <proof prover="4"><result status="valid" time="0.613304" steps="113577"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.4" proved="true">
         <proof prover="3"><result status="valid" time="0.032982" steps="26"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.5" proved="true">
         <proof prover="3"><result status="valid" time="0.031105" steps="20"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.6" proved="true">
         <proof prover="3"><result status="valid" time="0.028779" steps="21"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.7" proved="true">
         <proof prover="3"><result status="valid" time="0.022084" steps="24"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.8" proved="true">
         <proof prover="3"><result status="valid" time="0.039822" steps="75"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.9" proved="true">
         <proof prover="2"><result status="valid" time="0.144432" steps="423846"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.10" proved="true">
         <proof prover="2"><result status="valid" time="0.117719" steps="443091"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one.1.0" proved="true">
   <proof prover="4" timelimit="1"><result status="valid" time="0.279111" steps="69222"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__map" proved="true">
 <goal name="vc_map" proved="true">
 <proof prover="4"><result status="valid" time="0.025407" steps="9830"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity" proved="true">
 <goal name="vc_identity" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.016418" steps="173"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity__qyClosure0" proved="true">
 <goal name="vc_m_06_map_precond__identity__qyClosure0" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.012097" steps="2"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__increment" proved="true">
 <goal name="vc_increment" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_increment.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.095944" steps="15426"/></proof>
  </goal>
  <goal name="vc_increment.1" expl="precondition" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.082459" steps="14633"/></proof>
  </goal>
  <goal name="vc_increment.2" expl="precondition" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.029129" steps="161"/></proof>
  </goal>
  <goal name="vc_increment.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.151673" steps="17192"/></proof>
  </goal>
  <goal name="vc_increment.4" expl="precondition" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.011868" steps="60"/></proof>
  </goal>
  <goal name="vc_increment.5" expl="type invariant" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.017114" steps="5"/></proof>
  </goal>
  <goal name="vc_increment.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.170203" steps="47713"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__increment__qyClosure2" proved="true">
 <goal name="vc_m_06_map_precond__increment__qyClosure2" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.009703" steps="9"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__counter" proved="true">
 <goal name="vc_counter" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.053608" steps="604"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__counter__qyClosure2" proved="true">
 <goal name="vc_m_06_map_precond__counter__qyClosure2" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.013350" steps="142"/></proof>
 </goal>
</theory>
</file>
</why3session>
