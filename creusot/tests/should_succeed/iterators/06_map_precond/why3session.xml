<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_refl__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.039759" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_refl" proved="true">
 <goal name="vc_produces_refl&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl&#39;0.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl&#39;0.0.0" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="vc_produces_refl&#39;0.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.196813" steps="393443"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_trans__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.038764" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_trans" proved="true">
 <goal name="vc_produces_trans&#39;0" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans&#39;0.0.0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.021772" steps="57"/></proof>
   </goal>
   <goal name="vc_produces_trans&#39;0.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(fs++fs1)">
    <goal name="vc_produces_trans&#39;0.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans&#39;0.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.051060" steps="373"/></proof>
     </goal>
     <goal name="vc_produces_trans&#39;0.0.1.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.029943" steps="48"/></proof>
     </goal>
     <goal name="vc_produces_trans&#39;0.0.1.0.2" proved="true">
     <transf name="exists" proved="true" arg1="(s++s1)">
      <goal name="vc_produces_trans&#39;0.0.1.0.2.0" proved="true">
      <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
       <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.0" proved="true">
        <proof prover="3"><result status="valid" time="0.116568" steps="1126"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.1" proved="true">
        <proof prover="3"><result status="valid" time="0.031077" steps="56"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.2" proved="true">
        <proof prover="4"><result status="valid" time="0.198506" steps="17839"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.3" proved="true">
        <proof prover="3"><result status="valid" time="0.032317" steps="284"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.4" proved="true">
        <proof prover="3"><result status="valid" time="0.091952" steps="459"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.5" proved="true">
        <proof prover="3"><result status="valid" time="0.031623" steps="87"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.6" proved="true">
        <proof prover="3"><result status="valid" time="0.053770" steps="235"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.7" proved="true">
        <proof prover="3"><result status="valid" time="0.058183" steps="285"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.8" proved="true">
        <proof prover="3"><result status="valid" time="0.181325" steps="835"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.9" proved="true">
        <transf name="instantiate" proved="true" arg1="H5" arg2="i">
         <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.9.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
          <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.9.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.647754" steps="3824"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.10" proved="true">
        <transf name="instantiate" proved="true" arg1="H5" arg2="i">
         <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.10.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
          <goal name="vc_produces_trans&#39;0.0.1.0.2.0.0.10.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.759774" steps="3527"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__next__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.245987" steps="1212"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__next" proved="true">
 <goal name="vc_next&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.210941" steps="21214"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__preservation_inv" proved="true">
 <goal name="vc_preservation_inv&#39;0" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv&#39;0.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.182945" steps="17456"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one_invariant" proved="true">
 <goal name="vc_produces_one_invariant&#39;0" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant&#39;0.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.058933" steps="18736"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant&#39;0.0.1" proved="true">
   <transf name="unfold" proved="true" arg1="preservation_inv&#39;0">
    <goal name="vc_produces_one_invariant&#39;0.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one_invariant&#39;0.0.1.0.0" proved="true">
     <transf name="replace" proved="true" arg1="(snoc (inner self.t_Map__produced&#39;0) e ++ s)" arg2="(inner self.t_Map__produced&#39;0 ++ cons e s)">
      <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0" proved="true">
      <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H11">
       <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0" proved="true">
        <transf name="unfold" proved="true" arg1="invariant&#39;0" arg2="in" arg3="H12">
         <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0.0.0" proved="true">
          <transf name="unfold" proved="true" arg1="preservation_inv&#39;0" arg2="in" arg3="H13">
           <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0.0.0.0" proved="true">
           <transf name="apply" proved="true" arg1="H13" arg2="with" arg3="b,i">
            <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.973327" steps="113250"/></proof>
            </goal>
            <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="4"><result status="valid" time="0.045845" steps="11037"/></proof>
            </goal>
            <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.064677" steps="19335"/></proof>
            </goal>
            <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.029054" steps="189"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="vc_produces_one_invariant&#39;0.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="0.022588" steps="187"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_produces_one_invariant&#39;0.0.2" proved="true">
   <transf name="unfold" proved="true" arg1="next_precondition&#39;0">
    <goal name="vc_produces_one_invariant&#39;0.0.2.0" proved="true">
    <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H2">
     <goal name="vc_produces_one_invariant&#39;0.0.2.0.0" proved="true">
     <transf name="unfold" proved="true" arg1="invariant&#39;0" arg2="in" arg3="H2">
      <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0" proved="true">
       <transf name="replace" proved="true" arg1="(inner (self.t_Map__produced&#39;0))" arg2="(inner (self.t_Map__produced&#39;0)++empty)">
        <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0.0" proved="true">
        <transf name="unfold" proved="true" arg1="preservation_inv&#39;0" arg2="in" arg3="H7">
         <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="H7" arg2="with" arg3="r,i">
          <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="4"><result status="valid" time="0.052948" steps="12017"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.051170" steps="14969"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="4"><result status="valid" time="0.030185" steps="8214"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.016782" steps="55838"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_one_invariant&#39;0.0.2.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4"><result status="valid" time="0.030106" steps="9483"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one" proved="true">
 <goal name="vc_produces_one&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one&#39;0.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0">
    <goal name="vc_produces_one&#39;0.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one&#39;0.0.0.0.0" proved="true">
     <proof prover="3" timelimit="1"><result status="valid" time="0.017247" steps="18"/></proof>
     </goal>
     <goal name="vc_produces_one&#39;0.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(singleton f)">
      <goal name="vc_produces_one&#39;0.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one&#39;0.0.0.0.1.0.0" proved="true">
       <proof prover="4" timelimit="1"><result status="valid" time="0.106575" steps="16199"/></proof>
       </goal>
       <goal name="vc_produces_one&#39;0.0.0.0.1.0.1" proved="true">
       <proof prover="4" timelimit="1"><result status="valid" time="0.108061" steps="15958"/></proof>
       </goal>
       <goal name="vc_produces_one&#39;0.0.0.0.1.0.2" proved="true">
       <transf name="exists" proved="true" arg1="(singleton e)">
        <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.0" proved="true">
         <proof prover="3"><result status="valid" time="0.024748" steps="70"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.1" proved="true">
         <proof prover="3"><result status="valid" time="0.016188" steps="21"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.2" proved="true">
         <proof prover="3"><result status="valid" time="0.015339" steps="16"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.3" proved="true">
         <proof prover="4"><result status="valid" time="0.172796" steps="20401"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.4" proved="true">
         <proof prover="3"><result status="valid" time="0.032982" steps="25"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.5" proved="true">
         <proof prover="3"><result status="valid" time="0.031105" steps="20"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.6" proved="true">
         <proof prover="3"><result status="valid" time="0.028779" steps="20"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.7" proved="true">
         <proof prover="3"><result status="valid" time="0.022084" steps="23"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.8" proved="true">
         <proof prover="3"><result status="valid" time="0.039822" steps="70"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.9" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.9.0" proved="true">
          <proof prover="3"><result status="valid" time="0.079180" steps="444"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.10" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one&#39;0.0.0.0.1.0.2.0.10.0" proved="true">
          <proof prover="3"><result status="valid" time="0.087548" steps="446"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one&#39;0.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one&#39;0.1.0" proved="true">
   <proof prover="2"><result status="valid" time="0.332426" steps="396203"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__map" proved="true">
 <goal name="vc_map&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.034690" steps="5904"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity" proved="true">
 <goal name="vc_closure0&#39;0" proved="true">
 <proof prover="3"><result status="valid" time="0.011285" steps="2"/></proof>
 </goal>
 <goal name="vc_identity&#39;0" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.016418" steps="176"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__increment" proved="true">
 <goal name="vc_closure2&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.014634" steps="12089"/></proof>
 </goal>
 <goal name="vc_increment&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_increment&#39;0.0" expl="map &#39;iter&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.095944" steps="10593"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.1" expl="map &#39;func&#39; type invariant" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.082459" steps="12139"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.2" expl="map requires #0" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.029129" steps="48"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.3" expl="map requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.151673" steps="21206"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.4" expl="map requires #2" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.011868" steps="165"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.5" expl="type invariant" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.017114" steps="5"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.156018" steps="29021"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__counter" proved="true">
 <goal name="vc_closure2&#39;0" proved="true">
 <proof prover="3"><result status="valid" time="0.018386" steps="84"/></proof>
 </goal>
 <goal name="vc_counter&#39;0" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.075814" steps="672"/></proof>
 </goal>
</theory>
</file>
</why3session>
