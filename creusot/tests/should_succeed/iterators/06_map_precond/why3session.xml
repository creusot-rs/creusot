<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="M_06_map_precond__qy123zimplqy35z1qy125z__preservation_inv__Impl" proved="true">
 <goal name="vc_preservation_inv" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv.0" proved="true">
  <proof prover="4"><result status="valid" time="0.099951" steps="17889"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qy123zimplqy35z0qy125z__produces_refl__Impl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <proof prover="4"><result status="valid" time="0.232659" steps="40268"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qy123zimplqy35z0qy125z__produces_trans__Impl" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.021772" steps="53"/></proof>
   </goal>
   <goal name="vc_produces_trans.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(s ++ s1)">
    <goal name="vc_produces_trans.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans.0.1.0.0" proved="true">
     <proof prover="4" timelimit="5"><result status="valid" time="0.070653" steps="18406"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.1" proved="true">
     <proof prover="1"><result status="valid" time="0.012728" steps="47"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.2" proved="true">
     <proof prover="1"><result status="valid" time="0.015826" steps="164"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.3" proved="true">
     <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
      <goal name="vc_produces_trans.0.1.0.3.0" proved="true">
      <proof prover="1"><result status="valid" time="0.012639" steps="46"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_produces_trans.0.1.0.4" proved="true">
     <transf name="exists" proved="true" arg1="(fs ++ fs1)">
      <goal name="vc_produces_trans.0.1.0.4.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.1.0.4.0.0" proved="true">
       <proof prover="1" timelimit="5"><result status="valid" time="0.017402" steps="41"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.1" proved="true">
       <proof prover="1"><result status="valid" time="0.011721" steps="47"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.2" proved="true">
       <proof prover="1"><result status="valid" time="0.033880" steps="460"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.3" proved="true">
       <proof prover="1"><result status="valid" time="0.012953" steps="75"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.4" proved="true">
       <proof prover="1"><result status="valid" time="0.016946" steps="190"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.5" proved="true">
       <proof prover="1"><result status="valid" time="0.015711" steps="226"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.6" proved="true">
       <proof prover="1"><result status="valid" time="0.038186" steps="440"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.7" proved="true">
       <transf name="instantiate" proved="true" arg1="H5" arg2="i">
        <goal name="vc_produces_trans.0.1.0.4.0.7.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
         <goal name="vc_produces_trans.0.1.0.4.0.7.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.4.0.7.0.0.0" proved="true">
          <proof prover="1" timelimit="5"><result status="valid" time="0.497406" steps="3403"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.8" proved="true">
       <transf name="instantiate" proved="true" arg1="H5" arg2="i">
        <goal name="vc_produces_trans.0.1.0.4.0.8.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
         <goal name="vc_produces_trans.0.1.0.4.0.8.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.4.0.8.0.0.0" proved="true">
          <proof prover="1" timelimit="5"><result status="valid" time="0.404711" steps="3163"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qy123zimplqy35z1qy125z__produces_one__Impl" proved="true">
 <goal name="vc_produces_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0">
    <goal name="vc_produces_one.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one.0.0.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.017247" steps="18"/></proof>
     </goal>
     <goal name="vc_produces_one.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(singleton e)">
      <goal name="vc_produces_one.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one.0.0.0.1.0.0" proved="true">
       <proof prover="1" timelimit="5"><result status="valid" time="0.016743" steps="18"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.1" proved="true">
       <proof prover="1"><result status="valid" time="0.013185" steps="22"/></proof>
       <proof prover="2"><result status="valid" time="0.023326" steps="102565"/></proof>
       <proof prover="4"><result status="valid" time="0.045952" steps="17379"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.2" proved="true">
       <proof prover="1"><result status="valid" time="0.011003" steps="16"/></proof>
       <proof prover="2"><result status="valid" time="0.010783" steps="6783"/></proof>
       <proof prover="4"><result status="valid" time="0.019160" steps="11402"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.3" proved="true">
       <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
        <goal name="vc_produces_one.0.0.0.1.0.3.0" proved="true">
        <proof prover="1"><result status="valid" time="0.013811" steps="18"/></proof>
        <proof prover="2"><result status="valid" time="0.020732" steps="89029"/></proof>
        <proof prover="4"><result status="valid" time="0.027549" steps="13616"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.4" proved="true">
       <transf name="exists" proved="true" arg1="(singleton f)">
        <goal name="vc_produces_one.0.0.0.1.0.4.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="vc_produces_one.0.0.0.1.0.4.0.0" proved="true">
         <proof prover="4" timelimit="5"><result status="valid" time="0.046089" steps="12244"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.1" proved="true">
         <proof prover="1"><result status="valid" time="0.013284" steps="23"/></proof>
         <proof prover="2"><result status="valid" time="0.023567" steps="106858"/></proof>
         <proof prover="4"><result status="valid" time="0.048204" steps="18852"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.2" proved="true">
         <proof prover="1"><result status="valid" time="0.013682" steps="23"/></proof>
         <proof prover="2"><result status="valid" time="0.022966" steps="99769"/></proof>
         <proof prover="4"><result status="valid" time="0.044363" steps="16939"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.3" proved="true">
         <proof prover="1"><result status="valid" time="0.013380" steps="20"/></proof>
         <proof prover="2"><result status="valid" time="0.022006" steps="93150"/></proof>
         <proof prover="4"><result status="valid" time="0.031785" steps="14585"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.4" proved="true">
         <proof prover="1"><result status="valid" time="0.013456" steps="21"/></proof>
         <proof prover="2"><result status="valid" time="0.024576" steps="106120"/></proof>
         <proof prover="4"><result status="valid" time="0.047705" steps="17028"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.5" proved="true">
         <proof prover="1"><result status="valid" time="0.013884" steps="24"/></proof>
         <proof prover="2"><result status="valid" time="0.023757" steps="108251"/></proof>
         <proof prover="4"><result status="valid" time="0.037633" steps="18386"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.6" proved="true">
         <proof prover="1"><result status="valid" time="0.013849" steps="76"/></proof>
         <proof prover="2"><result status="valid" time="0.635133" steps="902011"/></proof>
         <proof prover="4"><result status="valid" time="0.164093" steps="18395"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.7" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one.0.0.0.1.0.4.0.7.0" proved="true">
          <proof prover="1"><result status="valid" time="0.027548" steps="459"/></proof>
          <proof prover="2"><result status="valid" time="0.639613" steps="840665"/></proof>
          <proof prover="4"><result status="valid" time="0.215629" steps="24360"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.8" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one.0.0.0.1.0.4.0.8.0" proved="true">
          <proof prover="1"><result status="valid" time="0.028342" steps="463"/></proof>
          <proof prover="2"><result status="valid" time="0.709077" steps="945526"/></proof>
          <proof prover="4"><result status="valid" time="0.188939" steps="24607"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one.1.0" proved="true">
   <proof prover="4"><result status="valid" time="0.539502" steps="67838"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qy123zimplqy35z1qy125z__produces_one_invariant__Impl" proved="true">
 <goal name="vc_produces_one_invariant" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant.0.0" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.100350" steps="16062"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.1" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.310194" steps="39055"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.2" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.056667" steps="571"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qy123zimplqy35z0qy125z__next" proved="true">
 <goal name="vc_next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_next.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.008094" steps="19"/></proof>
  </goal>
  <goal name="vc_next.1" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.016607" steps="282"/></proof>
  </goal>
  <goal name="vc_next.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.025477" steps="56"/></proof>
  </goal>
  <goal name="vc_next.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.013410" steps="97"/></proof>
  </goal>
  <goal name="vc_next.4" expl="assertion" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.079981" steps="14550"/></proof>
  </goal>
  <goal name="vc_next.5" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.015609" steps="85"/></proof>
  </goal>
  <goal name="vc_next.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018129" steps="87"/></proof>
  </goal>
  <goal name="vc_next.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022686" steps="91"/></proof>
  </goal>
  <goal name="vc_next.8" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.016607" steps="560"/></proof>
  </goal>
  <goal name="vc_next.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018129" steps="125"/></proof>
  </goal>
  <goal name="vc_next.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.014081" steps="572"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__map" proved="true">
 <goal name="vc_map" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.025407" steps="9239"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity__qy123zclosureqy35z0qy125z" proved="true">
 <goal name="vc_c06mapprecond_identity_closure0" proved="true">
 <proof prover="1"><result status="valid" time="0.012097" steps="2"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity" proved="true">
 <goal name="vc_identity" proved="true">
 <proof prover="1"><result status="valid" time="0.016418" steps="129"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__increment__qy123zclosureqy35z2qy125z" proved="true">
 <goal name="vc_c06mapprecond_increment_closure2" proved="true">
 <proof prover="1"><result status="valid" time="0.009703" steps="8"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__increment" proved="true">
 <goal name="vc_increment" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_increment.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.082459" steps="15202"/></proof>
  </goal>
  <goal name="vc_increment.1" expl="precondition" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.095944" steps="14485"/></proof>
  </goal>
  <goal name="vc_increment.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.029129" steps="82"/></proof>
  </goal>
  <goal name="vc_increment.3" expl="precondition" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.151673" steps="16540"/></proof>
  </goal>
  <goal name="vc_increment.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.011868" steps="38"/></proof>
  </goal>
  <goal name="vc_increment.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.017114" steps="6"/></proof>
  </goal>
  <goal name="vc_increment.6" expl="assertion" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.103075" steps="26062"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__counter__qy123zclosureqy35z2qy125z" proved="true">
 <goal name="vc_c06mapprecond_counter_closure2" proved="true">
 <proof prover="1"><result status="valid" time="0.013350" steps="123"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__counter" proved="true">
 <goal name="vc_counter" proved="true">
 <proof prover="1"><result status="valid" time="0.053608" steps="575"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qy123zimplqy35z0qy125z" proved="true">
 <goal name="produces_trans_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010885" steps="1"/></proof>
 <proof prover="4"><result status="valid" time="0.014456" steps="8735"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.067797" steps="1208"/></proof>
 <proof prover="4"><result status="valid" time="0.056562" steps="20992"/></proof>
 </goal>
 <goal name="produces_refl_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.007106" steps="1"/></proof>
 <proof prover="4"><result status="valid" time="0.014104" steps="8735"/></proof>
 </goal>
</theory>
</file>
</why3session>
