<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="06_map_precond.mlcfg"/>
<theory name="C06MapPrecond_Impl1_PreservationInv_Impl" proved="true">
 <goal name="vc_preservation_inv" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv.0" proved="true">
  <proof prover="4"><result status="valid" time="0.099951" steps="37233"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0_ProducesRefl_Impl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <proof prover="4"><result status="valid" time="0.712615" steps="93356"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0_ProducesTrans_Impl" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="unfold" proved="true" arg1="produces0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.015019" steps="157"/></proof>
   </goal>
   <goal name="vc_produces_trans.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(s ++ s1)">
    <goal name="vc_produces_trans.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans.0.1.0.0" proved="true">
     <proof prover="0"><result status="valid" time="0.011463" steps="44"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.1" proved="true">
     <proof prover="0"><result status="valid" time="0.012112" steps="49"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.2" proved="true">
     <proof prover="0"><result status="valid" time="0.014672" steps="165"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.3" proved="true">
     <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
      <goal name="vc_produces_trans.0.1.0.3.0" proved="true">
      <proof prover="0"><result status="valid" time="0.016467" steps="49"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_produces_trans.0.1.0.4" proved="true">
     <transf name="exists" proved="true" arg1="(fs ++ fs1)">
      <goal name="vc_produces_trans.0.1.0.4.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.1.0.4.0.0" proved="true">
       <proof prover="0"><result status="valid" time="0.013062" steps="44"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.1" proved="true">
       <proof prover="0"><result status="valid" time="0.012345" steps="49"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.2" proved="true">
       <proof prover="0"><result status="valid" time="0.033742" steps="501"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.3" proved="true">
       <proof prover="0"><result status="valid" time="0.012183" steps="77"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.4" proved="true">
       <proof prover="0"><result status="valid" time="0.015515" steps="188"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.5" proved="true">
       <proof prover="0"><result status="valid" time="0.016892" steps="223"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.6" proved="true">
       <proof prover="0"><result status="valid" time="0.042316" steps="638"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.7" proved="true">
       <transf name="instantiate" proved="true" arg1="H2" arg2="i">
        <goal name="vc_produces_trans.0.1.0.4.0.7.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H12" arg2="(i - length ab)">
         <goal name="vc_produces_trans.0.1.0.4.0.7.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.4.0.7.0.0.0" proved="true">
          <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.293550" steps="4865"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.8" proved="true">
       <transf name="instantiate" proved="true" arg1="H2" arg2="i">
        <goal name="vc_produces_trans.0.1.0.4.0.8.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H12" arg2="(i - length ab)">
         <goal name="vc_produces_trans.0.1.0.4.0.8.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.4.0.8.0.0.0" proved="true">
          <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.245215" steps="4174"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl1_ProducesOne_Impl" proved="true">
 <goal name="vc_produces_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces0">
    <goal name="vc_produces_one.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one.0.0.0.0" proved="true">
     <proof prover="0"><result status="valid" time="0.016712" steps="111"/></proof>
     </goal>
     <goal name="vc_produces_one.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(singleton e)">
      <goal name="vc_produces_one.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one.0.0.0.1.0.0" proved="true">
       <proof prover="0"><result status="valid" time="0.013181" steps="24"/></proof>
       <proof prover="2"><result status="valid" time="0.020326" steps="76005"/></proof>
       <proof prover="4"><result status="valid" time="0.055417" steps="12541"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.1" proved="true">
       <proof prover="0"><result status="valid" time="0.012033" steps="26"/></proof>
       <proof prover="2"><result status="valid" time="0.024662" steps="107400"/></proof>
       <proof prover="4"><result status="valid" time="0.100925" steps="17912"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.2" proved="true">
       <proof prover="0"><result status="valid" time="0.009999" steps="22"/></proof>
       <proof prover="2"><result status="valid" time="0.010803" steps="7212"/></proof>
       <proof prover="4"><result status="valid" time="0.044571" steps="11815"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.3" proved="true">
       <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
        <goal name="vc_produces_one.0.0.0.1.0.3.0" proved="true">
        <proof prover="0"><result status="valid" time="0.012098" steps="24"/></proof>
        <proof prover="2"><result status="valid" time="0.022250" steps="86479"/></proof>
        <proof prover="4"><result status="valid" time="0.064758" steps="14209"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.4" proved="true">
       <transf name="exists" proved="true" arg1="(singleton f)">
        <goal name="vc_produces_one.0.0.0.1.0.4.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="vc_produces_one.0.0.0.1.0.4.0.0" proved="true">
         <proof prover="0"><result status="valid" time="0.011752" steps="24"/></proof>
         <proof prover="2"><result status="valid" time="0.020753" steps="77466"/></proof>
         <proof prover="4"><result status="valid" time="0.056473" steps="12718"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.1" proved="true">
         <proof prover="0"><result status="valid" time="0.012017" steps="27"/></proof>
         <proof prover="2"><result status="valid" time="0.025316" steps="111681"/></proof>
         <proof prover="4"><result status="valid" time="0.108376" steps="19425"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.2" proved="true">
         <proof prover="0"><result status="valid" time="0.011937" steps="28"/></proof>
         <proof prover="2"><result status="valid" time="0.024098" steps="97796"/></proof>
         <proof prover="4"><result status="valid" time="0.096617" steps="17572"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.3" proved="true">
         <proof prover="0"><result status="valid" time="0.012075" steps="26"/></proof>
         <proof prover="2"><result status="valid" time="0.023324" steps="98107"/></proof>
         <proof prover="4"><result status="valid" time="0.071896" steps="15068"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.4" proved="true">
         <proof prover="0"><result status="valid" time="0.011953" steps="26"/></proof>
         <proof prover="2"><result status="valid" time="0.025087" steps="111117"/></proof>
         <proof prover="4"><result status="valid" time="0.083729" steps="17613"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.5" proved="true">
         <proof prover="0"><result status="valid" time="0.012075" steps="27"/></proof>
         <proof prover="2"><result status="valid" time="0.026983" steps="114935"/></proof>
         <proof prover="4"><result status="valid" time="0.108613" steps="19124"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.6" proved="true">
         <proof prover="0"><result status="valid" time="0.012871" steps="41"/></proof>
         <proof prover="2"><result status="valid" time="0.162516" steps="600205"/></proof>
         <proof prover="4"><result status="valid" time="0.110594" steps="19143"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.7" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one.0.0.0.1.0.4.0.7.0" proved="true">
          <proof prover="0"><result status="valid" time="0.026888" steps="388"/></proof>
          <proof prover="2"><result status="valid" time="0.287393" steps="912369"/></proof>
          <proof prover="4"><result status="valid" time="0.156156" steps="25173"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.8" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one.0.0.0.1.0.4.0.8.0" proved="true">
          <proof prover="0"><result status="valid" time="0.028328" steps="391"/></proof>
          <proof prover="2"><result status="valid" time="0.096270" steps="374660"/></proof>
          <proof prover="4"><result status="valid" time="0.156603" steps="25398"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one.1.0" proved="true">
   <proof prover="4"><result status="valid" time="0.426506" steps="69177"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl1_ProducesOneInvariant_Impl" proved="true">
 <goal name="vc_produces_one_invariant" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant.0.0" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.100350" steps="17320"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.1" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.349452" steps="50068"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.2" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.061877" steps="1825"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0_Next" proved="true">
 <goal name="next&#39;vc" expl="VC for next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="next&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015246" steps="22"/></proof>
  </goal>
  <goal name="next&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024006" steps="22"/></proof>
  </goal>
  <goal name="next&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.136766" steps="12207"/></proof>
  </goal>
  <goal name="next&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.256446" steps="15557"/></proof>
  </goal>
  <goal name="next&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024082" steps="33"/></proof>
  </goal>
  <goal name="next&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.025172" steps="199"/></proof>
  </goal>
  <goal name="next&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015449" steps="75"/></proof>
  </goal>
  <goal name="next&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013939" steps="71"/></proof>
  </goal>
  <goal name="next&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015299" steps="73"/></proof>
  </goal>
  <goal name="next&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.079981" steps="14687"/></proof>
  </goal>
  <goal name="next&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.011114" steps="93"/></proof>
  </goal>
  <goal name="next&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.013144" steps="605"/></proof>
  </goal>
  <goal name="next&#39;vc.12" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.012501" steps="31"/></proof>
  </goal>
  <goal name="next&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.257169" steps="39446"/></proof>
  </goal>
  <goal name="next&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015445" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Map" proved="true">
 <goal name="map&#39;vc" expl="VC for map" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.166766" steps="9943"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Identity_Closure0" proved="true">
 <goal name="c06MapPrecond_Identity_Closure0&#39;vc" expl="VC for c06MapPrecond_Identity_Closure0" proved="true">
 <proof prover="0"><result status="valid" time="0.012451" steps="6"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Identity" proved="true">
 <goal name="identity&#39;vc" expl="VC for identity" proved="true">
 <proof prover="0"><result status="valid" time="0.025832" steps="253"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Increment_Closure2" proved="true">
 <goal name="c06MapPrecond_Increment_Closure2&#39;vc" expl="VC for c06MapPrecond_Increment_Closure2" proved="true">
 <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Increment" proved="true">
 <goal name="increment&#39;vc" expl="VC for increment" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="increment&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="38"/></proof>
  </goal>
  <goal name="increment&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="226"/></proof>
  </goal>
  <goal name="increment&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="132"/></proof>
  </goal>
  <goal name="increment&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="8"/></proof>
  </goal>
  <goal name="increment&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.016718" steps="10"/></proof>
  </goal>
  <goal name="increment&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.026428" steps="8"/></proof>
  </goal>
  <goal name="increment&#39;vc.6" expl="assertion" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.095944" steps="29584"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Counter_Closure2" proved="true">
 <goal name="c06MapPrecond_Counter_Closure2&#39;vc" expl="VC for c06MapPrecond_Counter_Closure2" proved="true">
 <proof prover="0"><result status="valid" time="0.020000" steps="188"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Counter" proved="true">
 <goal name="counter&#39;vc" expl="VC for counter" proved="true">
 <proof prover="0"><result status="valid" time="0.054988" steps="689"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0" proved="true">
 <goal name="produces_refl_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
 <goal name="produces_trans_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.079489" steps="1235"/></proof>
 </goal>
</theory>
</file>
</why3session>
