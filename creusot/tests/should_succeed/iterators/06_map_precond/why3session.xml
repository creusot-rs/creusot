<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="C06MapPrecond_Map_Type" proved="true">
 <goal name="vc_t_map" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.025196" steps="2262"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl1_PreservationInv_Impl" proved="true">
 <goal name="vc_preservation_inv" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv.0" proved="true">
  <proof prover="4"><result status="valid" time="0.099951" steps="37107"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0_ProducesRefl_Impl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <proof prover="4"><result status="valid" time="0.682394" steps="95568"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0_ProducesTrans_Impl" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.021772" steps="159"/></proof>
   </goal>
   <goal name="vc_produces_trans.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(s ++ s1)">
    <goal name="vc_produces_trans.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans.0.1.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.012551" steps="44"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.1" proved="true">
     <proof prover="1"><result status="valid" time="0.012728" steps="48"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.2" proved="true">
     <proof prover="1"><result status="valid" time="0.015826" steps="173"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.3" proved="true">
     <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
      <goal name="vc_produces_trans.0.1.0.3.0" proved="true">
      <proof prover="1"><result status="valid" time="0.012639" steps="49"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_produces_trans.0.1.0.4" proved="true">
     <transf name="exists" proved="true" arg1="(fs ++ fs1)">
      <goal name="vc_produces_trans.0.1.0.4.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.1.0.4.0.0" proved="true">
       <proof prover="1"><result status="valid" time="0.011919" steps="44"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.1" proved="true">
       <proof prover="1"><result status="valid" time="0.011721" steps="48"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.2" proved="true">
       <proof prover="1"><result status="valid" time="0.033880" steps="561"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.3" proved="true">
       <proof prover="1"><result status="valid" time="0.012953" steps="77"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.4" proved="true">
       <proof prover="1"><result status="valid" time="0.016946" steps="188"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.5" proved="true">
       <proof prover="1"><result status="valid" time="0.015711" steps="220"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.6" proved="true">
       <proof prover="1"><result status="valid" time="0.038186" steps="643"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.7" proved="true">
       <transf name="instantiate" proved="true" arg1="H2" arg2="i">
        <goal name="vc_produces_trans.0.1.0.4.0.7.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H12" arg2="(i - length ab)">
         <goal name="vc_produces_trans.0.1.0.4.0.7.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.4.0.7.0.0.0" proved="true">
          <proof prover="1" timelimit="30" memlimit="4000"><result status="valid" time="0.474290" steps="4023"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_trans.0.1.0.4.0.8" proved="true">
       <transf name="instantiate" proved="true" arg1="H2" arg2="i">
        <goal name="vc_produces_trans.0.1.0.4.0.8.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H12" arg2="(i - length ab)">
         <goal name="vc_produces_trans.0.1.0.4.0.8.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.4.0.8.0.0.0" proved="true">
          <proof prover="1" timelimit="30" memlimit="4000"><result status="valid" time="0.472669" steps="4079"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Core_Option_Option_Type" proved="true">
 <goal name="vc_none" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.012213" steps="6"/></proof>
 </goal>
 <goal name="vc_some" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.015872" steps="6"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl1_ProducesOne_Impl" proved="true">
 <goal name="vc_produces_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0">
    <goal name="vc_produces_one.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one.0.0.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.017247" steps="111"/></proof>
     </goal>
     <goal name="vc_produces_one.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(singleton e)">
      <goal name="vc_produces_one.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one.0.0.0.1.0.0" proved="true">
       <proof prover="1"><result status="valid" time="0.013333" steps="24"/></proof>
       <proof prover="2"><result status="valid" time="0.019782" steps="75790"/></proof>
       <proof prover="4"><result status="valid" time="0.024765" steps="12525"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.1" proved="true">
       <proof prover="1"><result status="valid" time="0.013185" steps="26"/></proof>
       <proof prover="2"><result status="valid" time="0.023326" steps="107161"/></proof>
       <proof prover="4"><result status="valid" time="0.045952" steps="17896"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.2" proved="true">
       <proof prover="1"><result status="valid" time="0.011003" steps="22"/></proof>
       <proof prover="2"><result status="valid" time="0.010783" steps="7164"/></proof>
       <proof prover="4"><result status="valid" time="0.019160" steps="11799"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.3" proved="true">
       <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
        <goal name="vc_produces_one.0.0.0.1.0.3.0" proved="true">
        <proof prover="1"><result status="valid" time="0.013811" steps="24"/></proof>
        <proof prover="2"><result status="valid" time="0.020732" steps="86273"/></proof>
        <proof prover="4"><result status="valid" time="0.027549" steps="14193"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.4" proved="true">
       <transf name="exists" proved="true" arg1="(singleton f)">
        <goal name="vc_produces_one.0.0.0.1.0.4.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="vc_produces_one.0.0.0.1.0.4.0.0" proved="true">
         <proof prover="1"><result status="valid" time="0.013061" steps="24"/></proof>
         <proof prover="2"><result status="valid" time="0.019645" steps="77273"/></proof>
         <proof prover="4"><result status="valid" time="0.024688" steps="12702"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.1" proved="true">
         <proof prover="1"><result status="valid" time="0.013284" steps="26"/></proof>
         <proof prover="2"><result status="valid" time="0.023567" steps="111442"/></proof>
         <proof prover="4"><result status="valid" time="0.048204" steps="19409"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.2" proved="true">
         <proof prover="1"><result status="valid" time="0.013682" steps="28"/></proof>
         <proof prover="2"><result status="valid" time="0.022966" steps="97596"/></proof>
         <proof prover="4"><result status="valid" time="0.044363" steps="17556"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.3" proved="true">
         <proof prover="1"><result status="valid" time="0.013380" steps="26"/></proof>
         <proof prover="2"><result status="valid" time="0.022006" steps="97852"/></proof>
         <proof prover="4"><result status="valid" time="0.031785" steps="15052"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.4" proved="true">
         <proof prover="1"><result status="valid" time="0.013456" steps="26"/></proof>
         <proof prover="2"><result status="valid" time="0.024576" steps="110877"/></proof>
         <proof prover="4"><result status="valid" time="0.047705" steps="17597"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.5" proved="true">
         <proof prover="1"><result status="valid" time="0.013884" steps="28"/></proof>
         <proof prover="2"><result status="valid" time="0.023757" steps="114695"/></proof>
         <proof prover="4"><result status="valid" time="0.037633" steps="19108"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.6" proved="true">
         <proof prover="1"><result status="valid" time="0.013849" steps="42"/></proof>
         <proof prover="2"><result status="valid" time="0.251416" steps="498816"/></proof>
         <proof prover="4"><result status="valid" time="0.049113" steps="19127"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.7" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one.0.0.0.1.0.4.0.7.0" proved="true">
          <proof prover="1"><result status="valid" time="0.027548" steps="402"/></proof>
          <proof prover="2"><result status="valid" time="0.622755" steps="912282"/></proof>
          <proof prover="4"><result status="valid" time="0.070150" steps="25157"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.4.0.8" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one.0.0.0.1.0.4.0.8.0" proved="true">
          <proof prover="1"><result status="valid" time="0.028342" steps="408"/></proof>
          <proof prover="2"><result status="valid" time="0.084535" steps="374537"/></proof>
          <proof prover="4"><result status="valid" time="0.070860" steps="25382"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one.1.0" proved="true">
   <proof prover="4"><result status="valid" time="0.398191" steps="69161"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl1_ProducesOneInvariant_Impl" proved="true">
 <goal name="vc_produces_one_invariant" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant.0.0" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.100350" steps="17304"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.1" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.310194" steps="49982"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.2" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.125074" steps="1830"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0_Next" proved="true">
 <goal name="vc_call_mut&#39;0" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.019385" steps="6225"/></proof>
 </goal>
 <goal name="vc_next&#39;0" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.024028" steps="6225"/></proof>
 </goal>
 <goal name="vc_next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_next.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.008094" steps="19"/></proof>
  </goal>
  <goal name="vc_next.1" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.038960" steps="9777"/></proof>
  </goal>
  <goal name="vc_next.2" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.014276" steps="61"/></proof>
  </goal>
  <goal name="vc_next.3" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.149864" steps="19252"/></proof>
  </goal>
  <goal name="vc_next.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.013410" steps="70"/></proof>
  </goal>
  <goal name="vc_next.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.041888" steps="15316"/></proof>
  </goal>
  <goal name="vc_next.6" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.101141" steps="12037"/></proof>
  </goal>
  <goal name="vc_next.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.014081" steps="250"/></proof>
  </goal>
  <goal name="vc_next.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018129" steps="90"/></proof>
  </goal>
  <goal name="vc_next.9" expl="precondition" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.079981" steps="12060"/></proof>
  </goal>
  <goal name="vc_next.10" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.015609" steps="97"/></proof>
  </goal>
  <goal name="vc_next.11" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.011767" steps="94"/></proof>
  </goal>
  <goal name="vc_next.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.011485" steps="119"/></proof>
  </goal>
  <goal name="vc_next.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.179282" steps="1013"/></proof>
  </goal>
  <goal name="vc_next.14" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.016607" steps="144"/></proof>
  </goal>
  <goal name="vc_next.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.173028" steps="809"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Map" proved="true">
 <goal name="vc_map" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.025407" steps="9827"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Identity_Closure0_Type" proved="true">
 <goal name="vc_c06mapprecond_identity_closure0" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.015711" steps="2354"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Identity_Closure0" proved="true">
 <goal name="vc_c06mapprecond_identity_closure0" proved="true">
 <proof prover="1"><result status="valid" time="0.012097" steps="2"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Identity" proved="true">
 <goal name="vc_map&#39;0" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.021078" steps="4768"/></proof>
 </goal>
 <goal name="vc_identity" proved="true">
 <proof prover="1"><result status="valid" time="0.016418" steps="210"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Increment_Closure2_Type" proved="true">
 <goal name="vc_c06mapprecond_increment_closure2" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.019220" steps="2438"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Increment_Closure2" proved="true">
 <goal name="vc_c06mapprecond_increment_closure2" proved="true">
 <proof prover="1"><result status="valid" time="0.009703" steps="8"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Increment" proved="true">
 <goal name="vc_map&#39;0" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.023206" steps="6922"/></proof>
 </goal>
 <goal name="vc_increment" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_increment.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.029129" steps="4"/></proof>
  </goal>
  <goal name="vc_increment.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024500" steps="4"/></proof>
  </goal>
  <goal name="vc_increment.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.011868" steps="106"/></proof>
  </goal>
  <goal name="vc_increment.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017114" steps="302"/></proof>
  </goal>
  <goal name="vc_increment.4" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.007297" steps="43"/></proof>
  </goal>
  <goal name="vc_increment.5" expl="type invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.095944" steps="14874"/></proof>
  </goal>
  <goal name="vc_increment.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.082459" steps="29148"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06MapPrecond_Counter_Closure2_Type" proved="true">
 <goal name="vc_c06mapprecond_counter_closure2" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.015651" steps="2522"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Counter_Closure2" proved="true">
 <goal name="vc_c06mapprecond_counter_closure2" proved="true">
 <proof prover="1"><result status="valid" time="0.013350" steps="123"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Counter" proved="true">
 <goal name="vc_map&#39;0" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.017472" steps="5397"/></proof>
 </goal>
 <goal name="vc_counter" proved="true">
 <proof prover="1"><result status="valid" time="0.053608" steps="676"/></proof>
 </goal>
</theory>
<theory name="C06MapPrecond_Impl0" proved="true">
 <goal name="produces_trans_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010885" steps="1"/></proof>
 <proof prover="4"><result status="valid" time="0.014456" steps="8955"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.067797" steps="1073"/></proof>
 <proof prover="4"><result status="valid" time="0.056562" steps="21487"/></proof>
 </goal>
 <goal name="produces_refl_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.007106" steps="1"/></proof>
 <proof prover="4"><result status="valid" time="0.014104" steps="8955"/></proof>
 </goal>
</theory>
</file>
</why3session>
