module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
end
module Trait_UsesCustom_Interface
  type a   
  type b   
  type t   
  val uses_custom [@cfg:stackify] (t : t) : ()
end
module Trait_UsesCustom
  type a   
  type b   
  type t   
  let rec cfg uses_custom [@cfg:stackify] (t : t) : () = 
  var _0 : ();
  var t_1 : t;
  {
    t_1 <- t;
    goto BB0
  }
  BB0 {
    _0 <- ();
    goto BB1
  }
  BB1 {
    assume { (fun x -> true) t_1 };
    return _0
  }
  
end
module Trait_UsesCustom2_Interface
  type a   
  type b   
  type t   
  val uses_custom2 [@cfg:stackify] (t : t) : ()
end
module Trait_UsesCustom2
  type a   
  type b   
  type t   
  let rec cfg uses_custom2 [@cfg:stackify] (t : t) : () = 
  var _0 : ();
  var t_1 : t;
  {
    t_1 <- t;
    goto BB0
  }
  BB0 {
    _0 <- ();
    goto BB1
  }
  BB1 {
    assume { (fun x -> true) t_1 };
    return _0
  }
  
end
module Trait_Main_Interface
  val main [@cfg:stackify] () : ()
end
module Trait_Main
  let rec cfg main [@cfg:stackify] () : () = 
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
