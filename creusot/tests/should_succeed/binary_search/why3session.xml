<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="binary_search.coma"/>
<theory name="M_binary_search__qyi13868011053250380720__len_logic" proved="true">
 <goal name="vc_len_logic&#39;0" proved="true">
 <proof prover="0"><result status="valid" time="0.016363" steps="6"/></proof>
 </goal>
</theory>
<theory name="M_binary_search__qyi13868011053250380720__index" proved="true">
 <goal name="vc_index&#39;0" proved="true">
 <proof prover="0"><result status="valid" time="0.122397" steps="886"/></proof>
 </goal>
</theory>
<theory name="M_binary_search__qyi13868011053250380720__len" proved="true">
 <goal name="vc_len&#39;0" proved="true">
 <proof prover="0"><result status="valid" time="0.038969" steps="491"/></proof>
 </goal>
</theory>
<theory name="M_binary_search__binary_search" proved="true">
 <goal name="vc_binary_search&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_binary_search&#39;0.0" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030884" steps="43"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.1" expl="len requires" proved="true">
  <proof prover="0"><result status="valid" time="0.035512" steps="29"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.2" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.042274" steps="58"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.3" expl="len requires" proved="true">
  <proof prover="0"><result status="valid" time="0.039977" steps="38"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.4" expl="loop invariant #0" proved="true">
  <proof prover="0"><result status="valid" time="0.041482" steps="81"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.5" expl="loop invariant #1" proved="true">
  <proof prover="0"><result status="valid" time="0.046233" steps="92"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.6" expl="loop invariant #2" proved="true">
  <proof prover="0"><result status="valid" time="0.041828" steps="45"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.7" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.040203" steps="54"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.8" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.043818" steps="58"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.9" expl="arithmetic overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.054052" steps="192"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.10" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.053047" steps="148"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.11" expl="index requires" proved="true">
  <proof prover="0"><result status="valid" time="0.201302" steps="1101"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.12" expl="arithmetic overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.175008" steps="902"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.13" expl="loop invariant #0" proved="true">
  <proof prover="0"><result status="valid" time="0.440866" steps="2605"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.14" expl="loop invariant #1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_binary_search&#39;0.14.0" expl="loop invariant #1" proved="true">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.925926" steps="11065"/></proof>
   </goal>
   <goal name="vc_binary_search&#39;0.14.1" expl="loop invariant #1" proved="true">
   <proof prover="0"><result status="valid" time="0.072200" steps="256"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_binary_search&#39;0.15" expl="loop invariant #2" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_binary_search&#39;0.15.0" expl="loop invariant #2" proved="true">
   <proof prover="0"><result status="valid" time="0.106952" steps="607"/></proof>
   </goal>
   <goal name="vc_binary_search&#39;0.15.1" expl="loop invariant #2" proved="true">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.538397" steps="8411"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_binary_search&#39;0.16" expl="binary_search ensures #1" proved="true">
  <proof prover="0"><result status="valid" time="0.041171" steps="42"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.17" expl="binary_search ensures #2" proved="true">
  <proof prover="0"><result status="valid" time="0.041455" steps="42"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.18" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.048278" steps="96"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.19" expl="index requires" proved="true">
  <proof prover="0"><result status="valid" time="0.046478" steps="54"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.20" expl="binary_search ensures #1" proved="true">
  <proof prover="0"><result status="valid" time="0.090707" steps="397"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.21" expl="binary_search ensures #2" proved="true">
  <proof prover="0"><result status="valid" time="0.303440" steps="2868"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.22" expl="arithmetic overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.057799" steps="175"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.23" expl="binary_search ensures #1" proved="true">
  <proof prover="0"><result status="valid" time="0.161914" steps="1055"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.24" expl="binary_search ensures #2" proved="true">
  <proof prover="0"><result status="valid" time="0.066025" steps="298"/></proof>
  </goal>
  <goal name="vc_binary_search&#39;0.25" expl="binary_search ensures #0" proved="true">
  <proof prover="0"><result status="valid" time="0.038744" steps="62"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
