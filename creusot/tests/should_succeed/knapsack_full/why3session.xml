<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="knapsack_full.mlcfg"/>
<theory name="KnapsackFull_Max" proved="true">
 <goal name="max&#39;vc" expl="VC for max" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_SumWeights_Impl" proved="true">
 <goal name="sum_weights&#39;vc" expl="VC for sum_weights" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="33"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_SumValues_Impl" proved="true">
 <goal name="sum_values&#39;vc" expl="VC for sum_values" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_SubseqRev_Impl" proved="true">
 <goal name="subseq_rev&#39;vc" expl="VC for subseq_rev" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_M_Impl" proved="true">
 <goal name="m&#39;vc" expl="VC for m" proved="true">
 <proof prover="1"><result status="valid" time="0.84" steps="7530"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_Knapsack01Dyn" proved="true">
 <goal name="knapsack01_dyn&#39;vc" expl="VC for knapsack01_dyn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="knapsack01_dyn&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="23"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="58"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="56"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.01" steps="93"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="119"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="339"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="215"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.01" steps="79"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="119"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="122"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="128"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="131"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="890"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="2130"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="2487"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="212"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="143"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="276"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="170"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="328"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="184"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="390"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="438966"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="194"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="623"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.85" steps="13861"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="1.10" steps="18004"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.49" steps="8196"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="519"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="107"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.33" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="111"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.34" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="206"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.35" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="112"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.36" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="236"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.37" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="866"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.38" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="265"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.39" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="202"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="124"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.01" steps="128"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.02" steps="236"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="129"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="259"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.26" steps="52786"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.46" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="knapsack01_dyn&#39;vc.46.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.20" steps="38368"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1528"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.48" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="3916"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.49" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="1913"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.50" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="470"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="4720"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.52" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.28" steps="53076"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1522"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.54" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.22" steps="3900"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.55" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.28" steps="56043"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.56" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="knapsack01_dyn&#39;vc.56.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.28" steps="55649"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.57" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="knapsack01_dyn&#39;vc.57.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.41" steps="59543"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="159"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.59" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="knapsack01_dyn&#39;vc.59.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.19" steps="44141"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.60" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="324"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.61" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="1047"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.62" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.34" steps="68329"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.63" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="knapsack01_dyn&#39;vc.63.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="knapsack01_dyn&#39;vc.63.0.0" expl="loop invariant preservation" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,int64&#39;maxInt,int64&#39;minInt,min_int64,max_int64,to_int,in_bounds3,uint64&#39;maxInt,max_uint64,length1,min_unsigned,in_bounds4,singleton,cons,snoc,(++),id,item_weight,item_value,range_start,resolve9,mAX&#39;,shallow_model8,resolve_elswhere,in_bounds2,in_bounds1,completed1,invariant&#39;1,produces_trans1,produces_refl1,into_iter_pre1,in_bounds,resolve8,resolve7,completed,invariant&#39;,produces_trans,produces_refl,into_iter_pre,resolve5,resolve2,shallow_model,resolve1,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,to_int_in_bounds1,extensionality1,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,shallow_model_spec3,shallow_model_spec1,range_inclusive_len_spec,produces_trans_spec1,produces_refl_spec1,produces_trans_spec,produces_refl_spec,shallow_model_spec,def3,sum_values_spec,def2,sum_weights_spec,def1,subseq_rev_spec,m_spec,Requires2,Requires1,Requires,H50,H49,H48,Ensures51,Ensures50,Ensures49,H47,Ensures48,Ensures47,Ensures46,Ensures45,Ensures42,H43,type_invariant2,items_len,weight_len,best_value,best_value_bounds1,H42,H41,Ensures39,Assume4,Ensures35,Ensures34,Ensures33,H38,H37,Assume3,Ensures29,Ensures27,H30,type_invariant1,items_len21,weight_len21,best_value_bounds,H29,H28,Ensures24,Assume2,Ensures8,Ensures7,Ensures1,type_invariant,structural,best_value2,Ensures19,Ensures18,H22,H21,H20,H19">
     <goal name="knapsack01_dyn&#39;vc.63.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="2"><result status="valid" time="0.03" steps="154939"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="knapsack01_dyn&#39;vc.63.0.1" expl="loop invariant preservation" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,int64&#39;maxInt,int64&#39;minInt,min_int64,max_int64,to_int,in_bounds3,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,min_unsigned,in_bounds4,singleton,cons,snoc,(++),id,item_weight,item_value,range_start,resolve9,mAX&#39;,shallow_model8,resolve_elswhere,in_bounds2,in_bounds1,completed1,invariant&#39;1,produces_trans1,produces_refl1,into_iter_pre1,in_bounds,resolve8,resolve7,completed,invariant&#39;,produces_trans,produces_refl,into_iter_pre,resolve5,resolve2,shallow_model,resolve1,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,to_int_in_bounds1,extensionality1,zero_unsigned_is_zero,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,shallow_model_spec3,shallow_model_spec2,shallow_model_spec1,range_inclusive_len_spec,produces_trans_spec1,produces_refl_spec1,produces_trans_spec,produces_refl_spec,shallow_model_spec,def3,sum_values_spec,def2,sum_weights_spec,def1,subseq_rev_spec,m_spec,Requires2,Requires1,Requires,H43,H42,H41,Ensures46,Ensures45,Ensures44,H40,Ensures43,Ensures42,Ensures41,Ensures40,Ensures37,H36,type_invariant2,items_len,weight_len,best_value,best_value_bounds1,H35,H34,Ensures34,Assume4,Ensures30,Ensures29,Ensures28,H31,H30,Assume3,Ensures24,Ensures22,H23,type_invariant1,items_len21,weight_len21,best_value_bounds,H22,H21,Ensures19,Assume2,Ensures8,Ensures7,Ensures1,type_invariant,structural,best_value2,Ensures14,Ensures13">
     <goal name="knapsack01_dyn&#39;vc.63.0.1.0" expl="loop invariant preservation" proved="true">
     <proof prover="2"><result status="valid" time="0.02" steps="106218"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.64" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="knapsack01_dyn&#39;vc.64.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.55" steps="93564"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
