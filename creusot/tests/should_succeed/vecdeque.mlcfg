
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
end
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_unique 't =
    | C_Unique (Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (Core_Marker_PhantomData_Type.t_phantomdata 't)
    
end
module Alloc_RawVec_RawVec_Type
  use prelude.Int
  use prelude.UIntSize
  use Core_Ptr_Unique_Unique_Type as Core_Ptr_Unique_Unique_Type
  type t_rawvec 't 'a =
    | C_RawVec (Core_Ptr_Unique_Unique_Type.t_unique 't) usize 'a
    
end
module Alloc_Collections_VecDeque_VecDeque_Type
  use prelude.Int
  use prelude.UIntSize
  use Alloc_RawVec_RawVec_Type as Alloc_RawVec_RawVec_Type
  type t_vecdeque 't 'a =
    | C_VecDeque usize usize (Alloc_RawVec_RawVec_Type.t_rawvec 't 'a)
    
end
module Alloc_Alloc_Global_Type
  type t_global  =
    | C_Global
    
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module CreusotContracts_Invariant_Inv_Stub
  type t
  predicate inv (_x : t)
end
module CreusotContracts_Invariant_Inv_Interface
  type t
  predicate inv (_x : t)
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CreusotContracts_Invariant_Inv
  type t
  predicate inv (_x : t) =
    [#"../../../../creusot-contracts/src/invariant.rs" 27 4 27 8] true
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module Core_Num_Impl11_Max_Stub
  use prelude.Int
  use prelude.UIntSize
  val constant mAX'  : usize
end
module Core_Num_Impl11_Max
  use prelude.Int
  use prelude.UIntSize
  let constant mAX'  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
end
module CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub
  type t
  type a
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  function shallow_model (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a) : Seq.seq t
end
module CreusotContracts_Std1_Deque_Impl0_ShallowModel_Interface
  type t
  type a
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  function shallow_model (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a) : Seq.seq t
  val shallow_model (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a) : Seq.seq t
    requires {[#"../../../../creusot-contracts/src/std/deque.rs" 11 21 11 25] Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 10 14 10 41] Seq.length result <= UIntSize.to_int Max0.mAX' }
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a . ([#"../../../../creusot-contracts/src/std/deque.rs" 11 21 11 25] Inv0.inv self) -> ([#"../../../../creusot-contracts/src/std/deque.rs" 10 14 10 41] Seq.length (shallow_model self) <= UIntSize.to_int Max0.mAX')
end
module CreusotContracts_Std1_Deque_Impl0_ShallowModel
  type t
  type a
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  function shallow_model (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a) : Seq.seq t
  val shallow_model (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a) : Seq.seq t
    requires {[#"../../../../creusot-contracts/src/std/deque.rs" 11 21 11 25] Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 10 14 10 41] Seq.length result <= UIntSize.to_int Max0.mAX' }
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a . ([#"../../../../creusot-contracts/src/std/deque.rs" 11 21 11 25] Inv0.inv self) -> ([#"../../../../creusot-contracts/src/std/deque.rs" 10 14 10 41] Seq.length (shallow_model self) <= UIntSize.to_int Max0.mAX')
end
module Alloc_Collections_VecDeque_Impl4_WithCapacity_Interface
  type t
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val with_capacity (capacity : usize) : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t (Alloc_Alloc_Global_Type.t_global)
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 59 26 59 44] Seq.length (ShallowModel0.shallow_model result) = 0 }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl5_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl5_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl5_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot-contracts/src/model.rs" 80 8 80 31] ShallowModel0.shallow_model self
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module Alloc_Collections_VecDeque_Impl5_IsEmpty_Interface
  type t
  type a
  use seq.Seq
  use prelude.Borrow
  use seq.Seq
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  val is_empty (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a) : bool
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 67 26 67 54] result = (Seq.length (ShallowModel0.shallow_model self) = 0) }
    
end
module Alloc_Collections_VecDeque_Impl5_Len_Interface
  type t
  type a
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use seq.Seq
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  val len (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a) : usize
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 64 26 64 48] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model self) }
    
end
module Alloc_Collections_VecDeque_Impl4_New_Interface
  type t
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val new (_1 : ()) : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t (Alloc_Alloc_Global_Type.t_global)
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 56 26 56 44] Seq.length (ShallowModel0.shallow_model result) = 0 }
    
end
module CreusotContracts_Model_Impl7_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl7_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl7_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot-contracts/src/model.rs" 98 8 98 31] ShallowModel0.shallow_model ( * self)
  val shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module Alloc_Collections_VecDeque_Impl5_PopFront_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use seq_ext.SeqExt
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = Core_Option_Option_Type.t_option t
  clone CreusotContracts_Model_Impl7_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = a,
    predicate Inv0.inv = Inv2.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)
  val pop_front (self : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)) : Core_Option_Option_Type.t_option t
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 73 26 78 17] match (result) with
      | Core_Option_Option_Type.C_Some t -> ShallowModel0.shallow_model ( ^ self) = SeqExt.subsequence (ShallowModel1.shallow_model self) 1 (Seq.length (ShallowModel1.shallow_model self)) /\ ShallowModel1.shallow_model self = Seq.(++) (Seq.singleton t) (ShallowModel0.shallow_model ( ^ self))
      | Core_Option_Option_Type.C_None ->  * self =  ^ self /\ Seq.length (ShallowModel1.shallow_model self) = 0
      end }
    ensures { Inv1.inv result }
    
end
module CreusotContracts_Model_DeepModel_DeepModelTy_Type
  type self
  type deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Stub
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Interface
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
  val deep_model (self : self) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Model_DeepModel_DeepModel
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
  val deep_model (self : self) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Model_Impl4_DeepModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  function deep_model (self : t) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_Impl4_DeepModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  function deep_model (self : t) : DeepModelTy0.deepModelTy
  val deep_model (self : t) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Model_Impl4_DeepModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  clone CreusotContracts_Model_DeepModel_DeepModel_Stub as DeepModel0 with
    type self = t,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  function deep_model (self : t) : DeepModelTy0.deepModelTy =
    [#"../../../../creusot-contracts/src/model.rs" 71 8 71 28] DeepModel0.deep_model self
  val deep_model (self : t) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module Core_Option_Impl14_Eq_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = Core_Option_Option_Type.t_option t
  clone CreusotContracts_Model_Impl4_DeepModel_Stub as DeepModel0 with
    type t = Core_Option_Option_Type.t_option t,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Core_Option_Option_Type.t_option t
  val eq (self : Core_Option_Option_Type.t_option t) (other : Core_Option_Option_Type.t_option t) : bool
    requires {Inv0.inv self}
    requires {Inv0.inv other}
    ensures { [#"../../../../creusot-contracts/src/std/cmp.rs" 11 26 11 75] result = (DeepModel0.deep_model self = DeepModel0.deep_model other) }
    
end
module Alloc_Collections_VecDeque_Impl5_PopBack_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use prelude.Int
  use seq_ext.SeqExt
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = Core_Option_Option_Type.t_option t
  clone CreusotContracts_Model_Impl7_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = a,
    predicate Inv0.inv = Inv2.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)
  val pop_back (self : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)) : Core_Option_Option_Type.t_option t
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 81 26 86 17] match (result) with
      | Core_Option_Option_Type.C_Some t -> ShallowModel0.shallow_model ( ^ self) = SeqExt.subsequence (ShallowModel1.shallow_model self) 0 (Seq.length (ShallowModel1.shallow_model self) - 1) /\ ShallowModel1.shallow_model self = Seq.snoc (ShallowModel0.shallow_model ( ^ self)) t
      | Core_Option_Option_Type.C_None ->  * self =  ^ self /\ Seq.length (ShallowModel1.shallow_model self) = 0
      end }
    ensures { Inv1.inv result }
    
end
module Alloc_Collections_VecDeque_Impl5_PushFront_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use prelude.Int
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  clone CreusotContracts_Model_Impl7_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = a,
    predicate Inv0.inv = Inv2.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)
  val push_front (self : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)) (value : t) : ()
    requires {Inv0.inv self}
    requires {Inv1.inv value}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 89 26 89 59] Seq.length (ShallowModel0.shallow_model ( ^ self)) = Seq.length (ShallowModel1.shallow_model self) + 1 }
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 90 26 90 73] ShallowModel0.shallow_model ( ^ self) = Seq.(++) (Seq.singleton value) (ShallowModel1.shallow_model self) }
    
end
module Alloc_Collections_VecDeque_Impl5_PushBack_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  clone CreusotContracts_Model_Impl7_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = a,
    predicate Inv0.inv = Inv2.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)
  val push_back (self : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)) (value : t) : ()
    requires {Inv0.inv self}
    requires {Inv1.inv value}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 93 26 93 55] ShallowModel0.shallow_model ( ^ self) = Seq.snoc (ShallowModel1.shallow_model self) value }
    
end
module Alloc_Collections_VecDeque_Impl5_Clear_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = a,
    predicate Inv0.inv = Inv1.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)
  val clear (self : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque t a)) : ()
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/deque.rs" 70 26 70 45] Seq.length (ShallowModel0.shallow_model ( ^ self)) = 0 }
    
end
module TyInv_Trivial
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = t
  axiom inv_trivial : forall self : t . Inv0.inv self = true
end
module CreusotContracts_Std1_Option_Impl0_DeepModel_Stub
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
end
module CreusotContracts_Std1_Option_Impl0_DeepModel_Interface
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
  val deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Std1_Option_Impl0_DeepModel
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  clone CreusotContracts_Model_DeepModel_DeepModel_Stub as DeepModel0 with
    type self = t,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
   =
    [#"../../../../creusot-contracts/src/std/option.rs" 10 8 13 9] match (self) with
      | Core_Option_Option_Type.C_Some t -> Core_Option_Option_Type.C_Some (DeepModel0.deep_model t)
      | Core_Option_Option_Type.C_None -> Core_Option_Option_Type.C_None
      end
  val deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Std1_Num_Impl7_DeepModel_Stub
  use prelude.Int
  use prelude.UInt32
  function deep_model (self : uint32) : int
end
module CreusotContracts_Std1_Num_Impl7_DeepModel_Interface
  use prelude.Int
  use prelude.UInt32
  function deep_model (self : uint32) : int
  val deep_model (self : uint32) : int
    ensures { result = deep_model self }
    
end
module CreusotContracts_Std1_Num_Impl7_DeepModel
  use prelude.Int
  use prelude.UInt32
  function deep_model (self : uint32) : int =
    [#"../../../../creusot-contracts/src/std/num.rs" 22 16 22 35] UInt32.to_int self
  val deep_model (self : uint32) : int
    ensures { result = deep_model self }
    
end
module Vecdeque_TestDeque_Interface
  val test_deque [#"../vecdeque.rs" 5 0 5 19] (_1 : ()) : ()
end
module Vecdeque_TestDeque
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.UInt32
  use seq.Seq
  clone CreusotContracts_Std1_Num_Impl7_DeepModel as DeepModel2
  clone CreusotContracts_Invariant_Inv_Interface as Inv5 with
    type t = uint32
  clone TyInv_Trivial as TyInv_Trivial5 with
    type t = uint32,
    predicate Inv0.inv = Inv5.inv,
    axiom .
  use prelude.Int
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Std1_Option_Impl0_DeepModel as DeepModel1 with
    type t = uint32,
    type DeepModelTy0.deepModelTy = int,
    function DeepModel0.deep_model = DeepModel2.deep_model
  clone CreusotContracts_Invariant_Inv_Interface as Inv4 with
    type t = Core_Option_Option_Type.t_option uint32
  clone TyInv_Trivial as TyInv_Trivial4 with
    type t = Core_Option_Option_Type.t_option uint32,
    predicate Inv0.inv = Inv4.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv3 with
    type t = Core_Option_Option_Type.t_option uint32
  clone TyInv_Trivial as TyInv_Trivial3 with
    type t = Core_Option_Option_Type.t_option uint32,
    predicate Inv0.inv = Inv3.inv,
    axiom .
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
  clone TyInv_Trivial as TyInv_Trivial2 with
    type t = borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)),
    predicate Inv0.inv = Inv2.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)
  clone TyInv_Trivial as TyInv_Trivial1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global),
    predicate Inv0.inv = Inv1.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global),
    predicate Inv0.inv = Inv0.inv,
    axiom .
  clone CreusotContracts_Model_Impl4_DeepModel as DeepModel0 with
    type t = Core_Option_Option_Type.t_option uint32,
    type DeepModelTy0.deepModelTy = Core_Option_Option_Type.t_option int,
    function DeepModel0.deep_model = DeepModel1.deep_model
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Deque_Impl0_ShallowModel_Interface as ShallowModel0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl7_ShallowModel as ShallowModel2 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq uint32,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl5_ShallowModel as ShallowModel1 with
    type t = Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq uint32,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Alloc_Collections_VecDeque_Impl5_Clear_Interface as Clear0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv2.inv,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Inv1.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Collections_VecDeque_Impl5_PushBack_Interface as PushBack0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv2.inv,
    predicate Inv1.inv = Inv5.inv,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate Inv2.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Collections_VecDeque_Impl5_PushFront_Interface as PushFront0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv2.inv,
    predicate Inv1.inv = Inv5.inv,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate Inv2.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Collections_VecDeque_Impl5_PopBack_Interface as PopBack0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv2.inv,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate Inv1.inv = Inv3.inv,
    predicate Inv2.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX'
  clone Core_Option_Impl14_Eq_Interface as Eq0 with
    type t = uint32,
    predicate Inv0.inv = Inv4.inv,
    function DeepModel0.deep_model = DeepModel0.deep_model,
    type DeepModelTy0.deepModelTy = Core_Option_Option_Type.t_option int
  clone Alloc_Collections_VecDeque_Impl5_PopFront_Interface as PopFront0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv2.inv,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate Inv1.inv = Inv3.inv,
    predicate Inv2.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Collections_VecDeque_Impl4_New_Interface as New0 with
    type t = uint32,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Inv0.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Collections_VecDeque_Impl5_Len_Interface as Len0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv1.inv,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Alloc_Collections_VecDeque_Impl5_IsEmpty_Interface as IsEmpty0 with
    type t = uint32,
    type a = Alloc_Alloc_Global_Type.t_global,
    predicate Inv0.inv = Inv1.inv,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Alloc_Collections_VecDeque_Impl4_WithCapacity_Interface as WithCapacity0 with
    type t = uint32,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Inv0.inv = Inv0.inv,
    val Max0.mAX' = Max0.mAX'
  let constant promoted0 [#"../vecdeque.rs" 5 0 5 19]  : Core_Option_Option_Type.t_option uint32
   = [@vc:do_not_keep_trace] [@vc:sp]
    let _1 = Core_Option_Option_Type.C_Some ([#"../vecdeque.rs" 24 37 24 38] (3 : uint32)) in let _0 = _1 in _0
  let constant promoted1 [#"../vecdeque.rs" 5 0 5 19]  : Core_Option_Option_Type.t_option uint32
   = [@vc:do_not_keep_trace] [@vc:sp]
    let _1 = Core_Option_Option_Type.C_Some ([#"../vecdeque.rs" 23 38 23 39] (2 : uint32)) in let _0 = _1 in _0
  let constant promoted2 [#"../vecdeque.rs" 5 0 5 19]  : Core_Option_Option_Type.t_option uint32
   = [@vc:do_not_keep_trace] [@vc:sp]
    let _1 = Core_Option_Option_Type.C_None in let _0 = _1 in _0
  let constant promoted3 [#"../vecdeque.rs" 5 0 5 19]  : Core_Option_Option_Type.t_option uint32
   = [@vc:do_not_keep_trace] [@vc:sp]
    let _1 = Core_Option_Option_Type.C_None in let _0 = _1 in _0
  let rec cfg test_deque [#"../vecdeque.rs" 5 0 5 19] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var deque : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global);
  var _4 : bool;
  var _10 : usize;
  var deque1 : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global);
  var _16 : bool;
  var _22 : usize;
  var _27 : bool;
  var _29 : Core_Option_Option_Type.t_option uint32;
  var _30 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _36 : bool;
  var _38 : Core_Option_Option_Type.t_option uint32;
  var _39 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _43 : ();
  var _44 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _45 : ();
  var _46 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _47 : ();
  var _48 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _51 : bool;
  var _53 : Core_Option_Option_Type.t_option uint32;
  var _54 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _60 : bool;
  var _62 : Core_Option_Option_Type.t_option uint32;
  var _63 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _67 : ();
  var _68 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
  var _71 : bool;
  var _74 : Core_Option_Option_Type.t_option uint32;
  var _75 : Core_Option_Option_Type.t_option uint32;
  var _76 : Core_Option_Option_Type.t_option uint32;
  var _77 : Core_Option_Option_Type.t_option uint32;
  {
    goto BB0
  }
  BB0 {
    deque <- ([#"../vecdeque.rs" 6 31 6 57] WithCapacity0.with_capacity ([#"../vecdeque.rs" 6 55 6 56] (5 : usize)));
    goto BB1
  }
  BB1 {
    _4 <- ([#"../vecdeque.rs" 8 12 8 28] IsEmpty0.is_empty deque);
    goto BB2
  }
  BB2 {
    switch (not _4)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    absurd
  }
  BB4 {
    _10 <- ([#"../vecdeque.rs" 9 12 9 23] Len0.len deque);
    goto BB5
  }
  BB5 {
    switch (not ([#"../vecdeque.rs" 9 12 9 28] _10 = ([#"../vecdeque.rs" 9 27 9 28] (0 : usize))))
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB6 {
    absurd
  }
  BB7 {
    deque1 <- ([#"../vecdeque.rs" 11 35 11 50] New0.new ());
    goto BB8
  }
  BB8 {
    _16 <- ([#"../vecdeque.rs" 13 12 13 28] IsEmpty0.is_empty deque1);
    goto BB9
  }
  BB9 {
    switch (not _16)
      | False -> goto BB11
      | True -> goto BB10
      end
  }
  BB10 {
    absurd
  }
  BB11 {
    _22 <- ([#"../vecdeque.rs" 14 12 14 23] Len0.len deque1);
    goto BB12
  }
  BB12 {
    switch (not ([#"../vecdeque.rs" 14 12 14 28] _22 = ([#"../vecdeque.rs" 14 27 14 28] (0 : usize))))
      | False -> goto BB14
      | True -> goto BB13
      end
  }
  BB13 {
    absurd
  }
  BB14 {
    _30 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _30;
    _29 <- ([#"../vecdeque.rs" 16 12 16 29] PopFront0.pop_front _30);
    _30 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB15
  }
  BB15 {
    _77 <- ([#"../vecdeque.rs" 16 33 16 37] promoted3);
    _27 <- ([#"../vecdeque.rs" 16 12 16 37] Eq0.eq _29 _77);
    goto BB16
  }
  BB16 {
    switch (not _27)
      | False -> goto BB18
      | True -> goto BB17
      end
  }
  BB17 {
    absurd
  }
  BB18 {
    _39 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _39;
    _38 <- ([#"../vecdeque.rs" 17 12 17 28] PopBack0.pop_back _39);
    _39 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB19
  }
  BB19 {
    _76 <- ([#"../vecdeque.rs" 17 32 17 36] promoted2);
    _36 <- ([#"../vecdeque.rs" 17 12 17 36] Eq0.eq _38 _76);
    goto BB20
  }
  BB20 {
    switch (not _36)
      | False -> goto BB22
      | True -> goto BB21
      end
  }
  BB21 {
    absurd
  }
  BB22 {
    _44 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _44;
    _43 <- ([#"../vecdeque.rs" 19 4 19 23] PushFront0.push_front _44 ([#"../vecdeque.rs" 19 21 19 22] (1 : uint32)));
    _44 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB23
  }
  BB23 {
    _46 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _46;
    _45 <- ([#"../vecdeque.rs" 20 4 20 23] PushFront0.push_front _46 ([#"../vecdeque.rs" 20 21 20 22] (2 : uint32)));
    _46 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB24
  }
  BB24 {
    _48 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _48;
    _47 <- ([#"../vecdeque.rs" 21 4 21 22] PushBack0.push_back _48 ([#"../vecdeque.rs" 21 20 21 21] (3 : uint32)));
    _48 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB25
  }
  BB25 {
    _54 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _54;
    _53 <- ([#"../vecdeque.rs" 23 12 23 29] PopFront0.pop_front _54);
    _54 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB26
  }
  BB26 {
    _75 <- ([#"../vecdeque.rs" 23 33 23 40] promoted1);
    _51 <- ([#"../vecdeque.rs" 23 12 23 40] Eq0.eq _53 _75);
    goto BB27
  }
  BB27 {
    switch (not _51)
      | False -> goto BB29
      | True -> goto BB28
      end
  }
  BB28 {
    absurd
  }
  BB29 {
    _63 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _63;
    _62 <- ([#"../vecdeque.rs" 24 12 24 28] PopBack0.pop_back _63);
    _63 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB30
  }
  BB30 {
    _74 <- ([#"../vecdeque.rs" 24 32 24 39] promoted0);
    _60 <- ([#"../vecdeque.rs" 24 12 24 39] Eq0.eq _62 _74);
    goto BB31
  }
  BB31 {
    switch (not _60)
      | False -> goto BB33
      | True -> goto BB32
      end
  }
  BB32 {
    absurd
  }
  BB33 {
    _68 <- Borrow.borrow_mut deque1;
    deque1 <-  ^ _68;
    _67 <- ([#"../vecdeque.rs" 25 4 25 17] Clear0.clear _68);
    _68 <- any borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global));
    goto BB34
  }
  BB34 {
    _71 <- ([#"../vecdeque.rs" 26 12 26 28] IsEmpty0.is_empty deque1);
    goto BB35
  }
  BB35 {
    switch (not _71)
      | False -> goto BB37
      | True -> goto BB36
      end
  }
  BB36 {
    absurd
  }
  BB37 {
    _0 <- ();
    goto BB38
  }
  BB38 {
    goto BB39
  }
  BB39 {
    return _0
  }
  
end
