
module CreusotContracts_Std1_Time_SecsToNanos_Stub
  use prelude.Int
  function secs_to_nanos (secs : int) : int
end
module CreusotContracts_Std1_Time_SecsToNanos_Interface
  use prelude.Int
  function secs_to_nanos (secs : int) : int
  val secs_to_nanos (secs : int) : int
    ensures { result = secs_to_nanos secs }
    
end
module CreusotContracts_Std1_Time_SecsToNanos
  use prelude.Int
  function secs_to_nanos (secs : int) : int =
    [#"../../../../creusot-contracts/src/std/time.rs" 48 4 48 24] secs * 1000000000
  val secs_to_nanos (secs : int) : int
    ensures { result = secs_to_nanos secs }
    
end
module Core_Time_Nanoseconds_Type
  use prelude.Int
  use prelude.UInt32
  type t_nanoseconds  =
    | C_Nanoseconds uint32
    
end
module Core_Time_Duration_Type
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Nanoseconds_Type as Core_Time_Nanoseconds_Type
  type t_duration  =
    | C_Duration uint64 (Core_Time_Nanoseconds_Type.t_nanoseconds)
    
end
module Core_Num_Impl9_Max_Stub
  use prelude.Int
  use prelude.UInt64
  val constant mAX'  : uint64
end
module Core_Num_Impl9_Max
  use prelude.Int
  use prelude.UInt64
  let constant mAX'  : uint64 = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : uint64)
end
module CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  function shallow_model (self : Core_Time_Duration_Type.t_duration) : int
end
module CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  function shallow_model (self : Core_Time_Duration_Type.t_duration) : int
  val shallow_model (self : Core_Time_Duration_Type.t_duration) : int
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 13 14 13 77] result >= 0 /\ result <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999 }
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : Core_Time_Duration_Type.t_duration . [#"../../../../creusot-contracts/src/std/time.rs" 13 14 13 77] shallow_model self >= 0 /\ shallow_model self <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999
end
module CreusotContracts_Std1_Time_Impl0_ShallowModel
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  function shallow_model (self : Core_Time_Duration_Type.t_duration) : int
  val shallow_model (self : Core_Time_Duration_Type.t_duration) : int
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 13 14 13 77] result >= 0 /\ result <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999 }
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : Core_Time_Duration_Type.t_duration . [#"../../../../creusot-contracts/src/std/time.rs" 13 14 13 77] shallow_model self >= 0 /\ shallow_model self <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module CreusotContracts_Std1_Time_NanosToSecs_Stub
  use prelude.Int
  function nanos_to_secs (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToSecs_Interface
  use prelude.Int
  function nanos_to_secs (nanos : int) : int
  val nanos_to_secs (nanos : int) : int
    ensures { result = nanos_to_secs nanos }
    
end
module CreusotContracts_Std1_Time_NanosToSecs
  use prelude.Int
  function nanos_to_secs (nanos : int) : int =
    [#"../../../../creusot-contracts/src/std/time.rs" 43 4 43 25] div nanos 1000000000
  val nanos_to_secs (nanos : int) : int
    ensures { result = nanos_to_secs nanos }
    
end
module Core_Time_Impl1_New_Interface
  use prelude.UInt64
  use prelude.UInt32
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  val new (secs : uint64) (nanos : uint32) : Core_Time_Duration_Type.t_duration
    requires {[#"../../../../creusot-contracts/src/std/time.rs" 80 27 80 69] UInt64.to_int secs + NanosToSecs0.nanos_to_secs (UInt32.to_int nanos) <= UInt64.to_int Max0.mAX'}
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 81 26 81 66] ShallowModel0.shallow_model result = SecsToNanos0.secs_to_nanos (UInt64.to_int secs) + UInt32.to_int nanos }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl5_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl5_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl5_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot-contracts/src/model.rs" 83 8 83 31] ShallowModel0.shallow_model self
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module Core_Time_Impl1_AsNanos_Interface
  use prelude.UInt128
  use prelude.UInt64
  use prelude.Int
  use prelude.Borrow
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val as_nanos (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 121 26 121 42] UInt128.to_int result = ShallowModel0.shallow_model self }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 122 26 122 75] UInt128.to_int result <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999 }
    
end
module Core_Time_Impl1_FromSecs_Interface
  use prelude.UInt64
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val from_secs (secs : uint64) : Core_Time_Duration_Type.t_duration
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 84 26 84 57] ShallowModel0.shallow_model result = SecsToNanos0.secs_to_nanos (UInt64.to_int secs) }
    
end
module Core_Time_Impl1_FromMillis_Interface
  use prelude.UInt64
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val from_millis (millis : uint64) : Core_Time_Duration_Type.t_duration
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 87 26 87 58] ShallowModel0.shallow_model result = UInt64.to_int millis * 1000000 }
    
end
module Core_Time_Impl1_FromMicros_Interface
  use prelude.UInt64
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val from_micros (micros : uint64) : Core_Time_Duration_Type.t_duration
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 90 26 90 54] ShallowModel0.shallow_model result = UInt64.to_int micros * 1000 }
    
end
module Core_Time_Impl1_FromNanos_Interface
  use prelude.UInt64
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val from_nanos (nanos : uint64) : Core_Time_Duration_Type.t_duration
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 93 26 93 43] ShallowModel0.shallow_model result = UInt64.to_int nanos }
    
end
module Core_Time_Impl1_IsZero_Interface
  use prelude.Borrow
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val is_zero (self : Core_Time_Duration_Type.t_duration) : bool
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 96 16 96 57] ShallowModel0.shallow_model self = 0 -> result = true }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 97 16 97 58] ShallowModel0.shallow_model self <> 0 -> result = false }
    
end
module Core_Time_Impl1_AsSecs_Interface
  use prelude.UInt64
  use prelude.Borrow
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val as_secs (self : Core_Time_Duration_Type.t_duration) : uint64
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 100 26 100 57] UInt64.to_int result = NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self) }
    
end
module CreusotContracts_Std1_Time_NanosToMillis_Stub
  use prelude.Int
  function nanos_to_millis (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToMillis_Interface
  use prelude.Int
  function nanos_to_millis (nanos : int) : int
  val nanos_to_millis (nanos : int) : int
    ensures { result = nanos_to_millis nanos }
    
end
module CreusotContracts_Std1_Time_NanosToMillis
  use prelude.Int
  function nanos_to_millis (nanos : int) : int =
    [#"../../../../creusot-contracts/src/std/time.rs" 38 4 38 21] div nanos 1000000
  val nanos_to_millis (nanos : int) : int
    ensures { result = nanos_to_millis nanos }
    
end
module Core_Time_Impl1_SubsecMillis_Interface
  use prelude.UInt32
  use prelude.Int
  use prelude.Borrow
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMillis_Stub as NanosToMillis0
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val subsec_millis (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 103 26 103 67] UInt32.to_int result = mod (NanosToMillis0.nanos_to_millis (ShallowModel0.shallow_model self)) 1000 }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 104 26 104 44] result < (1000 : uint32) }
    
end
module CreusotContracts_Std1_Time_NanosToMicros_Stub
  use prelude.Int
  function nanos_to_micros (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToMicros_Interface
  use prelude.Int
  function nanos_to_micros (nanos : int) : int
  val nanos_to_micros (nanos : int) : int
    ensures { result = nanos_to_micros nanos }
    
end
module CreusotContracts_Std1_Time_NanosToMicros
  use prelude.Int
  function nanos_to_micros (nanos : int) : int =
    [#"../../../../creusot-contracts/src/std/time.rs" 34 4 34 17] div nanos 1000
  val nanos_to_micros (nanos : int) : int
    ensures { result = nanos_to_micros nanos }
    
end
module Core_Time_Impl1_SubsecMicros_Interface
  use prelude.UInt32
  use prelude.Int
  use prelude.Borrow
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMicros_Stub as NanosToMicros0
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val subsec_micros (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 107 26 107 71] UInt32.to_int result = mod (NanosToMicros0.nanos_to_micros (ShallowModel0.shallow_model self)) 1000000 }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 108 26 108 48] result < (1000000 : uint32) }
    
end
module Core_Time_Impl1_SubsecNanos_Interface
  use prelude.UInt32
  use prelude.Int
  use prelude.Borrow
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val subsec_nanos (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 111 26 111 60] UInt32.to_int result = mod (ShallowModel0.shallow_model self) 1000000000 }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 112 26 112 52] result < (1000000000 : uint32) }
    
end
module Core_Time_Impl1_AsMillis_Interface
  use prelude.UInt128
  use prelude.Borrow
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMillis_Stub as NanosToMillis0
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val as_millis (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 115 26 115 59] UInt128.to_int result = NanosToMillis0.nanos_to_millis (ShallowModel0.shallow_model self) }
    
end
module Core_Time_Impl1_AsMicros_Interface
  use prelude.UInt128
  use prelude.Borrow
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMicros_Stub as NanosToMicros0
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int
  val as_micros (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 118 26 118 59] UInt128.to_int result = NanosToMicros0.nanos_to_micros (ShallowModel0.shallow_model self) }
    
end
module CreusotContracts_Model_DeepModel_DeepModelTy_Type
  type self
  type deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Stub
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Interface
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
  val deep_model (self : self) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Model_DeepModel_DeepModel
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
  val deep_model (self : self) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Std1_Option_Impl0_DeepModel_Stub
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
end
module CreusotContracts_Std1_Option_Impl0_DeepModel_Interface
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
  val deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Std1_Option_Impl0_DeepModel
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  clone CreusotContracts_Model_DeepModel_DeepModel_Stub as DeepModel0 with
    type self = t,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
   =
    [#"../../../../creusot-contracts/src/std/option.rs" 10 8 13 9] match (self) with
      | Core_Option_Option_Type.C_Some t -> Core_Option_Option_Type.C_Some (DeepModel0.deep_model t)
      | Core_Option_Option_Type.C_None -> Core_Option_Option_Type.C_None
      end
  val deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module Core_Time_Impl1_CheckedAdd_Interface
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use prelude.Int
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Std1_Option_Impl0_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = int
  clone Core_Num_Impl9_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val checked_add (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 125 16 125 86] NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) > UInt64.to_int Max0.mAX' -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 126 16 126 114] NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) <= UInt64.to_int Max0.mAX' -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) }
    
end
module CreusotContracts_Invariant_Inv_Stub
  type t
  predicate inv (_x : t)
end
module CreusotContracts_Invariant_Inv_Interface
  type t
  predicate inv (_x : t)
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CreusotContracts_Invariant_Inv
  type t
  predicate inv (_x : t) =
    [#"../../../../creusot-contracts/src/invariant.rs" 16 4 16 8] true
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module Core_Option_Impl0_IsNone_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Core_Option_Option_Type.t_option t
  val is_none (self : Core_Option_Option_Type.t_option t) : bool
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 24 26 24 51] result = (self = Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsSome_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Core_Option_Option_Type.t_option t
  val is_some (self : Core_Option_Option_Type.t_option t) : bool
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 21 26 21 51] result = (self <> Core_Option_Option_Type.C_None) }
    
end
module Core_Time_Impl1_CheckedSub_Interface
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use prelude.Int
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Std1_Option_Impl0_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val checked_sub (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 129 16 129 63] ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs < 0 -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 130 16 130 91] ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs >= 0 -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs) }
    
end
module Core_Time_Impl1_CheckedMul_Interface
  use prelude.UInt32
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use prelude.Int
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Std1_Option_Impl0_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = int
  clone Core_Num_Impl9_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val checked_mul (self : Core_Time_Duration_Type.t_duration) (rhs : uint32) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 133 16 133 86] NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self * UInt32.to_int rhs) > UInt64.to_int Max0.mAX' -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 134 16 134 114] NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self * UInt32.to_int rhs) <= UInt64.to_int Max0.mAX' -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self * UInt32.to_int rhs) }
    
end
module Core_Time_Impl1_CheckedDiv_Interface
  use prelude.Int
  use prelude.UInt32
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use prelude.Int
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  clone CreusotContracts_Std1_Option_Impl0_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = int
  val checked_div (self : Core_Time_Duration_Type.t_duration) (rhs : uint32) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 137 16 137 58] rhs = (0 : uint32) -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 138 16 138 85] rhs <> (0 : uint32) -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (div (ShallowModel0.shallow_model self) (UInt32.to_int rhs)) }
    
end
module Core_Time_Impl2_Add_Interface
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val add (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Time_Duration_Type.t_duration
    requires {[#"../../../../creusot-contracts/src/std/time.rs" 173 0 203 1] ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999}
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 173 0 203 1] ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs = ShallowModel0.shallow_model result }
    
end
module Core_Time_Impl4_Sub_Interface
  use prelude.Int
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  val sub (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Time_Duration_Type.t_duration
    requires {[#"../../../../creusot-contracts/src/std/time.rs" 173 0 203 1] ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs >= 0}
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 173 0 203 1] ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs = ShallowModel0.shallow_model result }
    
end
module TyInv_Trivial
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = t
  axiom inv_trivial : forall self : t . Inv0.inv self = true
end
module CreusotContracts_Std1_Time_Impl1_DeepModel_Stub
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  function deep_model (self : Core_Time_Duration_Type.t_duration) : int
end
module CreusotContracts_Std1_Time_Impl1_DeepModel_Interface
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  function deep_model (self : Core_Time_Duration_Type.t_duration) : int
  val deep_model (self : Core_Time_Duration_Type.t_duration) : int
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 25 14 25 77] result >= 0 /\ result <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999 }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 26 14 26 44] result = ShallowModel0.shallow_model self }
    ensures { result = deep_model self }
    
  axiom deep_model_spec : forall self : Core_Time_Duration_Type.t_duration . ([#"../../../../creusot-contracts/src/std/time.rs" 26 14 26 44] deep_model self = ShallowModel0.shallow_model self) && ([#"../../../../creusot-contracts/src/std/time.rs" 25 14 25 77] deep_model self >= 0 /\ deep_model self <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999)
end
module CreusotContracts_Std1_Time_Impl1_DeepModel
  use prelude.Int
  use prelude.UInt64
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone Core_Num_Impl9_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    axiom .
  function deep_model (self : Core_Time_Duration_Type.t_duration) : int
  val deep_model (self : Core_Time_Duration_Type.t_duration) : int
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 25 14 25 77] result >= 0 /\ result <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999 }
    ensures { [#"../../../../creusot-contracts/src/std/time.rs" 26 14 26 44] result = ShallowModel0.shallow_model self }
    ensures { result = deep_model self }
    
  axiom deep_model_spec : forall self : Core_Time_Duration_Type.t_duration . ([#"../../../../creusot-contracts/src/std/time.rs" 26 14 26 44] deep_model self = ShallowModel0.shallow_model self) && ([#"../../../../creusot-contracts/src/std/time.rs" 25 14 25 77] deep_model self >= 0 /\ deep_model self <= SecsToNanos0.secs_to_nanos (UInt64.to_int Max0.mAX') + 999999999)
end
module Duration_TestDuration_Interface
  val test_duration [#"../duration.rs" 7 0 7 22] (_1 : ()) : ()
end
module Duration_TestDuration
  use prelude.Int
  use prelude.UInt64
  use prelude.UInt32
  use prelude.UInt128
  use prelude.Borrow
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration),
    predicate Inv0.inv = Inv0.inv,
    axiom .
  clone CreusotContracts_Std1_Time_SecsToNanos_Interface as SecsToNanos0
  clone Core_Num_Impl9_Max as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos,
    axiom .
  clone Core_Time_Impl4_Sub_Interface as Sub0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Time_Impl2_Add_Interface as Add0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX',
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos
  use prelude.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModel_Interface as DeepModel1 with
    val Max0.mAX' = Max0.mAX',
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    axiom .
  clone CreusotContracts_Std1_Option_Impl0_DeepModel as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = int,
    function DeepModel0.deep_model = DeepModel1.deep_model
  clone Core_Time_Impl1_CheckedDiv_Interface as CheckedDiv0 with
    function DeepModel0.deep_model = DeepModel0.deep_model,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Std1_Time_NanosToSecs_Interface as NanosToSecs0
  clone Core_Time_Impl1_CheckedMul_Interface as CheckedMul0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs,
    val Max0.mAX' = Max0.mAX',
    function DeepModel0.deep_model = DeepModel0.deep_model
  clone Core_Time_Impl1_CheckedSub_Interface as CheckedSub0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function DeepModel0.deep_model = DeepModel0.deep_model
  clone Core_Option_Impl0_IsSome_Interface as IsSome0 with
    type t = Core_Time_Duration_Type.t_duration,
    predicate Inv0.inv = Inv0.inv
  clone Core_Option_Impl0_IsNone_Interface as IsNone0 with
    type t = Core_Time_Duration_Type.t_duration,
    predicate Inv0.inv = Inv0.inv
  clone Core_Time_Impl1_CheckedAdd_Interface as CheckedAdd0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs,
    val Max0.mAX' = Max0.mAX',
    function DeepModel0.deep_model = DeepModel0.deep_model
  clone CreusotContracts_Std1_Time_NanosToMicros_Interface as NanosToMicros0
  clone CreusotContracts_Model_Impl5_ShallowModel as ShallowModel1 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = int,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Time_Impl1_AsMicros_Interface as AsMicros0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMicros0.nanos_to_micros = NanosToMicros0.nanos_to_micros
  clone CreusotContracts_Std1_Time_NanosToMillis_Interface as NanosToMillis0
  clone Core_Time_Impl1_AsMillis_Interface as AsMillis0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMillis0.nanos_to_millis = NanosToMillis0.nanos_to_millis
  clone Core_Time_Impl1_SubsecNanos_Interface as SubsecNanos0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Core_Time_Impl1_SubsecMicros_Interface as SubsecMicros0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMicros0.nanos_to_micros = NanosToMicros0.nanos_to_micros
  clone Core_Time_Impl1_SubsecMillis_Interface as SubsecMillis0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMillis0.nanos_to_millis = NanosToMillis0.nanos_to_millis
  clone Core_Time_Impl1_AsSecs_Interface as AsSecs0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs
  clone Core_Time_Impl1_IsZero_Interface as IsZero0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Core_Time_Impl1_FromNanos_Interface as FromNanos0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Time_Impl1_FromMicros_Interface as FromMicros0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Time_Impl1_FromMillis_Interface as FromMillis0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Time_Impl1_FromSecs_Interface as FromSecs0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos
  clone Core_Time_Impl1_AsNanos_Interface as AsNanos0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX',
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos
  clone Core_Time_Impl1_New_Interface as New0 with
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs,
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos
  let rec cfg test_duration [#"../duration.rs" 7 0 7 22] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var zero : Core_Time_Duration_Type.t_duration;
  var _7 : uint128;
  var max : Core_Time_Duration_Type.t_duration;
  var d_secs : Core_Time_Duration_Type.t_duration;
  var d_millis : Core_Time_Duration_Type.t_duration;
  var d_micros : Core_Time_Duration_Type.t_duration;
  var d_nanos : Core_Time_Duration_Type.t_duration;
  var _25 : bool;
  var _31 : bool;
  var _37 : uint64;
  var _43 : uint32;
  var _49 : uint32;
  var _55 : uint32;
  var _62 : uint32;
  var _64 : uint128;
  var _71 : uint32;
  var _73 : uint128;
  var _80 : uint32;
  var _82 : uint128;
  var _87 : bool;
  var _89 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _95 : bool;
  var _97 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _103 : bool;
  var _105 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _111 : bool;
  var _113 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _119 : bool;
  var _121 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _126 : bool;
  var _128 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _133 : bool;
  var _135 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _140 : bool;
  var _142 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var sum : Core_Time_Duration_Type.t_duration;
  var difference : Core_Time_Duration_Type.t_duration;
  {
    goto BB0
  }
  BB0 {
    zero <- ([#"../duration.rs" 8 15 8 34] New0.new ([#"../duration.rs" 8 29 8 30] [#"../duration.rs" 8 29 8 30] (0 : uint64)) ([#"../duration.rs" 8 32 8 33] [#"../duration.rs" 8 32 8 33] (0 : uint32)));
    goto BB1
  }
  BB1 {
    assert { [@expl:assertion] [#"../duration.rs" 9 18 9 28] ShallowModel0.shallow_model zero = 0 };
    _7 <- ([#"../duration.rs" 10 12 10 27] AsNanos0.as_nanos ([#"../duration.rs" 10 12 10 27] zero));
    goto BB2
  }
  BB2 {
    switch ([#"../duration.rs" 10 4 10 33] not ([#"../duration.rs" 10 12 10 32] _7 = ([#"../duration.rs" 10 31 10 32] [#"../duration.rs" 10 31 10 32] (0 : uint128))))
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    absurd
  }
  BB4 {
    max <- ([#"../duration.rs" 12 14 12 50] New0.new ([#"../duration.rs" 12 28 12 36] [#"../duration.rs" 12 28 12 36] (18446744073709551615 : uint64)) ([#"../duration.rs" 12 38 12 49] [#"../duration.rs" 12 38 12 49] (999999999 : uint32)));
    goto BB5
  }
  BB5 {
    d_secs <- ([#"../duration.rs" 14 17 14 39] FromSecs0.from_secs ([#"../duration.rs" 14 37 14 38] [#"../duration.rs" 14 37 14 38] (1 : uint64)));
    goto BB6
  }
  BB6 {
    assert { [@expl:assertion] [#"../duration.rs" 15 18 15 42] ShallowModel0.shallow_model d_secs = 1000000000 };
    d_millis <- ([#"../duration.rs" 17 19 17 43] FromMillis0.from_millis ([#"../duration.rs" 17 41 17 42] [#"../duration.rs" 17 41 17 42] (1 : uint64)));
    goto BB7
  }
  BB7 {
    assert { [@expl:assertion] [#"../duration.rs" 18 18 18 40] ShallowModel0.shallow_model d_millis = 1000000 };
    d_micros <- ([#"../duration.rs" 20 19 20 43] FromMicros0.from_micros ([#"../duration.rs" 20 41 20 42] [#"../duration.rs" 20 41 20 42] (1 : uint64)));
    goto BB8
  }
  BB8 {
    assert { [@expl:assertion] [#"../duration.rs" 21 18 21 36] ShallowModel0.shallow_model d_micros = 1000 };
    d_nanos <- ([#"../duration.rs" 23 18 23 41] FromNanos0.from_nanos ([#"../duration.rs" 23 39 23 40] [#"../duration.rs" 23 39 23 40] (1 : uint64)));
    goto BB9
  }
  BB9 {
    assert { [@expl:assertion] [#"../duration.rs" 24 18 24 31] ShallowModel0.shallow_model d_nanos = 1 };
    _25 <- ([#"../duration.rs" 26 12 26 26] IsZero0.is_zero ([#"../duration.rs" 26 12 26 26] zero));
    goto BB10
  }
  BB10 {
    switch ([#"../duration.rs" 26 4 26 27] not _25)
      | False -> goto BB12
      | True -> goto BB11
      end
  }
  BB11 {
    absurd
  }
  BB12 {
    _31 <- ([#"../duration.rs" 27 13 27 29] IsZero0.is_zero ([#"../duration.rs" 27 13 27 29] d_secs));
    goto BB13
  }
  BB13 {
    switch ([#"../duration.rs" 27 4 27 30] not ([#"../duration.rs" 27 12 27 29] not _31))
      | False -> goto BB15
      | True -> goto BB14
      end
  }
  BB14 {
    absurd
  }
  BB15 {
    _37 <- ([#"../duration.rs" 29 17 29 33] AsSecs0.as_secs ([#"../duration.rs" 29 17 29 33] d_secs));
    goto BB16
  }
  BB16 {
    switch ([#"../duration.rs" 29 4 29 34] not ([#"../duration.rs" 29 12 29 33] ([#"../duration.rs" 29 12 29 13] [#"../duration.rs" 29 12 29 13] (1 : uint64)) = _37))
      | False -> goto BB18
      | True -> goto BB17
      end
  }
  BB17 {
    absurd
  }
  BB18 {
    _43 <- ([#"../duration.rs" 30 17 30 39] SubsecMillis0.subsec_millis ([#"../duration.rs" 30 17 30 39] d_secs));
    goto BB19
  }
  BB19 {
    switch ([#"../duration.rs" 30 4 30 40] not ([#"../duration.rs" 30 12 30 39] ([#"../duration.rs" 30 12 30 13] [#"../duration.rs" 30 12 30 13] (0 : uint32)) = _43))
      | False -> goto BB21
      | True -> goto BB20
      end
  }
  BB20 {
    absurd
  }
  BB21 {
    _49 <- ([#"../duration.rs" 31 17 31 39] SubsecMicros0.subsec_micros ([#"../duration.rs" 31 17 31 39] d_secs));
    goto BB22
  }
  BB22 {
    switch ([#"../duration.rs" 31 4 31 40] not ([#"../duration.rs" 31 12 31 39] ([#"../duration.rs" 31 12 31 13] [#"../duration.rs" 31 12 31 13] (0 : uint32)) = _49))
      | False -> goto BB24
      | True -> goto BB23
      end
  }
  BB23 {
    absurd
  }
  BB24 {
    _55 <- ([#"../duration.rs" 32 17 32 38] SubsecNanos0.subsec_nanos ([#"../duration.rs" 32 17 32 38] d_secs));
    goto BB25
  }
  BB25 {
    switch ([#"../duration.rs" 32 4 32 39] not ([#"../duration.rs" 32 12 32 38] ([#"../duration.rs" 32 12 32 13] [#"../duration.rs" 32 12 32 13] (0 : uint32)) = _55))
      | False -> goto BB27
      | True -> goto BB26
      end
  }
  BB26 {
    absurd
  }
  BB27 {
    _62 <- ([#"../duration.rs" 34 12 34 36] SubsecMillis0.subsec_millis ([#"../duration.rs" 34 12 34 36] d_millis));
    goto BB28
  }
  BB28 {
    _64 <- ([#"../duration.rs" 34 48 34 68] AsMillis0.as_millis ([#"../duration.rs" 34 48 34 68] d_millis));
    goto BB29
  }
  BB29 {
    switch ([#"../duration.rs" 34 4 34 69] not ([#"../duration.rs" 34 12 34 68] ([#"../duration.rs" 34 12 34 44] UInt128.of_int (UInt32.to_int _62)) = _64))
      | False -> goto BB31
      | True -> goto BB30
      end
  }
  BB30 {
    absurd
  }
  BB31 {
    _71 <- ([#"../duration.rs" 35 12 35 36] SubsecMicros0.subsec_micros ([#"../duration.rs" 35 12 35 36] d_micros));
    goto BB32
  }
  BB32 {
    _73 <- ([#"../duration.rs" 35 48 35 68] AsMicros0.as_micros ([#"../duration.rs" 35 48 35 68] d_micros));
    goto BB33
  }
  BB33 {
    switch ([#"../duration.rs" 35 4 35 69] not ([#"../duration.rs" 35 12 35 68] ([#"../duration.rs" 35 12 35 44] UInt128.of_int (UInt32.to_int _71)) = _73))
      | False -> goto BB35
      | True -> goto BB34
      end
  }
  BB34 {
    absurd
  }
  BB35 {
    _80 <- ([#"../duration.rs" 36 12 36 34] SubsecNanos0.subsec_nanos ([#"../duration.rs" 36 12 36 34] d_nanos));
    goto BB36
  }
  BB36 {
    _82 <- ([#"../duration.rs" 36 46 36 64] AsNanos0.as_nanos ([#"../duration.rs" 36 46 36 64] d_nanos));
    goto BB37
  }
  BB37 {
    switch ([#"../duration.rs" 36 4 36 65] not ([#"../duration.rs" 36 12 36 64] ([#"../duration.rs" 36 12 36 42] UInt128.of_int (UInt32.to_int _80)) = _82))
      | False -> goto BB39
      | True -> goto BB38
      end
  }
  BB38 {
    absurd
  }
  BB39 {
    _89 <- ([#"../duration.rs" 38 12 38 35] CheckedAdd0.checked_add d_secs max);
    goto BB40
  }
  BB40 {
    _87 <- ([#"../duration.rs" 38 12 38 45] IsNone0.is_none ([#"../duration.rs" 38 12 38 45] _89));
    goto BB41
  }
  BB41 {
    switch ([#"../duration.rs" 38 4 38 46] not _87)
      | False -> goto BB43
      | True -> goto BB42
      end
  }
  BB42 {
    absurd
  }
  BB43 {
    _97 <- ([#"../duration.rs" 39 12 39 38] CheckedAdd0.checked_add d_secs d_secs);
    goto BB44
  }
  BB44 {
    _95 <- ([#"../duration.rs" 39 12 39 48] IsSome0.is_some ([#"../duration.rs" 39 12 39 48] _97));
    goto BB45
  }
  BB45 {
    switch ([#"../duration.rs" 39 4 39 49] not _95)
      | False -> goto BB47
      | True -> goto BB46
      end
  }
  BB46 {
    absurd
  }
  BB47 {
    _105 <- ([#"../duration.rs" 41 12 41 35] CheckedSub0.checked_sub d_secs max);
    goto BB48
  }
  BB48 {
    _103 <- ([#"../duration.rs" 41 12 41 45] IsNone0.is_none ([#"../duration.rs" 41 12 41 45] _105));
    goto BB49
  }
  BB49 {
    switch ([#"../duration.rs" 41 4 41 46] not _103)
      | False -> goto BB51
      | True -> goto BB50
      end
  }
  BB50 {
    absurd
  }
  BB51 {
    _113 <- ([#"../duration.rs" 42 12 42 40] CheckedSub0.checked_sub d_secs d_millis);
    goto BB52
  }
  BB52 {
    _111 <- ([#"../duration.rs" 42 12 42 50] IsSome0.is_some ([#"../duration.rs" 42 12 42 50] _113));
    goto BB53
  }
  BB53 {
    switch ([#"../duration.rs" 42 4 42 51] not _111)
      | False -> goto BB55
      | True -> goto BB54
      end
  }
  BB54 {
    absurd
  }
  BB55 {
    _121 <- ([#"../duration.rs" 44 12 44 30] CheckedMul0.checked_mul max ([#"../duration.rs" 44 28 44 29] [#"../duration.rs" 44 28 44 29] (2 : uint32)));
    goto BB56
  }
  BB56 {
    _119 <- ([#"../duration.rs" 44 12 44 40] IsNone0.is_none ([#"../duration.rs" 44 12 44 40] _121));
    goto BB57
  }
  BB57 {
    switch ([#"../duration.rs" 44 4 44 41] not _119)
      | False -> goto BB59
      | True -> goto BB58
      end
  }
  BB58 {
    absurd
  }
  BB59 {
    _128 <- ([#"../duration.rs" 45 12 45 34] CheckedMul0.checked_mul d_secs ([#"../duration.rs" 45 31 45 33] [#"../duration.rs" 45 31 45 33] (10 : uint32)));
    goto BB60
  }
  BB60 {
    _126 <- ([#"../duration.rs" 45 12 45 44] IsSome0.is_some ([#"../duration.rs" 45 12 45 44] _128));
    goto BB61
  }
  BB61 {
    switch ([#"../duration.rs" 45 4 45 45] not _126)
      | False -> goto BB63
      | True -> goto BB62
      end
  }
  BB62 {
    absurd
  }
  BB63 {
    _135 <- ([#"../duration.rs" 47 12 47 33] CheckedDiv0.checked_div d_secs ([#"../duration.rs" 47 31 47 32] [#"../duration.rs" 47 31 47 32] (0 : uint32)));
    goto BB64
  }
  BB64 {
    _133 <- ([#"../duration.rs" 47 12 47 43] IsNone0.is_none ([#"../duration.rs" 47 12 47 43] _135));
    goto BB65
  }
  BB65 {
    switch ([#"../duration.rs" 47 4 47 44] not _133)
      | False -> goto BB67
      | True -> goto BB66
      end
  }
  BB66 {
    absurd
  }
  BB67 {
    _142 <- ([#"../duration.rs" 48 12 48 34] CheckedDiv0.checked_div d_secs ([#"../duration.rs" 48 31 48 33] [#"../duration.rs" 48 31 48 33] (10 : uint32)));
    goto BB68
  }
  BB68 {
    _140 <- ([#"../duration.rs" 48 12 48 44] IsSome0.is_some ([#"../duration.rs" 48 12 48 44] _142));
    goto BB69
  }
  BB69 {
    switch ([#"../duration.rs" 48 4 48 45] not _140)
      | False -> goto BB71
      | True -> goto BB70
      end
  }
  BB70 {
    absurd
  }
  BB71 {
    sum <- ([#"../duration.rs" 50 14 50 33] Add0.add d_millis d_micros);
    goto BB72
  }
  BB72 {
    difference <- ([#"../duration.rs" 51 21 51 40] Sub0.sub d_millis d_micros);
    goto BB73
  }
  BB73 {
    assert { [@expl:assertion] [#"../duration.rs" 52 18 52 35] ShallowModel0.shallow_model sum = 1001000 };
    assert { [@expl:assertion] [#"../duration.rs" 53 18 53 39] ShallowModel0.shallow_model difference = 999000 };
    _0 <- ([#"../duration.rs" 7 23 54 1] ());
    return _0
  }
  
end
