
module CreusotContracts_Std1_Time_NanosToSecs_Stub
  use mach.int.Int
  function nanos_to_secs (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToSecs_Interface
  use mach.int.Int
  function nanos_to_secs (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToSecs
  use mach.int.Int
  function nanos_to_secs (nanos : int) : int =
    div nanos 1000000000
  val nanos_to_secs (nanos : int) : int
    ensures { result = nanos_to_secs nanos }
    
end
module Core_Time_Nanoseconds_Type
  use mach.int.Int
  use mach.int.UInt32
  type t_nanoseconds  =
    | C_Nanoseconds uint32
    
end
module Core_Time_Duration_Type
  use mach.int.Int
  use mach.int.UInt64
  use Core_Time_Nanoseconds_Type as Core_Time_Nanoseconds_Type
  type t_duration  =
    | C_Duration uint64 (Core_Time_Nanoseconds_Type.t_nanoseconds)
    
end
module Core_Num_Impl11_Max_Stub
  use mach.int.Int
  use prelude.UInt128
  val constant mAX'  : uint128
end
module Core_Num_Impl11_Max
  use mach.int.Int
  use prelude.UInt128
  let constant mAX'  : uint128 = [@vc:do_not_keep_trace] [@vc:sp]
    (340282366920938463463374607431768211455 : uint128)
end
module CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub
  use mach.int.Int
  use prelude.UInt128
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : Core_Time_Duration_Type.t_duration) : int
end
module CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface
  use mach.int.Int
  use prelude.UInt128
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : Core_Time_Duration_Type.t_duration) : int
  axiom shallow_model_spec : forall self : Core_Time_Duration_Type.t_duration . shallow_model self >= 0 /\ shallow_model self <= UInt128.to_int Max0.mAX'
end
module CreusotContracts_Std1_Time_Impl0_ShallowModel
  use mach.int.Int
  use prelude.UInt128
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : Core_Time_Duration_Type.t_duration) : int
  val shallow_model (self : Core_Time_Duration_Type.t_duration) : int
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : Core_Time_Duration_Type.t_duration . shallow_model self >= 0 /\ shallow_model self <= UInt128.to_int Max0.mAX'
end
module CreusotContracts_Std1_Time_SecsToNanos_Stub
  use mach.int.Int
  function secs_to_nanos (secs : int) : int
end
module CreusotContracts_Std1_Time_SecsToNanos_Interface
  use mach.int.Int
  function secs_to_nanos (secs : int) : int
end
module CreusotContracts_Std1_Time_SecsToNanos
  use mach.int.Int
  function secs_to_nanos (secs : int) : int =
    secs * 1000000000
  val secs_to_nanos (secs : int) : int
    ensures { result = secs_to_nanos secs }
    
end
module Core_Num_Impl10_Max_Stub
  use mach.int.Int
  use mach.int.UInt64
  val constant mAX'  : uint64
end
module Core_Num_Impl10_Max
  use mach.int.Int
  use mach.int.UInt64
  let constant mAX'  : uint64 = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : uint64)
end
module Core_Time_Impl1_New_Interface
  use mach.int.UInt64
  use mach.int.UInt32
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max1
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone Core_Num_Impl10_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  val new [@cfg:stackify] (secs : uint64) (nanos : uint32) : Core_Time_Duration_Type.t_duration
    requires {UInt64.to_int secs + NanosToSecs0.nanos_to_secs (UInt32.to_int nanos) <= UInt64.to_int Max0.mAX'}
    ensures { ShallowModel0.shallow_model result = SecsToNanos0.secs_to_nanos (UInt64.to_int secs) + UInt32.to_int nanos }
    
end
module Core_Time_Impl1_New
  use mach.int.UInt64
  use mach.int.UInt32
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max1
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Interface as SecsToNanos0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone Core_Num_Impl10_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Interface as NanosToSecs0
  val new [@cfg:stackify] (secs : uint64) (nanos : uint32) : Core_Time_Duration_Type.t_duration
    requires {UInt64.to_int secs + NanosToSecs0.nanos_to_secs (UInt32.to_int nanos) <= UInt64.to_int Max0.mAX'}
    ensures { ShallowModel0.shallow_model result = SecsToNanos0.secs_to_nanos (UInt64.to_int secs) + UInt32.to_int nanos }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl1_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl1_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl1_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy =
    ShallowModel0.shallow_model self
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type
  use mach.int.Int
  type shallowModelTy  =
    int
end
module Core_Time_Impl1_AsNanos_Interface
  use prelude.UInt128
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_nanos [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { UInt128.to_int result = ShallowModel0.shallow_model self }
    
end
module Core_Time_Impl1_AsNanos
  use prelude.UInt128
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_nanos [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { UInt128.to_int result = ShallowModel0.shallow_model self }
    
end
module Core_Time_Impl1_FromSecs_Interface
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Stub as SecsToNanos0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_secs [@cfg:stackify] (secs : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = SecsToNanos0.secs_to_nanos (UInt64.to_int secs) }
    
end
module Core_Time_Impl1_FromSecs
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_SecsToNanos_Interface as SecsToNanos0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_secs [@cfg:stackify] (secs : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = SecsToNanos0.secs_to_nanos (UInt64.to_int secs) }
    
end
module Core_Time_Impl1_FromMillis_Interface
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_millis [@cfg:stackify] (millis : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = UInt64.to_int millis * 1000000 }
    
end
module Core_Time_Impl1_FromMillis
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_millis [@cfg:stackify] (millis : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = UInt64.to_int millis * 1000000 }
    
end
module Core_Time_Impl1_FromMicros_Interface
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_micros [@cfg:stackify] (micros : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = UInt64.to_int micros * 1000 }
    
end
module Core_Time_Impl1_FromMicros
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_micros [@cfg:stackify] (micros : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = UInt64.to_int micros * 1000 }
    
end
module Core_Time_Impl1_FromNanos_Interface
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_nanos [@cfg:stackify] (nanos : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = UInt64.to_int nanos }
    
end
module Core_Time_Impl1_FromNanos
  use mach.int.UInt64
  use mach.int.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_nanos [@cfg:stackify] (nanos : uint64) : Core_Time_Duration_Type.t_duration
    ensures { ShallowModel0.shallow_model result = UInt64.to_int nanos }
    
end
module Core_Time_Impl1_IsZero_Interface
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val is_zero [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : bool
    ensures { ShallowModel0.shallow_model self = 0 -> result = true }
    ensures { ShallowModel0.shallow_model self <> 0 -> result = false }
    
end
module Core_Time_Impl1_IsZero
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val is_zero [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : bool
    ensures { ShallowModel0.shallow_model self = 0 -> result = true }
    ensures { ShallowModel0.shallow_model self <> 0 -> result = false }
    
end
module Core_Time_Impl1_AsSecs_Interface
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_secs [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint64
    ensures { UInt64.to_int result = NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self) }
    
end
module Core_Time_Impl1_AsSecs
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToSecs_Interface as NanosToSecs0
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_secs [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint64
    ensures { UInt64.to_int result = NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self) }
    
end
module CreusotContracts_Std1_Time_NanosToMillis_Stub
  use mach.int.Int
  function nanos_to_millis (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToMillis_Interface
  use mach.int.Int
  function nanos_to_millis (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToMillis
  use mach.int.Int
  function nanos_to_millis (nanos : int) : int =
    div nanos 1000000
  val nanos_to_millis (nanos : int) : int
    ensures { result = nanos_to_millis nanos }
    
end
module Core_Time_Impl1_SubsecMillis_Interface
  use mach.int.UInt32
  use mach.int.Int
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMillis_Stub as NanosToMillis0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val subsec_millis [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { UInt32.to_int result = mod (NanosToMillis0.nanos_to_millis (ShallowModel0.shallow_model self)) 1000 }
    ensures { result < (1000 : uint32) }
    
end
module Core_Time_Impl1_SubsecMillis
  use mach.int.UInt32
  use mach.int.Int
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMillis_Interface as NanosToMillis0
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val subsec_millis [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { UInt32.to_int result = mod (NanosToMillis0.nanos_to_millis (ShallowModel0.shallow_model self)) 1000 }
    ensures { result < (1000 : uint32) }
    
end
module CreusotContracts_Std1_Time_NanosToMicros_Stub
  use mach.int.Int
  function nanos_to_micros (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToMicros_Interface
  use mach.int.Int
  function nanos_to_micros (nanos : int) : int
end
module CreusotContracts_Std1_Time_NanosToMicros
  use mach.int.Int
  function nanos_to_micros (nanos : int) : int =
    div nanos 1000
  val nanos_to_micros (nanos : int) : int
    ensures { result = nanos_to_micros nanos }
    
end
module Core_Time_Impl1_SubsecMicros_Interface
  use mach.int.UInt32
  use mach.int.Int
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMicros_Stub as NanosToMicros0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val subsec_micros [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { UInt32.to_int result = mod (NanosToMicros0.nanos_to_micros (ShallowModel0.shallow_model self)) 1000000 }
    ensures { result < (1000000 : uint32) }
    
end
module Core_Time_Impl1_SubsecMicros
  use mach.int.UInt32
  use mach.int.Int
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMicros_Interface as NanosToMicros0
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val subsec_micros [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { UInt32.to_int result = mod (NanosToMicros0.nanos_to_micros (ShallowModel0.shallow_model self)) 1000000 }
    ensures { result < (1000000 : uint32) }
    
end
module Core_Time_Impl1_SubsecNanos_Interface
  use mach.int.UInt32
  use mach.int.Int
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val subsec_nanos [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { UInt32.to_int result = mod (ShallowModel0.shallow_model self) 1000000000 }
    ensures { result < (1000000000 : uint32) }
    
end
module Core_Time_Impl1_SubsecNanos
  use mach.int.UInt32
  use mach.int.Int
  use prelude.Borrow
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val subsec_nanos [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint32
    ensures { UInt32.to_int result = mod (ShallowModel0.shallow_model self) 1000000000 }
    ensures { result < (1000000000 : uint32) }
    
end
module Core_Time_Impl1_AsMillis_Interface
  use prelude.UInt128
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMillis_Stub as NanosToMillis0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_millis [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { UInt128.to_int result = NanosToMillis0.nanos_to_millis (ShallowModel0.shallow_model self) }
    
end
module Core_Time_Impl1_AsMillis
  use prelude.UInt128
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMillis_Interface as NanosToMillis0
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_millis [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { UInt128.to_int result = NanosToMillis0.nanos_to_millis (ShallowModel0.shallow_model self) }
    
end
module Core_Time_Impl1_AsMicros_Interface
  use prelude.UInt128
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMicros_Stub as NanosToMicros0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_micros [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { UInt128.to_int result = NanosToMicros0.nanos_to_micros (ShallowModel0.shallow_model self) }
    
end
module Core_Time_Impl1_AsMicros
  use prelude.UInt128
  use prelude.Borrow
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_NanosToMicros_Interface as NanosToMicros0
  clone CreusotContracts_Model_Impl1_ShallowModel_Interface as ShallowModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  val as_micros [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) : uint128
    ensures { UInt128.to_int result = NanosToMicros0.nanos_to_micros (ShallowModel0.shallow_model self) }
    
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module CreusotContracts_Model_DeepModel_DeepModelTy_Type
  type self
  type deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Stub
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Interface
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
  val deep_model (self : self) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Model_Impl10_DeepModel_Stub
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
end
module CreusotContracts_Model_Impl10_DeepModel_Interface
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
end
module CreusotContracts_Model_Impl10_DeepModel
  type t
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_DeepModel_DeepModel_Stub as DeepModel0 with
    type self = t,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  function deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    
   =
    match (self) with
      | Core_Option_Option_Type.C_Some t -> Core_Option_Option_Type.C_Some (DeepModel0.deep_model t)
      | Core_Option_Option_Type.C_None -> Core_Option_Option_Type.C_None
      end
  val deep_model (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type
  use mach.int.Int
  type deepModelTy  =
    int
end
module Core_Time_Impl1_CheckedAdd_Interface
  use mach.int.Int
  use mach.int.UInt64
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  clone Core_Num_Impl11_Max_Stub as Max1
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  clone Core_Num_Impl10_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max1.mAX',
    axiom .
  val checked_add [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) > UInt64.to_int Max0.mAX' -> result = Core_Option_Option_Type.C_None }
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) <= UInt64.to_int Max0.mAX' -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) }
    
end
module Core_Time_Impl1_CheckedAdd
  use mach.int.Int
  use mach.int.UInt64
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  clone Core_Num_Impl11_Max_Stub as Max1
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Interface as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  clone Core_Num_Impl10_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Interface as NanosToSecs0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max1.mAX',
    axiom .
  val checked_add [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) > UInt64.to_int Max0.mAX' -> result = Core_Option_Option_Type.C_None }
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) <= UInt64.to_int Max0.mAX' -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self + ShallowModel0.shallow_model rhs) }
    
end
module Core_Option_Impl0_IsNone_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_none [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self = Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsNone
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_none [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self = Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsSome_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_some [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self <> Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsSome
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_some [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self <> Core_Option_Option_Type.C_None) }
    
end
module Core_Time_Impl1_CheckedSub_Interface
  use mach.int.Int
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val checked_sub [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs < 0 -> result = Core_Option_Option_Type.C_None }
    ensures { ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs >= 0 -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs) }
    
end
module Core_Time_Impl1_CheckedSub
  use mach.int.Int
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  clone Core_Num_Impl11_Max_Stub as Max0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Interface as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  val checked_sub [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : Core_Time_Duration_Type.t_duration) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs < 0 -> result = Core_Option_Option_Type.C_None }
    ensures { ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs >= 0 -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self - ShallowModel0.shallow_model rhs) }
    
end
module Core_Time_Impl1_CheckedMul_Interface
  use mach.int.UInt32
  use mach.int.Int
  use mach.int.UInt64
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  clone Core_Num_Impl11_Max_Stub as Max1
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  clone Core_Num_Impl10_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Stub as NanosToSecs0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max1.mAX',
    axiom .
  val checked_mul [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : uint32) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self * UInt32.to_int rhs) > UInt64.to_int Max0.mAX' -> result = Core_Option_Option_Type.C_None }
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self * UInt32.to_int rhs) <= UInt64.to_int Max0.mAX' -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self * UInt32.to_int rhs) }
    
end
module Core_Time_Impl1_CheckedMul
  use mach.int.UInt32
  use mach.int.Int
  use mach.int.UInt64
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  clone Core_Num_Impl11_Max_Stub as Max1
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Interface as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  clone Core_Num_Impl10_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs_Interface as NanosToSecs0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max1.mAX',
    axiom .
  val checked_mul [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : uint32) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self * UInt32.to_int rhs) > UInt64.to_int Max0.mAX' -> result = Core_Option_Option_Type.C_None }
    ensures { NanosToSecs0.nanos_to_secs (ShallowModel0.shallow_model self * UInt32.to_int rhs) <= UInt64.to_int Max0.mAX' -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (ShallowModel0.shallow_model self * UInt32.to_int rhs) }
    
end
module Core_Time_Impl1_CheckedDiv_Interface
  use mach.int.Int
  use mach.int.UInt32
  clone Core_Num_Impl11_Max_Stub as Max0
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Stub as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  val checked_div [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : uint32) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { rhs = (0 : uint32) -> result = Core_Option_Option_Type.C_None }
    ensures { rhs <> (0 : uint32) -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (div (ShallowModel0.shallow_model self) (UInt32.to_int rhs)) }
    
end
module Core_Time_Impl1_CheckedDiv
  use mach.int.Int
  use mach.int.UInt32
  clone Core_Num_Impl11_Max_Stub as Max0
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Interface as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel_Interface as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  val checked_div [@cfg:stackify] (self : Core_Time_Duration_Type.t_duration) (rhs : uint32) : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration)
    ensures { rhs = (0 : uint32) -> result = Core_Option_Option_Type.C_None }
    ensures { rhs <> (0 : uint32) -> DeepModel0.deep_model result = Core_Option_Option_Type.C_Some (div (ShallowModel0.shallow_model self) (UInt32.to_int rhs)) }
    
end
module CreusotContracts_Std1_Time_Impl1_DeepModel_Stub
  use mach.int.Int
  use prelude.UInt128
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  function deep_model (self : Core_Time_Duration_Type.t_duration) : int
end
module CreusotContracts_Std1_Time_Impl1_DeepModel_Interface
  use mach.int.Int
  use prelude.UInt128
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  function deep_model (self : Core_Time_Duration_Type.t_duration) : int
  axiom deep_model_spec : forall self : Core_Time_Duration_Type.t_duration . deep_model self = ShallowModel0.shallow_model self && deep_model self >= 0 /\ deep_model self <= UInt128.to_int Max0.mAX'
end
module CreusotContracts_Std1_Time_Impl1_DeepModel
  use mach.int.Int
  use prelude.UInt128
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel_Stub as ShallowModel0 with
    val Max0.mAX' = Max0.mAX',
    axiom .
  function deep_model (self : Core_Time_Duration_Type.t_duration) : int
  val deep_model (self : Core_Time_Duration_Type.t_duration) : int
    ensures { result = deep_model self }
    
  axiom deep_model_spec : forall self : Core_Time_Duration_Type.t_duration . deep_model self = ShallowModel0.shallow_model self && deep_model self >= 0 /\ deep_model self <= UInt128.to_int Max0.mAX'
end
module Duration_TestDuration_Interface
  val test_duration [@cfg:stackify] [#"../duration.rs" 7 0 7 22] (_1' : ()) : ()
end
module Duration_TestDuration
  use mach.int.Int
  use prelude.UInt128
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.UInt32
  use Core_Time_Duration_Type as Core_Time_Duration_Type
  clone Core_Num_Impl11_Max as Max1
  clone CreusotContracts_Std1_Time_Impl0_ShallowModel as ShallowModel0 with
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Time_Impl1_DeepModel as DeepModel1 with
    val Max0.mAX' = Max1.mAX',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    axiom .
  use mach.int.Int
  clone CreusotContracts_Std1_Time_Impl1_DeepModelTy_Type as DeepModelTy0
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Model_Impl10_DeepModel as DeepModel0 with
    type t = Core_Time_Duration_Type.t_duration,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy,
    function DeepModel0.deep_model = DeepModel1.deep_model
  clone CreusotContracts_Std1_Time_NanosToMicros as NanosToMicros0
  clone CreusotContracts_Std1_Time_NanosToMillis as NanosToMillis0
  clone CreusotContracts_Std1_Time_Impl0_ShallowModelTy_Type as ShallowModelTy0
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel1 with
    type t = Core_Time_Duration_Type.t_duration,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Std1_Time_SecsToNanos as SecsToNanos0
  clone Core_Num_Impl10_Max as Max0
  clone CreusotContracts_Std1_Time_NanosToSecs as NanosToSecs0
  clone Core_Time_Impl1_CheckedDiv_Interface as CheckedDiv0 with
    function DeepModel0.deep_model = DeepModel0.deep_model,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Core_Time_Impl1_CheckedMul_Interface as CheckedMul0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs,
    val Max0.mAX' = Max0.mAX',
    function DeepModel0.deep_model = DeepModel0.deep_model,
    val Max1.mAX' = Max1.mAX'
  clone Core_Time_Impl1_CheckedSub_Interface as CheckedSub0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function DeepModel0.deep_model = DeepModel0.deep_model,
    val Max0.mAX' = Max1.mAX'
  clone Core_Option_Impl0_IsSome_Interface as IsSome0 with
    type t = Core_Time_Duration_Type.t_duration
  clone Core_Option_Impl0_IsNone_Interface as IsNone0 with
    type t = Core_Time_Duration_Type.t_duration
  clone Core_Time_Impl1_CheckedAdd_Interface as CheckedAdd0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs,
    val Max0.mAX' = Max0.mAX',
    function DeepModel0.deep_model = DeepModel0.deep_model,
    val Max1.mAX' = Max1.mAX'
  clone Core_Time_Impl1_AsMicros_Interface as AsMicros0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMicros0.nanos_to_micros = NanosToMicros0.nanos_to_micros
  clone Core_Time_Impl1_AsMillis_Interface as AsMillis0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMillis0.nanos_to_millis = NanosToMillis0.nanos_to_millis
  clone Core_Time_Impl1_SubsecNanos_Interface as SubsecNanos0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Core_Time_Impl1_SubsecMicros_Interface as SubsecMicros0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMicros0.nanos_to_micros = NanosToMicros0.nanos_to_micros
  clone Core_Time_Impl1_SubsecMillis_Interface as SubsecMillis0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToMillis0.nanos_to_millis = NanosToMillis0.nanos_to_millis
  clone Core_Time_Impl1_AsSecs_Interface as AsSecs0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs
  clone Core_Time_Impl1_IsZero_Interface as IsZero0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Core_Time_Impl1_FromNanos_Interface as FromNanos0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Core_Time_Impl1_FromMicros_Interface as FromMicros0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Core_Time_Impl1_FromMillis_Interface as FromMillis0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Core_Time_Impl1_FromSecs_Interface as FromSecs0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos,
    val Max0.mAX' = Max1.mAX'
  clone Core_Time_Impl1_AsNanos_Interface as AsNanos0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Core_Time_Impl1_New_Interface as New0 with
    function NanosToSecs0.nanos_to_secs = NanosToSecs0.nanos_to_secs,
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function SecsToNanos0.secs_to_nanos = SecsToNanos0.secs_to_nanos,
    val Max1.mAX' = Max1.mAX'
  let rec cfg test_duration [@cfg:stackify] [#"../duration.rs" 7 0 7 22] (_1' : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var zero_1 : Core_Time_Duration_Type.t_duration;
  var _2 : ();
  var _4 : ();
  var _5 : bool;
  var _6 : bool;
  var _7 : uint128;
  var _8 : Core_Time_Duration_Type.t_duration;
  var _9 : ();
  var max_10 : Core_Time_Duration_Type.t_duration;
  var d_secs_11 : Core_Time_Duration_Type.t_duration;
  var _12 : ();
  var d_millis_14 : Core_Time_Duration_Type.t_duration;
  var _15 : ();
  var d_micros_17 : Core_Time_Duration_Type.t_duration;
  var _18 : ();
  var d_nanos_20 : Core_Time_Duration_Type.t_duration;
  var _21 : ();
  var _23 : ();
  var _24 : bool;
  var _25 : bool;
  var _26 : Core_Time_Duration_Type.t_duration;
  var _27 : ();
  var _28 : ();
  var _29 : bool;
  var _30 : bool;
  var _31 : bool;
  var _32 : Core_Time_Duration_Type.t_duration;
  var _33 : ();
  var _34 : ();
  var _35 : bool;
  var _36 : bool;
  var _37 : uint64;
  var _38 : Core_Time_Duration_Type.t_duration;
  var _39 : ();
  var _40 : ();
  var _41 : bool;
  var _42 : bool;
  var _43 : uint32;
  var _44 : Core_Time_Duration_Type.t_duration;
  var _45 : ();
  var _46 : ();
  var _47 : bool;
  var _48 : bool;
  var _49 : uint32;
  var _50 : Core_Time_Duration_Type.t_duration;
  var _51 : ();
  var _52 : ();
  var _53 : bool;
  var _54 : bool;
  var _55 : uint32;
  var _56 : Core_Time_Duration_Type.t_duration;
  var _57 : ();
  var _58 : ();
  var _59 : bool;
  var _60 : bool;
  var _61 : uint128;
  var _62 : uint32;
  var _63 : Core_Time_Duration_Type.t_duration;
  var _64 : uint128;
  var _65 : Core_Time_Duration_Type.t_duration;
  var _66 : ();
  var _67 : ();
  var _68 : bool;
  var _69 : bool;
  var _70 : uint128;
  var _71 : uint32;
  var _72 : Core_Time_Duration_Type.t_duration;
  var _73 : uint128;
  var _74 : Core_Time_Duration_Type.t_duration;
  var _75 : ();
  var _76 : ();
  var _77 : bool;
  var _78 : bool;
  var _79 : uint128;
  var _80 : uint32;
  var _81 : Core_Time_Duration_Type.t_duration;
  var _82 : uint128;
  var _83 : Core_Time_Duration_Type.t_duration;
  var _84 : ();
  var _85 : ();
  var _86 : bool;
  var _87 : bool;
  var _88 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _89 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _90 : Core_Time_Duration_Type.t_duration;
  var _91 : Core_Time_Duration_Type.t_duration;
  var _92 : ();
  var _93 : ();
  var _94 : bool;
  var _95 : bool;
  var _96 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _97 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _98 : Core_Time_Duration_Type.t_duration;
  var _99 : Core_Time_Duration_Type.t_duration;
  var _100 : ();
  var _101 : ();
  var _102 : bool;
  var _103 : bool;
  var _104 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _105 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _106 : Core_Time_Duration_Type.t_duration;
  var _107 : Core_Time_Duration_Type.t_duration;
  var _108 : ();
  var _109 : ();
  var _110 : bool;
  var _111 : bool;
  var _112 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _113 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _114 : Core_Time_Duration_Type.t_duration;
  var _115 : Core_Time_Duration_Type.t_duration;
  var _116 : ();
  var _117 : ();
  var _118 : bool;
  var _119 : bool;
  var _120 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _121 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _122 : Core_Time_Duration_Type.t_duration;
  var _123 : ();
  var _124 : ();
  var _125 : bool;
  var _126 : bool;
  var _127 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _128 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _129 : Core_Time_Duration_Type.t_duration;
  var _130 : ();
  var _131 : ();
  var _132 : bool;
  var _133 : bool;
  var _134 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _135 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _136 : Core_Time_Duration_Type.t_duration;
  var _137 : ();
  var _138 : ();
  var _139 : bool;
  var _140 : bool;
  var _141 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _142 : Core_Option_Option_Type.t_option (Core_Time_Duration_Type.t_duration);
  var _143 : Core_Time_Duration_Type.t_duration;
  var _144 : ();
  {
    goto BB0
  }
  BB0 {
    zero_1 <- ([#"../duration.rs" 8 15 8 34] New0.new ([#"../duration.rs" 8 29 8 30] (0 : uint64)) ([#"../duration.rs" 8 32 8 33] (0 : uint32)));
    goto BB1
  }
  BB1 {
    assert { [#"../duration.rs" 9 18 9 28] ShallowModel0.shallow_model zero_1 = 0 };
    _2 <- ();
    _8 <- zero_1;
    _7 <- ([#"../duration.rs" 10 12 10 27] AsNanos0.as_nanos _8);
    goto BB2
  }
  BB2 {
    _6 <- ([#"../duration.rs" 10 12 10 32] _7 = ([#"../duration.rs" 10 31 10 32] (0 : uint128)));
    _5 <- not _6;
    switch (_5)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    absurd
  }
  BB4 {
    _4 <- ();
    max_10 <- ([#"../duration.rs" 12 14 12 50] New0.new ([#"../duration.rs" 12 28 12 36] (18446744073709551615 : uint64)) ([#"../duration.rs" 12 38 12 49] (999999999 : uint32)));
    goto BB5
  }
  BB5 {
    d_secs_11 <- ([#"../duration.rs" 14 17 14 39] FromSecs0.from_secs ([#"../duration.rs" 14 37 14 38] (1 : uint64)));
    goto BB6
  }
  BB6 {
    assert { [#"../duration.rs" 15 18 15 42] ShallowModel0.shallow_model d_secs_11 = 1000000000 };
    _12 <- ();
    d_millis_14 <- ([#"../duration.rs" 17 19 17 43] FromMillis0.from_millis ([#"../duration.rs" 17 41 17 42] (1 : uint64)));
    goto BB7
  }
  BB7 {
    assert { [#"../duration.rs" 18 18 18 40] ShallowModel0.shallow_model d_millis_14 = 1000000 };
    _15 <- ();
    d_micros_17 <- ([#"../duration.rs" 20 19 20 43] FromMicros0.from_micros ([#"../duration.rs" 20 41 20 42] (1 : uint64)));
    goto BB8
  }
  BB8 {
    assert { [#"../duration.rs" 21 18 21 36] ShallowModel0.shallow_model d_micros_17 = 1000 };
    _18 <- ();
    d_nanos_20 <- ([#"../duration.rs" 23 18 23 41] FromNanos0.from_nanos ([#"../duration.rs" 23 39 23 40] (1 : uint64)));
    goto BB9
  }
  BB9 {
    assert { [#"../duration.rs" 24 18 24 31] ShallowModel0.shallow_model d_nanos_20 = 1 };
    _21 <- ();
    _26 <- zero_1;
    _25 <- ([#"../duration.rs" 26 12 26 26] IsZero0.is_zero _26);
    goto BB10
  }
  BB10 {
    _24 <- not _25;
    switch (_24)
      | False -> goto BB12
      | True -> goto BB11
      end
  }
  BB11 {
    absurd
  }
  BB12 {
    _23 <- ();
    _32 <- d_secs_11;
    _31 <- ([#"../duration.rs" 27 13 27 29] IsZero0.is_zero _32);
    goto BB13
  }
  BB13 {
    _30 <- not _31;
    _29 <- not _30;
    switch (_29)
      | False -> goto BB15
      | True -> goto BB14
      end
  }
  BB14 {
    absurd
  }
  BB15 {
    _28 <- ();
    _38 <- d_secs_11;
    _37 <- ([#"../duration.rs" 29 17 29 33] AsSecs0.as_secs _38);
    goto BB16
  }
  BB16 {
    _36 <- ([#"../duration.rs" 29 12 29 33] ([#"../duration.rs" 29 12 29 13] (1 : uint64)) = _37);
    _35 <- not _36;
    switch (_35)
      | False -> goto BB18
      | True -> goto BB17
      end
  }
  BB17 {
    absurd
  }
  BB18 {
    _34 <- ();
    _44 <- d_secs_11;
    _43 <- ([#"../duration.rs" 30 17 30 39] SubsecMillis0.subsec_millis _44);
    goto BB19
  }
  BB19 {
    _42 <- ([#"../duration.rs" 30 12 30 39] ([#"../duration.rs" 30 12 30 13] (0 : uint32)) = _43);
    _41 <- not _42;
    switch (_41)
      | False -> goto BB21
      | True -> goto BB20
      end
  }
  BB20 {
    absurd
  }
  BB21 {
    _40 <- ();
    _50 <- d_secs_11;
    _49 <- ([#"../duration.rs" 31 17 31 39] SubsecMicros0.subsec_micros _50);
    goto BB22
  }
  BB22 {
    _48 <- ([#"../duration.rs" 31 12 31 39] ([#"../duration.rs" 31 12 31 13] (0 : uint32)) = _49);
    _47 <- not _48;
    switch (_47)
      | False -> goto BB24
      | True -> goto BB23
      end
  }
  BB23 {
    absurd
  }
  BB24 {
    _46 <- ();
    _56 <- d_secs_11;
    _55 <- ([#"../duration.rs" 32 17 32 38] SubsecNanos0.subsec_nanos _56);
    goto BB25
  }
  BB25 {
    _54 <- ([#"../duration.rs" 32 12 32 38] ([#"../duration.rs" 32 12 32 13] (0 : uint32)) = _55);
    _53 <- not _54;
    switch (_53)
      | False -> goto BB27
      | True -> goto BB26
      end
  }
  BB26 {
    absurd
  }
  BB27 {
    _52 <- ();
    _63 <- d_millis_14;
    _62 <- ([#"../duration.rs" 34 12 34 36] SubsecMillis0.subsec_millis _63);
    goto BB28
  }
  BB28 {
    _61 <- UInt128.of_int (UInt32.to_int _62);
    _65 <- d_millis_14;
    _64 <- ([#"../duration.rs" 34 48 34 68] AsMillis0.as_millis _65);
    goto BB29
  }
  BB29 {
    _60 <- ([#"../duration.rs" 34 12 34 68] _61 = _64);
    _59 <- not _60;
    switch (_59)
      | False -> goto BB31
      | True -> goto BB30
      end
  }
  BB30 {
    absurd
  }
  BB31 {
    _58 <- ();
    _72 <- d_micros_17;
    _71 <- ([#"../duration.rs" 35 12 35 36] SubsecMicros0.subsec_micros _72);
    goto BB32
  }
  BB32 {
    _70 <- UInt128.of_int (UInt32.to_int _71);
    _74 <- d_micros_17;
    _73 <- ([#"../duration.rs" 35 48 35 68] AsMicros0.as_micros _74);
    goto BB33
  }
  BB33 {
    _69 <- ([#"../duration.rs" 35 12 35 68] _70 = _73);
    _68 <- not _69;
    switch (_68)
      | False -> goto BB35
      | True -> goto BB34
      end
  }
  BB34 {
    absurd
  }
  BB35 {
    _67 <- ();
    _81 <- d_nanos_20;
    _80 <- ([#"../duration.rs" 36 12 36 34] SubsecNanos0.subsec_nanos _81);
    goto BB36
  }
  BB36 {
    _79 <- UInt128.of_int (UInt32.to_int _80);
    _83 <- d_nanos_20;
    _82 <- ([#"../duration.rs" 36 46 36 64] AsNanos0.as_nanos _83);
    goto BB37
  }
  BB37 {
    _78 <- ([#"../duration.rs" 36 12 36 64] _79 = _82);
    _77 <- not _78;
    switch (_77)
      | False -> goto BB39
      | True -> goto BB38
      end
  }
  BB38 {
    absurd
  }
  BB39 {
    _76 <- ();
    _90 <- d_secs_11;
    _91 <- max_10;
    _89 <- ([#"../duration.rs" 38 12 38 35] CheckedAdd0.checked_add _90 _91);
    goto BB40
  }
  BB40 {
    _88 <- _89;
    _87 <- ([#"../duration.rs" 38 12 38 45] IsNone0.is_none _88);
    goto BB41
  }
  BB41 {
    _86 <- not _87;
    switch (_86)
      | False -> goto BB43
      | True -> goto BB42
      end
  }
  BB42 {
    absurd
  }
  BB43 {
    _85 <- ();
    _98 <- d_secs_11;
    _99 <- d_secs_11;
    _97 <- ([#"../duration.rs" 39 12 39 38] CheckedAdd0.checked_add _98 _99);
    goto BB44
  }
  BB44 {
    _96 <- _97;
    _95 <- ([#"../duration.rs" 39 12 39 48] IsSome0.is_some _96);
    goto BB45
  }
  BB45 {
    _94 <- not _95;
    switch (_94)
      | False -> goto BB47
      | True -> goto BB46
      end
  }
  BB46 {
    absurd
  }
  BB47 {
    _93 <- ();
    _106 <- d_secs_11;
    _107 <- max_10;
    _105 <- ([#"../duration.rs" 41 12 41 35] CheckedSub0.checked_sub _106 _107);
    goto BB48
  }
  BB48 {
    _104 <- _105;
    _103 <- ([#"../duration.rs" 41 12 41 45] IsNone0.is_none _104);
    goto BB49
  }
  BB49 {
    _102 <- not _103;
    switch (_102)
      | False -> goto BB51
      | True -> goto BB50
      end
  }
  BB50 {
    absurd
  }
  BB51 {
    _101 <- ();
    _114 <- d_secs_11;
    _115 <- d_millis_14;
    _113 <- ([#"../duration.rs" 42 12 42 40] CheckedSub0.checked_sub _114 _115);
    goto BB52
  }
  BB52 {
    _112 <- _113;
    _111 <- ([#"../duration.rs" 42 12 42 50] IsSome0.is_some _112);
    goto BB53
  }
  BB53 {
    _110 <- not _111;
    switch (_110)
      | False -> goto BB55
      | True -> goto BB54
      end
  }
  BB54 {
    absurd
  }
  BB55 {
    _109 <- ();
    _122 <- max_10;
    _121 <- ([#"../duration.rs" 44 12 44 30] CheckedMul0.checked_mul _122 ([#"../duration.rs" 44 28 44 29] (2 : uint32)));
    goto BB56
  }
  BB56 {
    _120 <- _121;
    _119 <- ([#"../duration.rs" 44 12 44 40] IsNone0.is_none _120);
    goto BB57
  }
  BB57 {
    _118 <- not _119;
    switch (_118)
      | False -> goto BB59
      | True -> goto BB58
      end
  }
  BB58 {
    absurd
  }
  BB59 {
    _117 <- ();
    _129 <- d_secs_11;
    _128 <- ([#"../duration.rs" 45 12 45 34] CheckedMul0.checked_mul _129 ([#"../duration.rs" 45 31 45 33] (10 : uint32)));
    goto BB60
  }
  BB60 {
    _127 <- _128;
    _126 <- ([#"../duration.rs" 45 12 45 44] IsSome0.is_some _127);
    goto BB61
  }
  BB61 {
    _125 <- not _126;
    switch (_125)
      | False -> goto BB63
      | True -> goto BB62
      end
  }
  BB62 {
    absurd
  }
  BB63 {
    _124 <- ();
    _136 <- d_secs_11;
    _135 <- ([#"../duration.rs" 47 12 47 33] CheckedDiv0.checked_div _136 ([#"../duration.rs" 47 31 47 32] (0 : uint32)));
    goto BB64
  }
  BB64 {
    _134 <- _135;
    _133 <- ([#"../duration.rs" 47 12 47 43] IsNone0.is_none _134);
    goto BB65
  }
  BB65 {
    _132 <- not _133;
    switch (_132)
      | False -> goto BB67
      | True -> goto BB66
      end
  }
  BB66 {
    absurd
  }
  BB67 {
    _131 <- ();
    _143 <- d_secs_11;
    _142 <- ([#"../duration.rs" 48 12 48 34] CheckedDiv0.checked_div _143 ([#"../duration.rs" 48 31 48 33] (10 : uint32)));
    goto BB68
  }
  BB68 {
    _141 <- _142;
    _140 <- ([#"../duration.rs" 48 12 48 44] IsSome0.is_some _141);
    goto BB69
  }
  BB69 {
    _139 <- not _140;
    switch (_139)
      | False -> goto BB71
      | True -> goto BB70
      end
  }
  BB70 {
    absurd
  }
  BB71 {
    _138 <- ();
    _0 <- ();
    return _0
  }
  
end
