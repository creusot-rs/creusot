module Type
  use Ref
  use mach.int.Int
  use mach.int.Int32
  use mach.int.Int64
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
end
module UnaryOp_Main_Interface
  val main () : ()
end
module UnaryOp_Main
  let rec cfg main () : () = 
  var _0 : ();
  var _1 : ();
  var _2 : bool;
  var _3 : bool;
  var _4 : ();
  {
    goto BB0
  }
  BB0 {
    _3 <- not false;
    _2 <- not _3;
    switch (_2)
      | False -> goto BB2
      | _ -> goto BB1
      end
  }
  BB1 {
    absurd
  }
  BB2 {
    _1 <- ();
    assume { (fun x -> true) _1 };
    _0 <- ();
    return _0
  }
  
end
