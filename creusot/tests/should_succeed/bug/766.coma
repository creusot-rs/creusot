module M_766__Trait__goo [#"766.rs" 10 4 10 21]
  let%span s7660 = "766.rs" 10 16 10 20
  let%span s7661 = "766.rs" 8 14 8 18
  let%span s7662 = "766.rs" 7 14 7 52
  let%span smodel3 = "../../../../creusot-contracts/src/model.rs" 101 8 101 28
  let%span sresolve4 = "../../../../creusot-contracts/src/resolve.rs" 54 20 54 34
  let%span sinvariant5 = "../../../../creusot-contracts/src/invariant.rs" 34 20 34 44
  
  use prelude.prelude.Borrow
  
  type t_Self'0
  
  predicate inv'0 (_1 : t_Self'0)
  
  predicate invariant'0 (self : borrowed t_Self'0) =
    [%#sinvariant5] inv'0 self.current /\ inv'0 self.final
  
  predicate inv'1 (_1 : borrowed t_Self'0)
  
  axiom inv_axiom'0 [@rewrite] : forall x : borrowed t_Self'0 [inv'1 x] . inv'1 x = invariant'0 x
  
  type t_FMap'0
  
  function deep_model'1 (self : t_Self'0) : t_FMap'0
  
  function deep_model'0 (self : borrowed t_Self'0) : t_FMap'0 =
    [%#smodel3] deep_model'1 self.current
  
  let rec f'0 (self:borrowed t_Self'0) (return'  (ret:()))= {[@expl:f 'self' type invariant] [%#s7661] inv'1 self}
    any [ return' (result:())-> {[%#s7662] deep_model'0 self = deep_model'0 self} (! return' {result}) ] 
  
  predicate resolve'1 (self : borrowed t_Self'0) =
    [%#sresolve4] self.final = self.current
  
  predicate resolve'0 (_1 : borrowed t_Self'0) =
    resolve'1 _1
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec goo'0 (self:borrowed t_Self'0) (return'  (ret:()))= {[@expl:goo 'self' type invariant] [%#s7660] inv'1 self}
    (! bb0
    [ bb0 = s0
      [ s0 = {inv'0 self.current}
        Borrow.borrow_final <t_Self'0> {self.current} {Borrow.get_id self}
          (fun (_ret':borrowed t_Self'0) ->
             [ &_2 <- _ret' ] 
            -{inv'0 _ret'.final}-
             [ &self <- { self with current = _ret'.final } ] 
            s1)
      | s1 = f'0 {_2} (fun (_ret':()) ->  [ &_0 <- _ret' ] s2)
      | s2 = bb1 ]
      
    | bb1 = s0 [ s0 = {[@expl:type invariant] inv'1 self} s1 | s1 = -{resolve'0 self}- s2 | s2 = return' {_0} ]  ]
    ) [ & _0 : () = any_l () | & self : borrowed t_Self'0 = self | & _2 : borrowed t_Self'0 = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
