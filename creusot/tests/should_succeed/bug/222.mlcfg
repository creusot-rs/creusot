
module C222_A_Mktrue_Stub
  type self
  use mach.int.Int
  val ghost function mktrue (_ : ()) : int
end
module C222_A_Mktrue_Interface
  type self
  use mach.int.Int
  val ghost function mktrue (_ : ()) : int
end
module C222_A_Mktrue
  type self
  use mach.int.Int
  let rec ghost function mktrue [#"../222.rs" 7 4 7 22] (_ : ()) : int = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../222.rs" 8 20 8 21] 5
end
module C222_A_IsTrue_Stub
  type self
  use mach.int.Int
  clone C222_A_Mktrue_Stub as Mktrue0 with type self = self
  val ghost function is_true (_ : ()) : ()
end
module C222_A_IsTrue_Interface
  type self
  use mach.int.Int
  clone C222_A_Mktrue_Stub as Mktrue0 with type self = self
  val ghost function is_true (_ : ()) : ()
    ensures { [#"../222.rs" 12 14 12 34] Mktrue0.mktrue () <= 10 }
    
end
module C222_A_IsTrue
  type self
  use mach.int.Int
  clone C222_A_Mktrue_Stub as Mktrue0 with type self = self
  let rec ghost function is_true [#"../222.rs" 13 4 13 16] (_ : ()) : () = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../222.rs" 14 8 14 10] ()
  axiom is_true_spec : [#"../222.rs" 12 14 12 34] Mktrue0.mktrue () <= 10
end
module C222_A_IsTrue_Impl
  type self
  use mach.int.Int
  clone C222_A_Mktrue as Mktrue0 with type self = self
  let rec ghost function is_true (_ : ()) : ()
    ensures { [#"../222.rs" 12 14 12 34] Mktrue0.mktrue () <= 10 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../222.rs" 14 8 14 10] ()
end
module C222_Impl0_Mktrue_Stub
  use mach.int.Int
  val ghost function mktrue (_ : ()) : int
end
module C222_Impl0_Mktrue_Interface
  use mach.int.Int
  val ghost function mktrue (_ : ()) : int
end
module C222_Impl0_Mktrue
  use mach.int.Int
  let rec ghost function mktrue [#"../222.rs" 20 4 20 22] (_ : ()) : int = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../222.rs" 21 20 21 21] 6
end
module C222_Impl0
  clone C222_Impl0_Mktrue as Mktrue0
  clone C222_A_IsTrue as IsTrue0 with type self = (), val Mktrue0.mktrue = Mktrue0.mktrue
  clone C222_A_Mktrue_Interface as Mktrue1 with type self = (), val mktrue = Mktrue0.mktrue
end
