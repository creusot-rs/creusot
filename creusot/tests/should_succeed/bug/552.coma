
module C552_Machine_Type
  type t_machine  =
    | C_Machine
    
  function any_l (_ : 'b) : 'a
  let rec t_machine (input:t_machine) (ret  )= any
    [ good -> {C_Machine  = input} (! ret) | bad -> {C_Machine  <> input} {false} any ]
    
end
module C552_Transition_Type
  type t_transition  =
    | C_Transition
    
  function any_l (_ : 'b) : 'a
  let rec t_transition (input:t_transition) (ret  )= any
    [ good -> {C_Transition  = input} (! ret) | bad -> {C_Transition  <> input} {false} any ]
    
end
module C552_Impl1_Transition
  use C552_Machine_Type as C552_Machine_Type
  use prelude.Borrow
  predicate invariants'0 [#"../552.rs" 18 4 18 31] (self : C552_Machine_Type.t_machine) =
    [#"../552.rs" 19 8 19 12] true
  let rec invariants'0 (self:C552_Machine_Type.t_machine) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariants'0 self} (! return' {result}) ]
    
  use prelude.Intrinsic
  use C552_Transition_Type as C552_Transition_Type
  let rec transition (self:C552_Machine_Type.t_machine) (return'  (ret:C552_Transition_Type.t_transition))= {[#"../552.rs" 30 15 30 32] invariants'0 self}
    (! bb0 [ bb0 = s0 [ s0 =  [ &_0 <- C552_Transition_Type.C_Transition ] s1 | s1 = return' {_0} ]  ] )
    [ & _0 : C552_Transition_Type.t_transition = any_l () : C552_Transition_Type.t_transition ]
     [ return' (result:C552_Transition_Type.t_transition)-> (! return' {result}) ] 
end
module C552_Impl0_Step
  use C552_Machine_Type as C552_Machine_Type
  predicate invariants'0 [#"../552.rs" 18 4 18 31] (self : C552_Machine_Type.t_machine) =
    [#"../552.rs" 19 8 19 12] true
  let rec invariants'0 (self:C552_Machine_Type.t_machine) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariants'0 self} (! return' {result}) ]
    
  use prelude.Borrow
  use prelude.Intrinsic
  predicate resolve'0 (self : borrowed (C552_Machine_Type.t_machine)) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  let rec resolve'0 (self:borrowed (C552_Machine_Type.t_machine)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'0 self} (! return' {result}) ]
    
  use C552_Transition_Type as C552_Transition_Type
  let rec transition'0 (self:C552_Machine_Type.t_machine) (return'  (ret:C552_Transition_Type.t_transition))= {[@expl:precondition] [#"../552.rs" 30 15 30 32] invariants'0 self}
    any [ return' (result:C552_Transition_Type.t_transition)-> (! return' {result}) ] 
  let rec step (self:borrowed (C552_Machine_Type.t_machine)) (return'  (ret:bool))= {[#"../552.rs" 22 4 22 41] invariants'0 ( * self)}
    (! bb0
    [ bb0 = s0
      [ s0 = transition'0 { * self} (fun (_ret':C552_Transition_Type.t_transition) ->  [ &_4 <- _ret' ] s1) | s1 = bb1 ]
      
    | bb1 = s0
      [ s0 = -{resolve'0 self}- s1 | s1 =  [ &_0 <- [#"../552.rs" 25 8 25 13] false ] s2 | s2 = return' {_0} ]
       ]
    )
    [ & _0 : bool = any_l () : bool
    | & self : borrowed (C552_Machine_Type.t_machine) = self
    | & _4 : C552_Transition_Type.t_transition = any_l () : C552_Transition_Type.t_transition ]
    
    [ return' (result:bool)-> {[@expl:postcondition] [#"../552.rs" 22 4 22 41] invariants'0 ( ^ self)}
      (! return' {result}) ]
    
end
module C552_Impl0
  use C552_Machine_Type as C552_Machine_Type
  use prelude.Borrow
  predicate invariant'0 (self : borrowed (C552_Machine_Type.t_machine)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'0 (self:borrowed (C552_Machine_Type.t_machine)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'0 self} (! return' {result}) ]
    
  predicate inv'0 (_x : borrowed (C552_Machine_Type.t_machine))
  let rec inv'0 (_x:borrowed (C552_Machine_Type.t_machine)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'0 _x} (! return' {result}) ]
    
  axiom inv'0 : forall x : borrowed (C552_Machine_Type.t_machine) . inv'0 x = true
  predicate invariants'0 [#"../552.rs" 18 4 18 31] (self : C552_Machine_Type.t_machine) =
    [#"../552.rs" 19 8 19 12] true
  let rec invariants'0 (self:C552_Machine_Type.t_machine) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariants'0 self} (! return' {result}) ]
    
  goal step_refn : [#"../552.rs" 23 4 23 30] forall self : borrowed (C552_Machine_Type.t_machine) . inv'0 self
  /\ invariants'0 ( * self)
   -> invariants'0 ( * self) /\ (forall result : bool . invariants'0 ( ^ self)  -> invariants'0 ( ^ self))
end
