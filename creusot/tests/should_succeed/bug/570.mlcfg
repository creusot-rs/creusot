
module C570_S1_Type
  use prelude.Int32
  use prelude.Int
  type t_s1  =
    | C_S1 int32
    
  let function s1_f (self : t_s1) : int32 = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_S1 a -> a
      end
end
module C570_S2_Type
  use C570_S1_Type as C570_S1_Type
  type t_s2  =
    | C_S2 (C570_S1_Type.t_s1)
    
  let function s2_s1 (self : t_s2) : C570_S1_Type.t_s1 = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_S2 a -> a
      end
end
module C570_TestProgram
  use C570_S2_Type as C570_S2_Type
  let rec cfg test_program [#"../570.rs" 12 0 12 26] [@cfg:stackify] [@cfg:subregion_analysis] (s : C570_S2_Type.t_s2) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var s : C570_S2_Type.t_s2 = s;
  {
    goto BB0
  }
  BB0 {
    [#"../570.rs" 12 27 14 1] _0 <- ([#"../570.rs" 12 27 14 1] ());
    return _0
  }
  
end
module C570_TestAssign
  use C570_S2_Type as C570_S2_Type
  use C570_S1_Type as C570_S1_Type
  use prelude.Int32
  use prelude.Int
  let rec cfg test_assign [#"../570.rs" 16 0 16 29] [@cfg:stackify] [@cfg:subregion_analysis] (s : C570_S2_Type.t_s2) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var s : C570_S2_Type.t_s2 = s;
  {
    goto BB0
  }
  BB0 {
    [#"../570.rs" 17 4 17 14] s <- (let C570_S2_Type.C_S2 x0 = s in C570_S2_Type.C_S2 (let C570_S1_Type.C_S1 x0 = C570_S2_Type.s2_s1 s in C570_S1_Type.C_S1 ([#"../570.rs" 17 13 17 14] (2 : int32))));
    [#"../570.rs" 16 30 18 1] _0 <- ([#"../570.rs" 16 30 18 1] ());
    return _0
  }
  
end
