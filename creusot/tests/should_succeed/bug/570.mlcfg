
module C570_S1_Type
  use prelude.Int
  use prelude.Int32
  type t_s1  =
    | C_S1 int32
    
  let function s1_f (self : t_s1) : int32 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_S1 a -> a
      end
end
module C570_S2_Type
  use C570_S1_Type as C570_S1_Type
  type t_s2  =
    | C_S2 (C570_S1_Type.t_s1)
    
  let function s2_s1 (self : t_s2) : C570_S1_Type.t_s1 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_S2 a -> a
      end
end
module C570_TestProgram_Interface
  use C570_S2_Type as C570_S2_Type
  val test_program [#"../570.rs" 12 0 12 26] (s : C570_S2_Type.t_s2) : ()
end
module C570_TestProgram
  use prelude.Int
  use prelude.Int32
  use C570_S1_Type as C570_S1_Type
  use C570_S2_Type as C570_S2_Type
  let rec cfg test_program [#"../570.rs" 12 0 12 26] [@cfg:stackify] [@cfg:subregion_analysis] (s : C570_S2_Type.t_s2) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var s_1 : C570_S2_Type.t_s2;
  var _2 : int32;
  {
    s_1 <- s;
    goto BB0
  }
  BB0 {
    _2 <- C570_S1_Type.s1_f (C570_S2_Type.s2_s1 s_1);
    _0 <- ();
    return _0
  }
  
end
module C570_TestAssign_Interface
  use C570_S2_Type as C570_S2_Type
  val test_assign [#"../570.rs" 16 0 16 29] (s : C570_S2_Type.t_s2) : ()
end
module C570_TestAssign
  use prelude.Int
  use prelude.Int32
  use C570_S1_Type as C570_S1_Type
  use C570_S2_Type as C570_S2_Type
  let rec cfg test_assign [#"../570.rs" 16 0 16 29] [@cfg:stackify] [@cfg:subregion_analysis] (s : C570_S2_Type.t_s2) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var s_1 : C570_S2_Type.t_s2;
  {
    s_1 <- s;
    goto BB0
  }
  BB0 {
    s_1 <- (let C570_S2_Type.C_S2 a = s_1 in C570_S2_Type.C_S2 (let C570_S1_Type.C_S1 a = C570_S2_Type.s2_s1 s_1 in C570_S1_Type.C_S1 ([#"../570.rs" 17 13 17 14] (2 : int32))));
    _0 <- ();
    return _0
  }
  
end
module C570_TestLogic_Stub
  use C570_S2_Type as C570_S2_Type
  function test_logic [#"../570.rs" 22 0 22 24] (s : C570_S2_Type.t_s2) : ()
end
module C570_TestLogic_Interface
  use C570_S2_Type as C570_S2_Type
  function test_logic [#"../570.rs" 22 0 22 24] (s : C570_S2_Type.t_s2) : ()
  val test_logic [#"../570.rs" 22 0 22 24] (s : C570_S2_Type.t_s2) : ()
    ensures { result = test_logic s }
    
end
module C570_TestLogic
  use C570_S1_Type as C570_S1_Type
  use C570_S2_Type as C570_S2_Type
  function test_logic [#"../570.rs" 22 0 22 24] (s : C570_S2_Type.t_s2) : () =
    [#"../570.rs" 21 0 21 8] let _ = C570_S1_Type.s1_f (C570_S2_Type.s2_s1 s) in ()
  val test_logic [#"../570.rs" 22 0 22 24] (s : C570_S2_Type.t_s2) : ()
    ensures { result = test_logic s }
    
end
