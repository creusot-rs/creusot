
module C235_F
  use prelude.Intrinsic
  use prelude.Int
  let rec f (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0 [ s0 = bb1 ] 
    | bb1 = bb1
      [ bb1 = {[@expl:loop invariant] [#"../235.rs" 6 16 6 22] 0 <= 1}
        (! s0) [ s0 = bb2 ] 
        [ bb2 = s0 [ s0 = any [ br0 -> {false} (! bb4) | br1 -> {true} (! bb3) ]  ]  | bb3 = s0 [ s0 = bb1 ]  ]
         ]
      
    | bb4 = s0 [ s0 =  [ &_0 <- [#"../235.rs" 8 4 8 17] () ] s1 | s1 = return' {_0} ]  ]
    ) [ & _0 : () = any_l () : () ]  [ return' (result:())-> (! return' {result}) ] 
end
