
module C464_AssocStruct_Type
  type t_assocstruct  =
    | C_AssocStruct
    
  function any_l (_ : 'b) : 'a
  let rec t_assocstruct (input:t_assocstruct) (ret  )= any
    [ good -> {C_AssocStruct  = input} (! ret) | bad -> {C_AssocStruct  <> input} {false} any ]
    
end
module C464_Struct_Type
  type t_struct  =
    | C_Struct
    
  function any_l (_ : 'b) : 'a
  let rec t_struct (input:t_struct) (ret  )= any
    [ good -> {C_Struct  = input} (! ret) | bad -> {C_Struct  <> input} {false} any ]
    
end
module C464_Impl1_Invariant_Impl
  use C464_AssocStruct_Type as C464_AssocStruct_Type
  use C464_Struct_Type as C464_Struct_Type
  predicate invariant'0 [#"../464.rs" 23 4 23 30] (self : C464_AssocStruct_Type.t_assocstruct) =
    [#"../464.rs" 24 8 24 12] true
  let rec invariant'0 (self:C464_AssocStruct_Type.t_assocstruct) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'0 self} (! return' {result}) ]
    
  constant self  : C464_Struct_Type.t_struct
  constant assoc  : C464_AssocStruct_Type.t_assocstruct
  predicate invariant' [#"../464.rs" 34 4 34 50] (self : C464_Struct_Type.t_struct) (assoc : C464_AssocStruct_Type.t_assocstruct)
    
  goal vc_invariant' : [#"../464.rs" 33 4 33 44] true  -> invariant'0 assoc
end
module C464_Impl0
  
end
module C464_Impl1
  use C464_Struct_Type as C464_Struct_Type
  predicate invariant'2 (self : C464_Struct_Type.t_struct) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'2 (self:C464_Struct_Type.t_struct) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'2 self} (! return' {result}) ]
    
  predicate inv'1 (_x : C464_Struct_Type.t_struct)
  let rec inv'1 (_x:C464_Struct_Type.t_struct) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'1 _x} (! return' {result}) ]
    
  axiom inv'1 : forall x : C464_Struct_Type.t_struct . inv'1 x = true
  use C464_AssocStruct_Type as C464_AssocStruct_Type
  predicate invariant'1 (self : C464_AssocStruct_Type.t_assocstruct) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'1 (self:C464_AssocStruct_Type.t_assocstruct) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'1 self} (! return' {result}) ]
    
  predicate inv'0 (_x : C464_AssocStruct_Type.t_assocstruct)
  let rec inv'0 (_x:C464_AssocStruct_Type.t_assocstruct) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'0 _x} (! return' {result}) ]
    
  axiom inv'0 : forall x : C464_AssocStruct_Type.t_assocstruct . inv'0 x = true
  predicate invariant'0 [#"../464.rs" 23 4 23 30] (self : C464_AssocStruct_Type.t_assocstruct) =
    [#"../464.rs" 24 8 24 12] true
  let rec invariant'0 (self:C464_AssocStruct_Type.t_assocstruct) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'0 self} (! return' {result}) ]
    
  goal invariant'_refn : [#"../464.rs" 34 4 34 50] forall self : C464_Struct_Type.t_struct . forall assoc : C464_AssocStruct_Type.t_assocstruct . inv'0 assoc
  /\ inv'1 self  -> (forall result : bool . result  -> invariant'0 assoc  -> result  -> invariant'0 assoc)
end
