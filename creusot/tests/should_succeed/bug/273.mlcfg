
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
  let function some_0 (self : t_option 't) : 't = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_None -> any 't
      | C_Some a -> a
      end
end
module C273_Ex_Interface
  val ex [#"../273.rs" 4 0 4 11] (_1 : ()) : ()
end
module C273_Ex
  use Core_Option_Option_Type as Core_Option_Option_Type
  let rec cfg ex [#"../273.rs" 4 0 4 11] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _1 : Core_Option_Option_Type.t_option bool;
  var b : bool;
  {
    goto BB0
  }
  BB0 {
    _1 <- ([#"../273.rs" 5 21 5 31] Core_Option_Option_Type.C_Some ([#"../273.rs" 5 26 5 30] [#"../273.rs" 5 26 5 30] true));
    switch (_1)
      | Core_Option_Option_Type.C_Some _ -> goto BB1
      | _ -> goto BB3
      end
  }
  BB1 {
    goto BB2
  }
  BB2 {
    b <- Core_Option_Option_Type.some_0 _1;
    assert { [@expl:assertion] [#"../273.rs" 6 22 6 23] b };
    _0 <- ([#"../273.rs" 5 32 7 5] ());
    goto BB4
  }
  BB3 {
    _0 <- ([#"../273.rs" 7 5 7 5] ());
    goto BB4
  }
  BB4 {
    return _0
  }
  
end
