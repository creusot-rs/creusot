module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
  type core_ptr_nonnull_nonnull 't =
    | Core_Ptr_NonNull_NonNull opaque_ptr
    
  type core_marker_phantomdata 't =
    | Core_Marker_PhantomData
    
  type core_ptr_unique_unique 't =
    | Core_Ptr_Unique_Unique (core_ptr_nonnull_nonnull 't) (core_marker_phantomdata 't)
    
  type alloc_rawvec_rawvec 't 'a =
    | Alloc_RawVec_RawVec (core_ptr_unique_unique 't) usize 'a
    
  type alloc_vec_vec 't 'a =
    | Alloc_Vec_Vec (alloc_rawvec_rawvec 't 'a) usize
    
  type alloc_alloc_global  =
    | Alloc_Alloc_Global
    
  type c206_a  =
    | C206_A (alloc_vec_vec usize (alloc_alloc_global))
    
  let function c206_a_A_0 (self : c206_a) : alloc_vec_vec usize (alloc_alloc_global) =
    match (self) with
      | C206_A a -> a
      end
end
module CreusotContracts_Std1_Vec_Impl0_Model_Interface
  type t
  type a
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int64
  use Type
  function model (self : Type.alloc_vec_vec t a) : Seq.seq t
end
module CreusotContracts_Std1_Vec_Impl0_Model
  type t
  type a
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int64
  use Type
  function model (self : Type.alloc_vec_vec t a) : Seq.seq t
  axiom model_spec : forall self : Type.alloc_vec_vec t a . Seq.length (model self) <= 9223372036854775807
end
module CreusotContracts_Logic_Model_Model_ModelTy
  type self
  type modelTy
end
module CreusotContracts_Logic_Model_Model_Model_Interface
  type self
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = self
  function model (self : self) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Model_Model
  type self
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = self
  function model (self : self) : ModelTy0.modelTy
end
module CreusotContracts_Std1_Vec_Impl0_ModelTy
  type t
  type a
  use seq.Seq
  type modelTy  =
    Seq.seq t
end
module CreusotContracts_Std1_Vec_Impl0
  type t
  type a
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = t, type a = a, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = t, type a = a
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = Type.alloc_vec_vec t a,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = Type.alloc_vec_vec t a,
  type modelTy = ModelTy0.modelTy
end
module C206_U2_Interface
  use Type
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  function u2 (a : Type.c206_a) : ()
end
module C206_U2
  use Type
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  function u2 [#"../206.rs" 9 0 11] (a : Type.c206_a) : () =
    [#"../206.rs" 9 0 11] ()
  axiom u2_spec : forall a : Type.c206_a . [#"../206.rs" 8 0 24] Model0.model (Type.c206_a_A_0 a) = Model0.model (Type.c206_a_A_0 a)
end
module C206_U2_Impl
  use Type
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  let rec ghost function u2 (a : Type.c206_a) : ()
    ensures { [#"../206.rs" 8 0 24] Model0.model (Type.c206_a_A_0 a) = Model0.model (Type.c206_a_A_0 a) }
    
   =
    [#"../206.rs" 9 0 11] ()
end
module C206_U_Interface
  use Type
  function u (a : Type.c206_a) : ()
end
module C206_U
  use Type
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  clone C206_U2_Interface as U20 with function Model0.model = Model0.model, axiom .
  function u [#"../206.rs" 12 0 10] (a : Type.c206_a) : () =
    [#"../206.rs" 12 0 10] U20.u2 a
end
module C206_Ex_Interface
  use prelude.Prelude
  use Type
  clone C206_U_Interface as U0
  val ex [@cfg:stackify] (a : Type.c206_a) : ()
    ensures { [#"../206.rs" 18 0 28] U0.u a = U0.u a }
    
end
module C206_Ex
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone C206_U2 as U20 with function Model0.model = Model0.model, axiom .
  clone C206_U as U0 with function U20.u2 = U20.u2, function Model0.model = Model0.model
  let rec cfg ex [@cfg:stackify] [#"../206.rs" 19 0 12] (a : Type.c206_a) : ()
    ensures { [#"../206.rs" 18 0 28] U0.u a = U0.u a }
    
   =
  var _0 : ();
  var a_1 : Type.c206_a;
  {
    a_1 <- a;
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
