module M_570__test_program [#"570.rs" 12 0 12 26]
  use prelude.prelude.Intrinsic
  
  use prelude.prelude.Int32
  
  type t_S1'0  =
    { t_S1__f'0: int32 }
  
  type t_S2'0  =
    { t_S2__s1'0: t_S1'0 }
  
  meta "compute_max_steps" 1000000
  
  let rec test_program'0 (s:t_S2'0) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] )
    [ & _0 : () = any_l () | & s : t_S2'0 = s ]
     [ return' (result:())-> (! return' {result}) ] 
end
module M_570__test_assign [#"570.rs" 16 0 16 29]
  let%span s5700 = "570.rs" 17 13 17 14
  
  use prelude.prelude.Int32
  
  type t_S1'0  =
    { t_S1__f'0: int32 }
  
  type t_S2'0  =
    { t_S2__s1'0: t_S1'0 }
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec test_assign'0 (s:t_S2'0) (return'  (ret:()))= (! bb0
    [ bb0 = s0 [ s0 =  [ &s <- { t_S2__s1'0 = { t_S1__f'0 = ([%#s5700] (2 : int32)) } } ] s1 | s1 = return' {_0} ]  ]
    ) [ & _0 : () = any_l () | & s : t_S2'0 = s ]  [ return' (result:())-> (! return' {result}) ] 
end
