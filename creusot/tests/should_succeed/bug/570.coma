
module T_570__S1
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  type t_S1  =
    | C_S1 int32
  
  function any_l (_ : 'b) : 'a
  
  let rec t_S1 (input:t_S1) (ret  (f:int32))= any
    [ good (f:int32)-> {C_S1 f = input} (! ret {f}) | bad (f:int32)-> {C_S1 f <> input} {false} any ]
    
  
  function t_S1__f (self : t_S1) : int32 =
    match self with
      | C_S1 a -> a
      end
end
module T_570__S2
  use T_570__S1 as S1'0
  
  type t_S2  =
    | C_S2 (S1'0.t_S1)
  
  function any_l (_ : 'b) : 'a
  
  let rec t_S2 (input:t_S2) (ret  (s1:S1'0.t_S1))= any
    [ good (s1:S1'0.t_S1)-> {C_S2 s1 = input} (! ret {s1}) | bad (s1:S1'0.t_S1)-> {C_S2 s1 <> input} {false} any ]
    
  
  function t_S2__s1 (self : t_S2) : S1'0.t_S1 =
    match self with
      | C_S2 a -> a
      end
end
module M_570__test_program
  use T_570__S2 as S2'0
  
  use prelude.prelude.Intrinsic
  
  let rec test_program (s:S2'0.t_S2) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] )
    [ & _0 : () = any_l () | & s : S2'0.t_S2 = s ]
     [ return' (result:())-> (! return' {result}) ] 
end
module M_570__test_assign
  let%span s5700 = "../570.rs" 17 13 17 14
  
  use prelude.prelude.Intrinsic
  
  use T_570__S1 as S1'0
  
  use T_570__S2 as S2'0
  
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  let rec test_assign (s:S2'0.t_S2) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 = S2'0.t_S2 {s}
          (fun (l_s1'0:S1'0.t_S1) ->
            S1'0.t_S1 {l_s1'0} (fun (l_f'0:int32) ->  [ &s <- S2'0.C_S2 (S1'0.C_S1 ([%#s5700] (2 : int32))) ] s1))
      | s1 = return' {_0} ]
       ]
    ) [ & _0 : () = any_l () | & s : S2'0.t_S2 = s ]  [ return' (result:())-> (! return' {result}) ] 
end
