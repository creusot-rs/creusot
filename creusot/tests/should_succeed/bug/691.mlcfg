
module CreusotContracts_Resolve_Impl2_Resolve_Stub
  type t
  predicate resolve (self : t)
end
module CreusotContracts_Resolve_Impl2_Resolve_Interface
  type t
  predicate resolve (self : t)
  val resolve (self : t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl2_Resolve
  type t
  predicate resolve (self : t) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 36 8 36 12] true
  val resolve (self : t) : bool
    ensures { result = resolve self }
    
end
module C691_Foo_Type
  use prelude.Int
  use prelude.UInt32
  type t_foo  =
    | C_Foo uint32
    
  let function foo_bar (self : t_foo) : uint32 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Foo a -> a
      end
end
module CreusotContracts_Std1_Ops_Impl1_Unnest_Stub
  type args
  type f
  predicate unnest (self : f) (_2 : f)
end
module CreusotContracts_Std1_Ops_Impl1_Unnest_Interface
  type args
  type f
  predicate unnest (self : f) (_2 : f)
  val unnest (self : f) (_2 : f) : bool
    ensures { result = unnest self _2 }
    
end
module CreusotContracts_Std1_Ops_Impl1_Unnest
  type args
  type f
  predicate unnest (self : f) (_2 : f)
  val unnest (self : f) (_2 : f) : bool
    ensures { result = unnest self _2 }
    
end
module C691_Example_Closure0_Type
  use prelude.Borrow
  use C691_Foo_Type as C691_Foo_Type
  type c691_example_closure0  =
    | C691_Example_Closure0 (C691_Foo_Type.t_foo)
    
end
module C691_Example_Closure0_Interface
  use export C691_Example_Closure0_Type
  use prelude.Int
  use prelude.UInt32
  use prelude.Borrow
  use C691_Foo_Type as C691_Foo_Type
  let function field_0 [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) : C691_Foo_Type.t_foo
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../691.rs" 1 0 1 0] let C691_Example_Closure0 a = self in a
  predicate resolve [#"../691.rs" 10 12 10 39] (_1 : c691_example_closure0) =
    [#"../691.rs" 1 0 1 0] true
  predicate unnest [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_2 : c691_example_closure0) =
    [#"../691.rs" 1 0 1 0] field_0 _2 = field_0 self
  predicate precondition [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_ : ()) =
    [#"../691.rs" 10 24 10 37] C691_Foo_Type.foo_bar (field_0 self) = (2 : uint32)
  predicate postcondition_once [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_ : ()) (result : ()) =
    [#"../691.rs" 1 0 1 0] true
  predicate postcondition_mut [#"../691.rs" 10 12 10 39] (self : borrowed c691_example_closure0) (_ : ()) (result : ())
   =
    [#"../691.rs" 1 0 1 0] unnest ( * self) ( ^ self)
  predicate postcondition [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_ : ()) (result : ()) =
    [#"../691.rs" 1 0 1 0] true
  val c691_Example_Closure0 [#"../691.rs" 10 12 10 39] (_1 : c691_example_closure0) : ()
    requires {[#"../691.rs" 10 24 10 37] C691_Foo_Type.foo_bar (field_0 _1) = (2 : uint32)}
    
end
module C691_Example_Closure0
  use export C691_Example_Closure0_Type
  use prelude.Int
  use prelude.UInt32
  use prelude.Borrow
  use C691_Foo_Type as C691_Foo_Type
  let function field_0 [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) : C691_Foo_Type.t_foo
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../691.rs" 1 0 1 0] let C691_Example_Closure0 a = self in a
  predicate resolve [#"../691.rs" 10 12 10 39] (_1 : c691_example_closure0) =
    [#"../691.rs" 1 0 1 0] true
  predicate unnest [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_2 : c691_example_closure0) =
    [#"../691.rs" 1 0 1 0] field_0 _2 = field_0 self
  predicate precondition [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_ : ()) =
    [#"../691.rs" 10 24 10 37] C691_Foo_Type.foo_bar (field_0 self) = (2 : uint32)
  predicate postcondition_once [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_ : ()) (result : ()) =
    [#"../691.rs" 1 0 1 0] true
  predicate postcondition_mut [#"../691.rs" 10 12 10 39] (self : borrowed c691_example_closure0) (_ : ()) (result : ())
   =
    [#"../691.rs" 1 0 1 0] unnest ( * self) ( ^ self)
  predicate postcondition [#"../691.rs" 10 12 10 39] (self : c691_example_closure0) (_ : ()) (result : ()) =
    [#"../691.rs" 1 0 1 0] true
  let rec cfg c691_Example_Closure0 [#"../691.rs" 10 12 10 39] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : c691_example_closure0) : ()
    requires {[#"../691.rs" 10 24 10 37] C691_Foo_Type.foo_bar (field_0 _1) = (2 : uint32)}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var res : ();
  {
    goto BB0
  }
  BB0 {
    res <- ();
    _0 <- res;
    return _0
  }
  
end
module C691_Example_Interface
  val example [#"../691.rs" 8 0 8 16] (_1 : ()) : ()
end
module C691_Example
  use prelude.Int
  use prelude.UInt32
  use C691_Foo_Type as C691_Foo_Type
  clone C691_Example_Closure0_Interface as Closure00
  let rec cfg example [#"../691.rs" 8 0 8 16] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var c : C691_Foo_Type.t_foo;
  var _2 : Closure00.c691_example_closure0;
  {
    goto BB0
  }
  BB0 {
    c <- C691_Foo_Type.C_Foo ([#"../691.rs" 9 23 9 27] (2 : uint32));
    _2 <- Closure00.C691_Example_Closure0 c;
    assume { Closure00.resolve _2 };
    _0 <- ();
    return _0
  }
  
end
