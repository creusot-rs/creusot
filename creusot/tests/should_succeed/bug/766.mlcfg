
module CreusotContracts_Logic_Fmap_FMap_Type
  type t_fmap 'k 'v
end
module C766_Trait_Goo
  type self
  type t
  type u
  use prelude.Borrow
  predicate invariant1 (self : borrowed self)
  val invariant1 (self : borrowed self) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : borrowed self)
  val inv1 (_x : borrowed self) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : borrowed self . inv1 x = true
  predicate invariant0 (self : self)
  val invariant0 (self : self) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : self)
  val inv0 (_x : self) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : self . inv0 x = true
  predicate resolve0 (self : borrowed self) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve0 (self : borrowed self) : bool
    ensures { result = resolve0 self }
    
  type deep_model_ty1
  type deep_model_ty0
  use CreusotContracts_Logic_Fmap_FMap_Type as CreusotContracts_Logic_Fmap_FMap_Type
  function deep_model1 (self : self) : CreusotContracts_Logic_Fmap_FMap_Type.t_fmap deep_model_ty0 deep_model_ty1
  val deep_model1 (self : self) : CreusotContracts_Logic_Fmap_FMap_Type.t_fmap deep_model_ty0 deep_model_ty1
    ensures { result = deep_model1 self }
    
  function deep_model0 (self : borrowed self) : CreusotContracts_Logic_Fmap_FMap_Type.t_fmap deep_model_ty0 deep_model_ty1
    
   =
    [#"../../../../../creusot-contracts/src/model.rs" 99 8 99 28] deep_model1 ( * self)
  val deep_model0 (self : borrowed self) : CreusotContracts_Logic_Fmap_FMap_Type.t_fmap deep_model_ty0 deep_model_ty1
    ensures { result = deep_model0 self }
    
  val f0 [#"../766.rs" 8 4 8 20] (self : borrowed self) : ()
    requires {[#"../766.rs" 8 14 8 18] inv1 self}
    ensures { [#"../766.rs" 7 14 7 52] deep_model0 self = deep_model0 self }
    
  let rec cfg goo [#"../766.rs" 10 4 10 21] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed self) : ()
    requires {[#"../766.rs" 10 16 10 20] inv1 self}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self : borrowed self = self;
  var _2 : borrowed self;
  {
    goto BB0
  }
  BB0 {
    [#"../766.rs" 11 8 11 12] _2 <- Borrow.borrow_final ( * self) (Borrow.get_id self);
    [#"../766.rs" 11 8 11 12] self <- { self with current = ( ^ _2) ; };
    assume { inv0 ( ^ _2) };
    [#"../766.rs" 11 8 11 16] _0 <- ([#"../766.rs" 11 8 11 16] f0 _2);
    _2 <- any borrowed self;
    goto BB1
  }
  BB1 {
    assert { [@expl:type invariant] inv1 self };
    assume { resolve0 self };
    return _0
  }
  
end
