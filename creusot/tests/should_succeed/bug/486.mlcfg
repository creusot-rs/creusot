
module C486_HasMutRef_Type
  use prelude.Borrow
  type t_hasmutref 't =
    | C_HasMutRef (borrowed 't)
    
  let function hasmutref_0 (self : t_hasmutref 't) : borrowed 't = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_HasMutRef a -> a
      end
end
module C486_Test
  use prelude.UInt32
  use prelude.Borrow
  use prelude.UInt32
  use C486_HasMutRef_Type as C486_HasMutRef_Type
  use prelude.Int
  let rec cfg test [#"../486.rs" 7 0 7 34] [@cfg:stackify] [@cfg:subregion_analysis] (x : C486_HasMutRef_Type.t_hasmutref uint32) : ()
    ensures { [#"../486.rs" 6 10 6 22] UInt32.to_int ( ^ C486_HasMutRef_Type.hasmutref_0 x) = 5 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x : C486_HasMutRef_Type.t_hasmutref uint32 = x;
  {
    goto BB0
  }
  BB0 {
    [#"../486.rs" 8 4 8 12] x <- (let C486_HasMutRef_Type.C_HasMutRef x0 = x in C486_HasMutRef_Type.C_HasMutRef ({ (C486_HasMutRef_Type.hasmutref_0 x) with current = ([#"../486.rs" 8 4 8 12] [#"../486.rs" 8 11 8 12] (5 : uint32)) }));
    [#"../486.rs" 8 4 8 12] _0 <- ([#"../486.rs" 8 4 8 12] ());
    return _0
  }
  
end
