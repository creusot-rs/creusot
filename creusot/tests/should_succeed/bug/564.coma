
module C564_EmitsPureEq_Impl
  use prelude.Int32
  use prelude.Int
  function invariants'0 [#"../564.rs" 23 0 23 23] (_1 : ()) : bool =
    [#"../564.rs" 24 4 24 8] true
  let rec invariants'0 (_1:()) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariants'0 _1} (! return' {result}) ]
    
  constant _1  : ()
  function emits_pure_eq [#"../564.rs" 7 0 7 30] (_1 : ()) : bool
  goal vc_emits_pure_eq : true
end
module C564_EmitsPureImplies_Impl
  use prelude.Int32
  use prelude.Int
  function invariants'0 [#"../564.rs" 23 0 23 23] (_1 : ()) : bool =
    [#"../564.rs" 24 4 24 8] true
  let rec invariants'0 (_1:()) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariants'0 _1} (! return' {result}) ]
    
  constant _1  : ()
  function emits_pure_implies [#"../564.rs" 16 0 16 35] (_1 : ()) : bool
  goal vc_emits_pure_implies : true
end
