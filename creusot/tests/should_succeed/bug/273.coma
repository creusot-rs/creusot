
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
  
  function any_l (_ : 'b) : 'a
  
  let rec none < 't > (input:t_option 't) (ret  )= any
    [ good -> {C_None  = input} (! ret) | bad -> {C_None  <> input} {false} any ]
    
  
  let rec some < 't > (input:t_option 't) (ret  (field_0:'t))= any
    [ good (field_0:'t)-> {C_Some field_0 = input} (! ret {field_0})
    | bad (field_0:'t)-> {C_Some field_0 <> input} {false} any ]
    
end
module C273_Ex
  let%span s2730 = "../273.rs" 5 26 5 30
  
  let%span s2731 = "../273.rs" 6 22 6 23
  
  use prelude.prelude.Intrinsic
  
  use Core_Option_Option_Type as Option'0
  
  let rec ex (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 =  [ &_1 <- Option'0.C_Some ([%#s2730] true) ] s1
      | s1 = any [ br0 -> {_1 = Option'0.C_None } (! bb3) | br1 (a:bool)-> {_1 = Option'0.C_Some a} (! bb1) ]  ]
      
    | bb3 = bb4
    | bb1 = bb2
    | bb2 = s0
      [ s0 = Option'0.some <bool> {_1} (fun (r0'0:bool) ->  [ &b <- r0'0 ] s1)
      | s1 = {[@expl:assertion] [%#s2731] b} s2
      | s2 = bb4 ]
      
    | bb4 = return' {_0} ]
    ) [ & _0 : () = any_l () | & _1 : Option'0.t_option bool = any_l () | & b : bool = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
