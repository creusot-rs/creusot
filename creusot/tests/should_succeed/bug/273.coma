module M_273__ex [#"273.rs" 4 0 4 11]
  let%span s2730 = "273.rs" 5 26 5 30
  let%span s2731 = "273.rs" 6 22 6 23
  
  type t_Option'0  =
    | C_None'0
    | C_Some'0 bool
  
  let rec v_Some'0 (input:t_Option'0) (ret  (field_0:bool))= any
    [ good (field_0:bool)-> {C_Some'0 field_0 = input} (! ret {field_0})
    | bad -> {forall field_0 : bool [C_Some'0 field_0 : t_Option'0] . C_Some'0 field_0 <> input} (! {false} any) ]
    
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec ex'0 (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 =  [ &_1 <- C_Some'0 ([%#s2730] true) ] s1
      | s1 = any [ br0 -> {_1 = C_None'0 } (! bb3) | br1 (x0:bool)-> {_1 = C_Some'0 x0} (! bb1) ]  ]
      
    | bb3 = bb4
    | bb1 = bb2
    | bb2 = s0
      [ s0 = v_Some'0 {_1} (fun (r0'0:bool) ->  [ &b <- r0'0 ] s1)
      | s1 = {[@expl:assertion] [%#s2731] b} s2
      | s2 = bb4 ]
      
    | bb4 = return' {_0} ]
    ) [ & _0 : () = any_l () | & _1 : t_Option'0 = any_l () | & b : bool = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
