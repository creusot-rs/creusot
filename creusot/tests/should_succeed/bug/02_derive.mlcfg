
module C02Derive_Lit_Type
  type t_lit  =
    | C_Lit
    
end
module C02Derive_Impl0_Clone_Interface
  use prelude.Borrow
  use C02Derive_Lit_Type as C02Derive_Lit_Type
  val clone' [#"../02_derive.rs" 3 9 3 14] (self : C02Derive_Lit_Type.t_lit) : C02Derive_Lit_Type.t_lit
end
module C02Derive_Impl0_Clone
  use prelude.Borrow
  use C02Derive_Lit_Type as C02Derive_Lit_Type
  let rec cfg clone' [#"../02_derive.rs" 3 9 3 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : C02Derive_Lit_Type.t_lit) : C02Derive_Lit_Type.t_lit
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : C02Derive_Lit_Type.t_lit;
  var self_1 : C02Derive_Lit_Type.t_lit;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- C02Derive_Lit_Type.C_Lit;
    return _0
  }
  
end
module C02Derive_Impl0
  use prelude.Borrow
  use C02Derive_Lit_Type as C02Derive_Lit_Type
  goal clone'_refn : [#"../02_derive.rs" 3 9 3 14] forall self : C02Derive_Lit_Type.t_lit . forall result : C02Derive_Lit_Type.t_lit . result = self
end
