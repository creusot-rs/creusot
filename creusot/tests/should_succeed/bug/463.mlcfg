
module C463_Test_Closure0_Type
  use prelude.UIntSize
  use prelude.Int8
  type c463_test_closure0  =
    | C463_Test_Closure0
    
end
module C463_Test_Closure0
  use prelude.Int8
  use prelude.UIntSize
  use C463_Test_Closure0_Type as C463_Test_Closure0
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  let rec cfg c463_Test_Closure0 [#"../463.rs" 6 8 6 37] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : C463_Test_Closure0.c463_test_closure0) (x : usize) : usize
    requires {[#"../463.rs" 5 19 5 28] UIntSize.to_int x < 1000}
    ensures { [#"../463.rs" 6 18 6 35] UIntSize.to_int result = UIntSize.to_int x + 1 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var x : usize = x;
  var res : usize;
  var res1 : usize;
  {
    goto BB0
  }
  BB0 {
    [#"../463.rs" 7 19 7 24] res1 <- ([#"../463.rs" 7 19 7 24] ([#"../463.rs" 7 19 7 20] x) + ([#"../463.rs" 7 23 7 24] [#"../463.rs" 7 23 7 24] (1 : usize)));
    [#"../463.rs" 5 8 5 30] res <- ([#"../463.rs" 5 8 5 30] res1);
    [#"../463.rs" 6 8 6 37] _0 <- ([#"../463.rs" 6 8 6 37] res);
    return _0
  }
  
end
module C463_Test
  use prelude.UIntSize
  use prelude.UIntSize
  use prelude.Int8
  use C463_Test_Closure0_Type as C463_Test_Closure0
  predicate resolve0 [#"../463.rs" 6 8 6 37] (_1 : C463_Test_Closure0.c463_test_closure0) =
    true
  use prelude.Borrow
  use prelude.Int
  val closure00 [#"../463.rs" 6 8 6 37] (_1 : C463_Test_Closure0.c463_test_closure0) (x : usize) : usize
    requires {[#"../463.rs" 5 19 5 28] UIntSize.to_int x < 1000}
    ensures { [#"../463.rs" 6 18 6 35] UIntSize.to_int result = UIntSize.to_int x + 1 }
    
  let rec cfg test [#"../463.rs" 3 0 3 13] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var c : C463_Test_Closure0.c463_test_closure0;
  var y : usize;
  {
    goto BB0
  }
  BB0 {
    [#"../463.rs" 6 8 6 37] c <- ([#"../463.rs" 6 8 6 37] C463_Test_Closure0.C463_Test_Closure0);
    [#"../463.rs" 9 12 9 16] y <- ([#"../463.rs" 9 12 9 16] let (a) = [#"../463.rs" 9 12 9 16] (([#"../463.rs" 9 14 9 15] [#"../463.rs" 9 14 9 15] (2 : usize))) in closure00 ([#"../463.rs" 9 12 9 13] c) a);
    goto BB1
  }
  BB1 {
    assume { resolve0 c };
    assert { [@expl:assertion] [#"../463.rs" 10 18 10 25] UIntSize.to_int y = 3 };
    [#"../463.rs" 10 4 10 26] _0 <- ([#"../463.rs" 10 4 10 26] ());
    return _0
  }
  
end
