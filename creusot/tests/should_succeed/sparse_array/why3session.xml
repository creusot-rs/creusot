<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="sparse_array.coma"/>
<theory name="SparseArray_Impl2_Get" proved="true">
 <goal name="vc_get" proved="true">
 <proof prover="3"><result status="valid" time="0.110088" steps="26008"/></proof>
 </goal>
</theory>
<theory name="SparseArray_Impl2_LemmaPermutation_Impl" proved="true">
 <goal name="vc_lemma_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_lemma_permutation.0" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="vc_lemma_permutation.0.0" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int (get1 (shallow_model&#39;0 (sparse_back self)) k))">
    <goal name="vc_lemma_permutation.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f (sparse_n self))">
     <goal name="vc_lemma_permutation.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.066495" steps="235415"/></proof>
     </goal>
     <goal name="vc_lemma_permutation.0.0.0.1" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;= k &lt; sparse_n self /\ (f k) = i)">
      <goal name="vc_lemma_permutation.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h1">
       <goal name="vc_lemma_permutation.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.033303" steps="430"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_lemma_permutation.0.0.0.1.1" proved="true">
      <proof prover="0"><result status="valid" time="0.066035" steps="241858"/></proof>
      <proof prover="1"><result status="valid" time="0.019978" steps="140"/></proof>
      <proof prover="3"><result status="valid" time="0.045442" steps="11314"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Impl2_Set" proved="true">
 <goal name="vc_set" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_set.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060684" steps="11609"/></proof>
  </goal>
  <goal name="vc_set.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.036362" steps="11619"/></proof>
  </goal>
  <goal name="vc_set.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010083" steps="124"/></proof>
  <proof prover="3"><result status="valid" time="0.164963" steps="16075"/></proof>
  </goal>
  <goal name="vc_set.3" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.098301" steps="14900"/></proof>
  </goal>
  <goal name="vc_set.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030498" steps="100371"/></proof>
  <proof prover="3"><result status="valid" time="0.126567" steps="14921"/></proof>
  </goal>
  <goal name="vc_set.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023081" steps="69"/></proof>
  <proof prover="3"><result status="valid" time="0.140696" steps="15133"/></proof>
  </goal>
  <goal name="vc_set.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.013755" steps="69"/></proof>
  <proof prover="3"><result status="valid" time="0.142968" steps="15138"/></proof>
  </goal>
  <goal name="vc_set.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017632" steps="190"/></proof>
  <proof prover="3"><result status="valid" time="0.109818" steps="19769"/></proof>
  </goal>
  <goal name="vc_set.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.032747" steps="96"/></proof>
  </goal>
  <goal name="vc_set.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018581" steps="96"/></proof>
  <proof prover="3"><result status="valid" time="0.109230" steps="17129"/></proof>
  </goal>
  <goal name="vc_set.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018377" steps="266"/></proof>
  <proof prover="3"><result status="valid" time="0.108040" steps="20574"/></proof>
  </goal>
  <goal name="vc_set.11" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.146034" steps="586312"/></proof>
  </goal>
  <goal name="vc_set.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.100673" steps="440472"/></proof>
  <proof prover="3"><result status="valid" time="0.099755" steps="23195"/></proof>
  </goal>
  <goal name="vc_set.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.162297" steps="35249"/></proof>
  </goal>
  <goal name="vc_set.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.084950" steps="21006"/></proof>
  </goal>
  <goal name="vc_set.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.192149" steps="40518"/></proof>
  </goal>
  <goal name="vc_set.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023393" steps="117"/></proof>
  <proof prover="3"><result status="valid" time="0.061060" steps="17951"/></proof>
  </goal>
  <goal name="vc_set.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039638" steps="128348"/></proof>
  <proof prover="3"><result status="valid" time="0.164015" steps="17960"/></proof>
  </goal>
  <goal name="vc_set.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.106718" steps="1382"/></proof>
  <proof prover="3"><result status="valid" time="0.090209" steps="23325"/></proof>
  </goal>
  <goal name="vc_set.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.029177" steps="142220"/></proof>
  </goal>
  <goal name="vc_set.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.064018" steps="19914"/></proof>
  </goal>
  <goal name="vc_set.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.096571" steps="24323"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="vc_set.21.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.032408" steps="164363"/></proof>
   </goal>
   <goal name="vc_set.21.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.088249" steps="22829"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_set.22" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.126779" steps="398"/></proof>
  <proof prover="3"><result status="valid" time="0.093564" steps="24941"/></proof>
  </goal>
  <goal name="vc_set.23" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.239695" steps="50812"/></proof>
  </goal>
  <goal name="vc_set.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.160061" steps="36689"/></proof>
  </goal>
  <goal name="vc_set.25" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.315169" steps="66802"/></proof>
  </goal>
  <goal name="vc_set.26" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.101113" steps="26695"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Create" proved="true">
 <goal name="vc_create" proved="true">
 <proof prover="1"><result status="valid" time="0.030648" steps="429"/></proof>
 </goal>
</theory>
<theory name="SparseArray_F" proved="true">
 <goal name="vc_f" proved="true">
 <proof prover="0"><result status="valid" time="0.081607" steps="334420"/></proof>
 </goal>
</theory>
</file>
</why3session>
