<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="sparse_array.coma"/>
<theory name="M_sparse_array__qyi13879026616235705248__resolve_coherence__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="2"><result status="valid" time="0.039802" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__qyi13879026616235705248__resolve_coherence" proved="true">
 <goal name="vc_resolve_coherence&#39;0" proved="true">
 <proof prover="0"><result status="valid" time="0.035508" steps="22178"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__qyi912363311032332466__get" proved="true">
 <goal name="vc_get&#39;0" proved="true">
 <proof prover="3"><result status="valid" time="0.101884" steps="19452"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__qyi912363311032332466__lemma_permutation" proved="true">
 <goal name="vc_lemma_permutation&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_lemma_permutation&#39;0.0" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="vc_lemma_permutation&#39;0.0.0" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int (get1 (view&#39;0 self.t_Sparse__back&#39;0) k))">
    <goal name="vc_lemma_permutation&#39;0.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f self.t_Sparse__n&#39;0)">
     <goal name="vc_lemma_permutation&#39;0.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.084382" steps="15979"/></proof>
     </goal>
     <goal name="vc_lemma_permutation&#39;0.0.0.0.1" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;= k &lt; self.t_Sparse__n&#39;0 /\ (f k) = i)">
      <goal name="vc_lemma_permutation&#39;0.0.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.044305" steps="233"/></proof>
      </goal>
      <goal name="vc_lemma_permutation&#39;0.0.0.0.1.1" proved="true">
      <proof prover="0"><result status="valid" time="0.045971" steps="30507"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_sparse_array__qyi912363311032332466__set" proved="true">
 <goal name="vc_set&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_set&#39;0.0" proved="true">
  <proof prover="0"><result status="valid" time="0.032929" steps="29817"/></proof>
  </goal>
  <goal name="vc_set&#39;0.1" expl="index_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018377" steps="15"/></proof>
  </goal>
  <goal name="vc_set&#39;0.2" expl="index_mut &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.064384" steps="4862"/></proof>
  </goal>
  <goal name="vc_set&#39;0.3" expl="index_mut requires" proved="true">
  <proof prover="2"><result status="valid" time="0.023081" steps="87"/></proof>
  </goal>
  <goal name="vc_set&#39;0.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.291616" steps="31377"/></proof>
  </goal>
  <goal name="vc_set&#39;0.5" expl="type invariant" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.030498" steps="32975"/></proof>
  <proof prover="3"><result status="valid" time="0.460067" steps="31459"/></proof>
  </goal>
  <goal name="vc_set&#39;0.6" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.017632" steps="29"/></proof>
  </goal>
  <goal name="vc_set&#39;0.7" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.043152" steps="5468"/></proof>
  </goal>
  <goal name="vc_set&#39;0.8" expl="index requires" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.022576" steps="34709"/></proof>
  </goal>
  <goal name="vc_set&#39;0.9" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.094390" steps="5801"/></proof>
  </goal>
  <goal name="vc_set&#39;0.10" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.030674" steps="5811"/></proof>
  </goal>
  <goal name="vc_set&#39;0.11" expl="index requires" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.126779" steps="195"/></proof>
  <proof prover="3"><result status="valid" time="0.461773" steps="33078"/></proof>
  </goal>
  <goal name="vc_set&#39;0.12" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.372141" steps="35266"/></proof>
  </goal>
  <goal name="vc_set&#39;0.13" expl="set ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.125329" steps="241"/></proof>
  </goal>
  <goal name="vc_set&#39;0.14" expl="set ensures #1" proved="true">
  <proof prover="0"><result status="valid" time="0.105753" steps="56673"/></proof>
  </goal>
  <goal name="vc_set&#39;0.15" expl="set ensures #2" proved="true">
  <proof prover="3"><result status="valid" time="0.854039" steps="51083"/></proof>
  </goal>
  <goal name="vc_set&#39;0.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.059373" steps="67128"/></proof>
  </goal>
  <goal name="vc_set&#39;0.17" expl="index_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.029177" steps="45921"/></proof>
  </goal>
  <goal name="vc_set&#39;0.18" expl="index_mut &#39;index&#39; type invariant" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.055557" steps="45988"/></proof>
  <proof prover="3"><result status="valid" time="0.036129" steps="6450"/></proof>
  </goal>
  <goal name="vc_set&#39;0.19" expl="index_mut requires" proved="true">
  <proof prover="3"><result status="valid" time="0.425644" steps="42438"/></proof>
  </goal>
  <goal name="vc_set&#39;0.20" expl="index_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.116015" steps="6916"/></proof>
  </goal>
  <goal name="vc_set&#39;0.21" expl="index_mut &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.113681" steps="6919"/></proof>
  </goal>
  <goal name="vc_set&#39;0.22" expl="index_mut requires" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.127798" steps="548"/></proof>
  <proof prover="3"><result status="valid" time="0.450999" steps="39923"/></proof>
  </goal>
  <goal name="vc_set&#39;0.23" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.013755" steps="191"/></proof>
  </goal>
  <goal name="vc_set&#39;0.24" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.085051" steps="80111"/></proof>
  </goal>
  <goal name="vc_set&#39;0.25" expl="set ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.065019" steps="567"/></proof>
  </goal>
  <goal name="vc_set&#39;0.26" expl="set ensures #1" proved="true">
  <proof prover="0"><result status="valid" time="0.094244" steps="102194"/></proof>
  </goal>
  <goal name="vc_set&#39;0.27" expl="set ensures #2" proved="true">
  <proof prover="3"><result status="valid" time="0.692785" steps="58130"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_sparse_array__create" proved="true">
 <goal name="vc_create&#39;0" proved="true">
 <proof prover="2" timelimit="1"><result status="valid" time="0.030648" steps="256"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__f" proved="true">
 <goal name="vc_f&#39;0" proved="true">
 <proof prover="0"><result status="valid" time="0.048646" steps="48525"/></proof>
 </goal>
</theory>
</file>
</why3session>
