<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="sparse_array.coma"/>
<theory name="SparseArray_Impl2_Get" proved="true">
 <goal name="vc_get" proved="true">
 <proof prover="3"><result status="valid" time="0.119879" steps="28115"/></proof>
 </goal>
</theory>
<theory name="SparseArray_Impl2_LemmaPermutation_Impl" proved="true">
 <goal name="vc_lemma_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_lemma_permutation.0" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="vc_lemma_permutation.0.0" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int (get1 (shallow_model&#39;0 (sparse_back self)) k))">
    <goal name="vc_lemma_permutation.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f (sparse_n self))">
     <goal name="vc_lemma_permutation.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.045781" steps="217482"/></proof>
     </goal>
     <goal name="vc_lemma_permutation.0.0.0.1" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;= k &lt; sparse_n self /\ (f k) = i)">
      <goal name="vc_lemma_permutation.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h1">
       <goal name="vc_lemma_permutation.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.033303" steps="450"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_lemma_permutation.0.0.0.1.1" proved="true">
      <proof prover="0"><result status="valid" time="0.052362" steps="253451"/></proof>
      <proof prover="1"><result status="valid" time="0.019978" steps="165"/></proof>
      <proof prover="3"><result status="valid" time="0.037041" steps="12335"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Impl2_Set" proved="true">
 <goal name="vc_set" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_set.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060684" steps="12500"/></proof>
  </goal>
  <goal name="vc_set.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.039946" steps="12510"/></proof>
  </goal>
  <goal name="vc_set.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010083" steps="110"/></proof>
  <proof prover="3"><result status="valid" time="0.050465" steps="16860"/></proof>
  </goal>
  <goal name="vc_set.3" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.098301" steps="13953"/></proof>
  </goal>
  <goal name="vc_set.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030498" steps="105857"/></proof>
  <proof prover="3"><result status="valid" time="0.126567" steps="15817"/></proof>
  </goal>
  <goal name="vc_set.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023081" steps="69"/></proof>
  <proof prover="3"><result status="valid" time="0.140696" steps="16029"/></proof>
  </goal>
  <goal name="vc_set.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.013755" steps="70"/></proof>
  <proof prover="3"><result status="valid" time="0.142968" steps="16034"/></proof>
  </goal>
  <goal name="vc_set.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017632" steps="238"/></proof>
  <proof prover="3"><result status="valid" time="0.109818" steps="20567"/></proof>
  </goal>
  <goal name="vc_set.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.032747" steps="96"/></proof>
  </goal>
  <goal name="vc_set.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018581" steps="96"/></proof>
  <proof prover="3"><result status="valid" time="0.109230" steps="18025"/></proof>
  </goal>
  <goal name="vc_set.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018377" steps="327"/></proof>
  <proof prover="3"><result status="valid" time="0.108040" steps="21373"/></proof>
  </goal>
  <goal name="vc_set.11" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.151516" steps="582900"/></proof>
  </goal>
  <goal name="vc_set.12" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.077364" steps="24092"/></proof>
  </goal>
  <goal name="vc_set.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.354182" steps="1423826"/></proof>
  <proof prover="3"><result status="valid" time="0.186530" steps="36257"/></proof>
  </goal>
  <goal name="vc_set.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.036540" steps="21819"/></proof>
  </goal>
  <goal name="vc_set.15" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.538588" steps="1993700"/></proof>
  <proof prover="3"><result status="valid" time="0.198549" steps="42817"/></proof>
  </goal>
  <goal name="vc_set.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023393" steps="119"/></proof>
  <proof prover="3"><result status="valid" time="0.093846" steps="19158"/></proof>
  </goal>
  <goal name="vc_set.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039638" steps="136915"/></proof>
  <proof prover="3"><result status="valid" time="0.160266" steps="19167"/></proof>
  </goal>
  <goal name="vc_set.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.135636" steps="2014"/></proof>
  <proof prover="3"><result status="valid" time="0.075652" steps="24416"/></proof>
  </goal>
  <goal name="vc_set.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.029177" steps="150816"/></proof>
  </goal>
  <goal name="vc_set.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.053788" steps="21121"/></proof>
  </goal>
  <goal name="vc_set.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.068517" steps="25428"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="vc_set.21.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.032408" steps="174547"/></proof>
   </goal>
   <goal name="vc_set.21.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.065933" steps="23934"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_set.22" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.010483" steps="397"/></proof>
  <proof prover="3"><result status="valid" time="0.048217" steps="26060"/></proof>
  </goal>
  <goal name="vc_set.23" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.190147" steps="53046"/></proof>
  </goal>
  <goal name="vc_set.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.126523" steps="38556"/></proof>
  </goal>
  <goal name="vc_set.25" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.240349" steps="70801"/></proof>
  </goal>
  <goal name="vc_set.26" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.077140" steps="27839"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Create" proved="true">
 <goal name="vc_create" proved="true">
 <proof prover="1"><result status="valid" time="0.030648" steps="448"/></proof>
 </goal>
</theory>
<theory name="SparseArray_F" proved="true">
 <goal name="vc_f" proved="true">
 <proof prover="0"><result status="valid" time="0.115563" steps="438849"/></proof>
 </goal>
</theory>
</file>
</why3session>
