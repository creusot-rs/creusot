<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="2" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="heapsort_generic.coma"/>
<theory name="M_heapsort_generic__heap_frag_max" proved="true">
 <goal name="vc_heap_frag_max&#39;0" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.020350" steps="178"/></proof>
 </goal>
</theory>
<theory name="M_heapsort_generic__sift_down" proved="true">
 <goal name="vc_sift_down&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_sift_down&#39;0.0" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.042932" steps="38"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.1" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.090607" steps="22"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.2" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.093170" steps="88"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.3" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.042622" steps="24"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.4" expl="loop invariant #3" proved="true">
  <proof prover="4"><result status="valid" time="0.037780" steps="48"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.5" expl="loop invariant #4" proved="true">
  <proof prover="4"><result status="valid" time="0.020800" steps="100"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.6" expl="loop invariant #5" proved="true">
  <proof prover="4"><result status="valid" time="0.125682" steps="117"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.7" expl="loop invariant #6" proved="true">
  <proof prover="4"><result status="valid" time="0.078982" steps="244"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.8" expl="loop invariant #7" proved="true">
  <proof prover="4"><result status="valid" time="0.081366" steps="503"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.9" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.021117" steps="40"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.10" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.021126" steps="42"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.11" expl="arithmetic overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.058050" steps="208"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.12" expl="arithmetic overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.032819" steps="471"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.13" expl="arithmetic overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.042186" steps="534"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.14" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.232658" steps="1310"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.15" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.090855" steps="519"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.16" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.406088" steps="2198"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.17" expl="arithmetic overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.046333" steps="582"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.18" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.264143" steps="1437"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.19" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.039703" steps="570"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.20" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.292379" steps="1572"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.21" expl="lt &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.069788" steps="95"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.22" expl="lt &#39;other&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029005" steps="95"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.23" expl="arithmetic overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.040039" steps="656"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.24" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.066606" steps="50"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.25" expl="sift_down ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="0.325263" steps="1397"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.26" expl="sift_down ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.035974" steps="112"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.27" expl="sift_down ensures #2" proved="true">
  <proof prover="4"><result status="valid" time="0.164727" steps="387"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.28" expl="sift_down ensures #3" proved="true">
  <proof prover="4"><result status="valid" time="0.474593" steps="2232"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.29" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.345210" steps="1856"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.30" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.043600" steps="601"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.31" expl="index requires" proved="true">
  <proof prover="2"><result status="valid" time="0.195979" steps="300328"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.32" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.382196" steps="2041"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.33" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.040365" steps="677"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.34" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.387284" steps="2063"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.35" expl="le &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.108513" steps="154"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.36" expl="le &#39;other&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.061642" steps="154"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.37" proved="true">
  <proof prover="4"><result status="valid" time="0.519809" steps="2388"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.38" expl="deref_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.112304" steps="750"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.39" proved="true">
  <proof prover="4"><result status="valid" time="0.490033" steps="2428"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.40" expl="swap &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.106346" steps="804"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.41" expl="swap requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.581101" steps="2763"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.42" expl="swap requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.067651" steps="194779"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.43" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.532954" steps="4038"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.44" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.059609" steps="216"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.45" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.487216" steps="4001"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.46" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.521160" steps="4205"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.47" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.170891" steps="205461"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.48" expl="loop invariant #3" proved="true">
  <proof prover="2"><result status="valid" time="0.168093" steps="213267"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.49" expl="loop invariant #4" proved="true">
  <proof prover="2"><result status="valid" time="0.171002" steps="213345"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.50" expl="loop invariant #5" proved="true">
  <proof prover="2"><result status="valid" time="0.165663" steps="215680"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.51" expl="loop invariant #6" proved="true">
  <proof prover="2"><result status="valid" time="0.177483" steps="217181"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.52" expl="loop invariant #7" proved="true">
  <proof prover="2"><result status="valid" time="0.186206" steps="218884"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.53" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029246" steps="159"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.54" expl="sift_down ensures #0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down&#39;0.54.0" expl="sift_down ensures #0" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="6.876089" steps="18345"/></proof>
   </goal>
   <goal name="vc_sift_down&#39;0.54.1" expl="sift_down ensures #0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_sift_down&#39;0.54.1.0" expl="sift_down ensures #0" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="9.371137" steps="43330"/></proof>
    </goal>
    <goal name="vc_sift_down&#39;0.54.1.1" expl="sift_down ensures #0" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="9.729922" steps="45476"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down&#39;0.55" expl="sift_down ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.034745" steps="783"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.56" expl="sift_down ensures #2" proved="true">
  <proof prover="4"><result status="valid" time="0.955521" steps="3694"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.57" expl="sift_down ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.168657" steps="200260"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_heapsort_generic__heap_sort" proved="true">
 <goal name="vc_heap_sort&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_heap_sort&#39;0.0" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030517" steps="66"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.1" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.029951" steps="23"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.2" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.031219" steps="27"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.3" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.031607" steps="74"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.4" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.075051" steps="219"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.5" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.137576" steps="758"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.6" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.136726" steps="508"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.7" expl="arithmetic overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.043659" steps="136"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.8" proved="true">
  <proof prover="4"><result status="valid" time="0.340383" steps="1507"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.9" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.112342" steps="125"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.10" expl="sift_down &#39;v&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.035966" steps="143"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.11" expl="sift_down requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.027273" steps="245"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.12" expl="sift_down requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.029042" steps="247"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.13" expl="sift_down requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.029244" steps="176"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.14" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.036481" steps="54"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.15" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.143399" steps="1062"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.16" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.142958" steps="583"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.17" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.160180" steps="652"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.18" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.138391" steps="976"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.19" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.035235" steps="110"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.20" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.280268" steps="1282"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.21" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.175543" steps="132"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.22" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.059266" steps="54"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.23" expl="loop invariant #3" proved="true">
  <proof prover="4"><result status="valid" time="0.068372" steps="156"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.24" expl="loop invariant #4" proved="true">
  <proof prover="4"><result status="valid" time="0.079653" steps="203"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.25" expl="loop invariant #5" proved="true">
  <proof prover="4"><result status="valid" time="0.056008" steps="154"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.26" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.062718" steps="68"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.27" expl="heap_sort ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="0.397250" steps="2158"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.28" expl="heap_sort ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.038961" steps="167"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.29" expl="arithmetic overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.034687" steps="68"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.30" proved="true">
  <proof prover="4"><result status="valid" time="0.203544" steps="637"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.31" expl="deref_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.075218" steps="177"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.32" proved="true">
  <proof prover="4"><result status="valid" time="0.159364" steps="691"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.33" expl="swap &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.037155" steps="188"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.34" expl="swap requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.081555" steps="252"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.35" expl="swap requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.037882" steps="353"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.36" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.096566" steps="743"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.37" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.445438" steps="2403"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.38" proved="true">
  <proof prover="4"><result status="valid" time="0.022813" steps="90"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.39" expl="sift_down &#39;v&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.024361" steps="213"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.40" expl="sift_down requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.507699" steps="2757"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.41" expl="sift_down requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.024710" steps="388"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.42" expl="sift_down requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.091184" steps="241"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.43" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.032612" steps="96"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.44" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.169747" steps="837"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.45" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.173915" steps="882"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.46" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.334327" steps="1825"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.47" expl="loop invariant #3" proved="true">
  <proof prover="4"><result status="valid" time="0.060614" steps="238"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.48" expl="loop invariant #4" proved="true">
  <proof prover="4"><result status="valid" time="0.494279" steps="2666"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.49" expl="loop invariant #5" proved="true">
  <proof prover="4"><result status="valid" time="0.612908" steps="3428"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
