<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="heapsort_generic.coma"/>
<theory name="M_heapsort_generic__heap_frag_max" proved="true">
 <goal name="vc_heap_frag_max&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.020350" steps="178"/></proof>
 </goal>
</theory>
<theory name="M_heapsort_generic__sift_down" proved="true">
 <goal name="vc_sift_down&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_sift_down&#39;0.0" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.042932" steps="11"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.1" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.090607" steps="10"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.2" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.093170" steps="47"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.3" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.035532" steps="12"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.4" expl="loop invariant #3" proved="true">
  <proof prover="4"><result status="valid" time="0.037780" steps="21"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.5" expl="loop invariant #4" proved="true">
  <proof prover="4"><result status="valid" time="0.020800" steps="56"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.6" expl="loop invariant #5" proved="true">
  <proof prover="4"><result status="valid" time="0.125682" steps="74"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.7" expl="loop invariant #6" proved="true">
  <proof prover="4"><result status="valid" time="0.078982" steps="196"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.8" expl="loop invariant #7" proved="true">
  <proof prover="4"><result status="valid" time="0.081366" steps="438"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.9" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.021117" steps="27"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.10" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.021126" steps="31"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.034570" steps="64"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.12" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.058050" steps="158"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.13" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.032819" steps="115"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.14" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.046333" steps="221"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.15" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.055531" steps="204"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.16" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.090855" steps="89"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.17" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.041215" steps="233"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.18" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.040039" steps="96"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.19" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.084733" steps="235"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.20" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.039703" steps="105"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.21" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.102707" steps="268"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.22" expl="lt &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.069788" steps="55"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.23" expl="lt &#39;other&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029005" steps="55"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.24" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.042186" steps="120"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.25" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029246" steps="37"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.26" expl="sift_down ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="0.123962" steps="567"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.27" expl="sift_down ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.034745" steps="65"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.28" expl="sift_down ensures #2" proved="true">
  <proof prover="4"><result status="valid" time="0.153078" steps="220"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.29" expl="sift_down ensures #3" proved="true">
  <proof prover="4"><result status="valid" time="0.363711" steps="4633"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.30" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.045171" steps="279"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.31" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.043600" steps="96"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.32" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.094249" steps="415"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.33" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.058881" steps="306"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.34" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.040365" steps="106"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.35" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.034244" steps="342"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.36" expl="le &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.108513" steps="49"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.37" expl="le &#39;other&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.053937" steps="12826"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.38" proved="true">
  <proof prover="4"><result status="valid" time="0.071303" steps="320"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.39" expl="deref_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.112304" steps="123"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.40" proved="true">
  <proof prover="4"><result status="valid" time="0.110638" steps="356"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.41" expl="swap &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.040850" steps="169587"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.42" expl="swap requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.043191" steps="182422"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.43" expl="swap requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.067651" steps="312504"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.44" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.061477" steps="170976"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.45" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.059609" steps="71"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.46" expl="loop invariant #0" proved="true">
  <proof prover="3"><result status="valid" time="0.251231" steps="34731"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.47" expl="loop invariant #1" proved="true">
  <proof prover="3"><result status="valid" time="0.643552" steps="51241"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.48" expl="loop invariant #2" proved="true">
  <proof prover="0"><result status="valid" time="0.330736" steps="44849"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.49" expl="loop invariant #3" proved="true">
  <proof prover="0"><result status="valid" time="0.339709" steps="49851"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.50" expl="loop invariant #4" proved="true">
  <proof prover="0"><result status="valid" time="1.626666" steps="124449"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.51" expl="loop invariant #5" proved="true">
  <proof prover="3"><result status="valid" time="2.920749" steps="140435"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.52" expl="loop invariant #6" proved="true">
  <proof prover="3"><result status="valid" time="1.559576" steps="101726"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.53" expl="loop invariant #7" proved="true">
  <proof prover="3"><result status="valid" time="2.121467" steps="116356"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.54" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.066606" steps="51"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.55" expl="sift_down ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="1.599476" steps="8014"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.56" expl="sift_down ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.035974" steps="120"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.57" expl="sift_down ensures #2" proved="true">
  <proof prover="4"><result status="valid" time="0.164727" steps="489"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.58" expl="sift_down ensures #3" proved="true">
  <proof prover="4"><result status="valid" time="2.164013" steps="12876"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_heapsort_generic__heap_sort" proved="true">
 <goal name="vc_heap_sort&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_heap_sort&#39;0.0" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030517" steps="36"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.1" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.029951" steps="11"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.2" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.031219" steps="15"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.021853" steps="42"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.4" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.031607" steps="36"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.5" expl="loop invariant #0" proved="true">
  <proof prover="0"><result status="valid" time="0.125675" steps="30237"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.6" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.137576" steps="367"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.7" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.020248" steps="57"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.8" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.034687" steps="75"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.9" proved="true">
  <proof prover="4"><result status="valid" time="0.173906" steps="447"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.10" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.138391" steps="61"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.11" expl="sift_down &#39;v&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.035966" steps="76"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.12" expl="sift_down requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.027273" steps="81"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.13" expl="sift_down requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.024710" steps="107"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.14" expl="sift_down requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.029244" steps="87"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.15" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.036481" steps="39"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.16" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.143399" steps="460"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.17" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.038279" steps="268"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.18" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.086001" steps="178712"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.19" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.112342" steps="402"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.20" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.035235" steps="62"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.21" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.143688" steps="587"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.22" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.037237" steps="77"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.23" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.059266" steps="41"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.24" expl="loop invariant #3" proved="true">
  <proof prover="0"><result status="valid" time="0.178190" steps="29342"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.25" expl="loop invariant #4" proved="true">
  <proof prover="3"><result status="valid" time="0.271825" steps="25560"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.26" expl="loop invariant #5" proved="true">
  <proof prover="4"><result status="valid" time="0.056008" steps="106"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.27" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.062718" steps="51"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.28" expl="heap_sort ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="0.141493" steps="801"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.29" expl="heap_sort ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.038961" steps="92"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.30" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.043659" steps="111"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.31" proved="true">
  <proof prover="4"><result status="valid" time="0.203544" steps="267"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.32" expl="deref_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.194638" steps="34959"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.33" proved="true">
  <proof prover="4"><result status="valid" time="0.041357" steps="306"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.34" expl="swap &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.037155" steps="110"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.35" expl="swap requires #0" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.350811" steps="31487"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.36" expl="swap requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.037882" steps="126"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.37" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.096566" steps="363"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.38" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.829469" steps="104053"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.39" proved="true">
  <proof prover="4"><result status="valid" time="0.022813" steps="73"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.40" expl="sift_down &#39;v&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.024361" steps="127"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.41" expl="sift_down requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.980145" steps="4447"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.42" expl="sift_down requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.029042" steps="79"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.43" expl="sift_down requires #2" proved="true">
  <proof prover="0"><result status="valid" time="0.197364" steps="35681"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.44" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.032612" steps="79"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.45" expl="loop invariant #0" proved="true">
  <proof prover="3"><result status="valid" time="0.501056" steps="34289"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.46" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.175543" steps="485"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.47" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.194008" steps="830"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.48" expl="loop invariant #3" proved="true">
  <proof prover="4"><result status="valid" time="0.060614" steps="148"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.49" expl="loop invariant #4" proved="true">
  <proof prover="0"><result status="valid" time="0.742721" steps="134136"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.50" expl="loop invariant #5" proved="true">
  <proof prover="3"><result status="valid" time="0.805980" steps="78234"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
