<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.15" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="866"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Impl16" proved="true">
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Impl11" proved="true">
 <goal name="DerefMut1.deref_mut&#39;refn&#39;vc" expl="VC for deref_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Core_Slice_Index_Impl2" proved="true">
 <goal name="GetUncheckedMut1.get_unchecked_mut&#39;refn&#39;vc" expl="VC for get_unchecked_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="GetUnchecked1.get_unchecked&#39;refn&#39;vc" expl="VC for get_unchecked&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="IndexMut1.index_mut&#39;refn&#39;vc" expl="VC for index_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="GetMut1.get_mut&#39;refn&#39;vc" expl="VC for get_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="Get1.get&#39;refn&#39;vc" expl="VC for get&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="103"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="73"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="193"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="398"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="640"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="62"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="164"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="844"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="766"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="940"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="941"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1050"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="1151"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="195"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="203"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1257"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="529"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.26" steps="62398"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.22.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.56" steps="102451"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.29" steps="80540"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="54982"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="48629"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="290529"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="2311"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="355"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="3598"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.32" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.34" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="45968"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.39" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.39.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.13" steps="46139"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="46333"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.41" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.41.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="46487"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="46587"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="15708"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.46" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="784"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.48" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="334"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.49" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="882"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.50" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="996"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.51" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="1073"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.52" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1230"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.53" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="517"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.54" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="253"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.55" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="1300"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.56" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="546"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.57" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="62830"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.58" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.58.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.44" steps="108266"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.59" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.33" steps="85780"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.60" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.54" steps="87264"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.61" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.60" steps="96014"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="295540"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="2740"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="449"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.65" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.65.0" expl="postcondition" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.60" steps="8824"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.66" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="366"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.67" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1010"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.68" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1102"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.69" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="1215"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.70" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="537"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.71" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="253"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.72" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="1291"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.73" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="564"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.74" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.28" steps="61926"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.75" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.75.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.61" steps="105275"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.76" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.81" steps="111679"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.77" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.41" steps="95942"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.78" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.53" steps="103866"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="300621"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.80" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="2382"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.81" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="468"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.82" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.82.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.58" steps="6102"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="276593"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="917"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="188"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.86" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="1989"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="31"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="98"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="329"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="40"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="985"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="151"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="176"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="57"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="57"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="206"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="277"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="190"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="204"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="1611"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="216"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="252"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="99"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="assertion" proved="true">
  <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.48" steps="15229"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="291"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="117"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="602679"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="862"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="1767"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="117"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="284"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <transf name="subst_all" proved="true" >
    <goal name="heap_sort&#39;vc.26.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="2"><result status="valid" time="1.19" steps="6839"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <transf name="subst_all" proved="true" >
    <goal name="heap_sort&#39;vc.27.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="2"><result status="valid" time="0.81" steps="4460"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="170"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="237"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="207"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="1407"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="76"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="709"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="876"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
