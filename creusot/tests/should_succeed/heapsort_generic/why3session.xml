<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="30" steplimit="0" memlimit="4000"/>
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="heapsort_generic.coma"/>
<theory name="Core_Cmp_Ordering_Type" proved="true">
 <goal name="vc_less" proved="true">
 <proof prover="2"><result status="valid" time="0.015754" steps="6"/></proof>
 </goal>
 <goal name="vc_equal" proved="true">
 <proof prover="2"><result status="valid" time="0.034422" steps="6"/></proof>
 </goal>
 <goal name="vc_greater" proved="true">
 <proof prover="2"><result status="valid" time="0.021880" steps="6"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="vc_heap_frag_max" proved="true">
 <proof prover="3"><result status="valid" time="0.058313" steps="14037"/></proof>
 </goal>
</theory>
<theory name="Core_Ptr_NonNull_NonNull_Type" proved="true">
 <goal name="vc_t_nonnull" proved="true">
 <proof prover="2"><result status="valid" time="0.016900" steps="6"/></proof>
 </goal>
</theory>
<theory name="Core_Marker_PhantomData_Type" proved="true">
 <goal name="vc_t_phantomdata" proved="true">
 <proof prover="2"><result status="valid" time="0.020957" steps="6"/></proof>
 </goal>
</theory>
<theory name="Core_Ptr_Unique_Unique_Type" proved="true">
 <goal name="vc_t_unique" proved="true">
 <proof prover="2"><result status="valid" time="0.018541" steps="6"/></proof>
 </goal>
</theory>
<theory name="Alloc_RawVec_Cap_Type" proved="true">
 <goal name="vc_t_cap" proved="true">
 <proof prover="2"><result status="valid" time="0.022408" steps="85"/></proof>
 </goal>
</theory>
<theory name="Alloc_RawVec_RawVec_Type" proved="true">
 <goal name="vc_t_rawvec" proved="true">
 <proof prover="2"><result status="valid" time="0.021029" steps="85"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Vec_Type" proved="true">
 <goal name="vc_t_vec" proved="true">
 <proof prover="2"><result status="valid" time="0.012541" steps="85"/></proof>
 </goal>
</theory>
<theory name="Alloc_Alloc_Global_Type" proved="true">
 <goal name="vc_t_global" proved="true">
 <proof prover="2"><result status="valid" time="0.020391" steps="6"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="vc_swap&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.022674" steps="6836"/></proof>
 </goal>
 <goal name="vc_deref_mut&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.027753" steps="6836"/></proof>
 </goal>
 <goal name="vc_le&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.028500" steps="6836"/></proof>
 </goal>
 <goal name="vc_lt&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.029303" steps="6836"/></proof>
 </goal>
 <goal name="vc_index&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.028857" steps="6836"/></proof>
 </goal>
 <goal name="vc_sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_sift_down.0" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.049090" steps="17785"/></proof>
  </goal>
  <goal name="vc_sift_down.1" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.126023" steps="17833"/></proof>
  </goal>
  <goal name="vc_sift_down.2" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.119565" steps="34295"/></proof>
  </goal>
  <goal name="vc_sift_down.3" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.066805" steps="235"/></proof>
  </goal>
  <goal name="vc_sift_down.4" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.105847" steps="32210"/></proof>
  </goal>
  <goal name="vc_sift_down.5" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.091056" steps="29258"/></proof>
  </goal>
  <goal name="vc_sift_down.6" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.060255" steps="22234"/></proof>
  </goal>
  <goal name="vc_sift_down.7" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.052820" steps="21112"/></proof>
  </goal>
  <goal name="vc_sift_down.8" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.094876" steps="28428"/></proof>
  </goal>
  <goal name="vc_sift_down.9" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.061322" steps="21701"/></proof>
  </goal>
  <goal name="vc_sift_down.10" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.165550" steps="21272"/></proof>
  </goal>
  <goal name="vc_sift_down.11" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.081987" steps="24442"/></proof>
  </goal>
  <goal name="vc_sift_down.12" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.134685" steps="30651"/></proof>
  </goal>
  <goal name="vc_sift_down.13" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.174637" steps="24984"/></proof>
  </goal>
  <goal name="vc_sift_down.14" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.143021" steps="31255"/></proof>
  </goal>
  <goal name="vc_sift_down.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.084700" steps="22530"/></proof>
  </goal>
  <goal name="vc_sift_down.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.084880" steps="22535"/></proof>
  </goal>
  <goal name="vc_sift_down.17" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.149919" steps="32325"/></proof>
  </goal>
  <goal name="vc_sift_down.18" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.065811" steps="21409"/></proof>
  </goal>
  <goal name="vc_sift_down.19" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.108728" steps="25362"/></proof>
  </goal>
  <goal name="vc_sift_down.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080848" steps="22593"/></proof>
  </goal>
  <goal name="vc_sift_down.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.082936" steps="22598"/></proof>
  </goal>
  <goal name="vc_sift_down.22" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.144070" steps="32745"/></proof>
  </goal>
  <goal name="vc_sift_down.23" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.064199" steps="21450"/></proof>
  </goal>
  <goal name="vc_sift_down.24" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.117712" steps="21455"/></proof>
  </goal>
  <goal name="vc_sift_down.25" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.066189" steps="21456"/></proof>
  </goal>
  <goal name="vc_sift_down.26" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.111157" steps="25846"/></proof>
  </goal>
  <goal name="vc_sift_down.27" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.080436" steps="22312"/></proof>
  </goal>
  <goal name="vc_sift_down.28" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.114022" steps="526"/></proof>
  </goal>
  <goal name="vc_sift_down.29" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.138014" steps="31953"/></proof>
  </goal>
  <goal name="vc_sift_down.30" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.083433" steps="23086"/></proof>
  </goal>
  <goal name="vc_sift_down.31" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.31.0" expl="postcondition" proved="true">
   <transf name="remove" proved="true" arg1="singleton,empty">
    <goal name="vc_sift_down.31.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.206732" steps="63823"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.32" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080999" steps="23545"/></proof>
  </goal>
  <goal name="vc_sift_down.33" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080829" steps="23550"/></proof>
  </goal>
  <goal name="vc_sift_down.34" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.140906" steps="33299"/></proof>
  </goal>
  <goal name="vc_sift_down.35" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.064364" steps="22343"/></proof>
  </goal>
  <goal name="vc_sift_down.36" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.177111" steps="23581"/></proof>
  </goal>
  <goal name="vc_sift_down.37" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.174862" steps="23586"/></proof>
  </goal>
  <goal name="vc_sift_down.38" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.137865" steps="33744"/></proof>
  </goal>
  <goal name="vc_sift_down.39" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.133440" steps="22367"/></proof>
  </goal>
  <goal name="vc_sift_down.40" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.121409" steps="22372"/></proof>
  </goal>
  <goal name="vc_sift_down.41" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.107232" steps="22373"/></proof>
  </goal>
  <goal name="vc_sift_down.42" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.140406" steps="23662"/></proof>
  </goal>
  <goal name="vc_sift_down.43" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.113306" steps="23814"/></proof>
  </goal>
  <goal name="vc_sift_down.44" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.166721" steps="37118"/></proof>
  </goal>
  <goal name="vc_sift_down.45" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.186449" steps="28021"/></proof>
  </goal>
  <goal name="vc_sift_down.46" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.084533" steps="23894"/></proof>
  </goal>
  <goal name="vc_sift_down.47" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.128911" steps="22607"/></proof>
  </goal>
  <goal name="vc_sift_down.48" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.48.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.118079" steps="35664"/></proof>
   </goal>
   <goal name="vc_sift_down.48.1" expl="loop invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_sift_down.48.1.0" expl="loop invariant" proved="true">
    <proof prover="0"><result status="valid" time="0.862362" steps="226118"/></proof>
    </goal>
    <goal name="vc_sift_down.48.1.1" expl="loop invariant" proved="true">
    <proof prover="3"><result status="valid" time="0.347960" steps="99543"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.49" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.49.0" expl="loop invariant" proved="true">
   <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.091861" steps="27713"/></proof>
   </goal>
   <goal name="vc_sift_down.49.1" expl="loop invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_sift_down.49.1.0" expl="loop invariant" proved="true">
    <proof prover="0"><result status="valid" time="0.753799" steps="184083"/></proof>
    </goal>
    <goal name="vc_sift_down.49.1.1" expl="loop invariant" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),singleton,cons,snoc,(++),mem,iseq,occ,occ_all,seq_eq_sub,permut_sub,permut_all,( *_),(^_),borrow_logic,get_id,usize&#39;maxInt,usize&#39;minInt,usize&#39;eq,min,in_bounds,slice&#39;eq,id1,invariant&#39;10,invariant&#39;9,invariant&#39;8,invariant&#39;7,invariant&#39;6,invariant&#39;5,invariant&#39;4,max&#39;0,invariant&#39;3,invariant&#39;0,heap_frag&#39;0,resolve&#39;3,has_value&#39;0,in_bounds&#39;0,resolve&#39;0,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_bound,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,numof&#39;def,Numof_bounds,Numof_append,Numof_left_no_add,Numof_left_add,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,(==)&#39;spec,(==)&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ,exchange_set,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,usize&#39;inj,to_int_in_bounds,extensionality,inner_spec,slice&#39;invariant,slice&#39;inj,slice_ext,spec,inv&#39;10,inv&#39;9,inv&#39;8,inv&#39;7,inv&#39;6,inv&#39;5,inv&#39;4,shallow_model&#39;2_spec,inv&#39;2,eq_cmp&#39;0_spec,antisym2&#39;0_spec,antisym1&#39;0_spec,trans&#39;0_spec,cmp_ge_log&#39;0_spec,cmp_lt_log&#39;0_spec,inv&#39;1,inv&#39;0,shallow_model&#39;6_spec,Assert49,Assert47,Assert46,Assert45,Assert44,Assert43,Assert41,Assert40,Assert38,Assert37,Assert36,Assert34,Assert31,Assert30,Assert17,Assert16,Assert15,Assert14,Assert13,Assert12,Assert11,Assert10,Assert9,Assert8,Assert7,Assert4,Assert2,Assert,H15,H14,H13,H12,H11,H10,H9,H8,Assert29,H19,H18,H17,H16,H3,Assert28,Assert27,Assert26,Assert25,Assert24,Assert23,Assert22,Assert21,Assert20,H7,H6,H5,H4,Assert19">
     <goal name="vc_sift_down.49.1.1.0" expl="loop invariant" proved="true">
     <proof prover="2"><result status="valid" time="0.019595" steps="61848"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.50" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.50.0" expl="loop invariant" proved="true">
   <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),singleton,cons,snoc,(++),mem,seq_eq_sub,permut_sub,permut_all,usize&#39;maxInt,usize&#39;minInt,usize&#39;eq,in_bounds,invariant&#39;10,invariant&#39;9,invariant&#39;7,invariant&#39;4,invariant&#39;0,heap_frag&#39;0,shallow_model&#39;5,in_bounds&#39;0,resolve&#39;0,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Unitary,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Mod_sign_pos,Div_1,Mod_inf,numof&#39;def,Numof_bounds,Numof_append,Empty,numof_change_equiv,length_nonnegative,(==)&#39;spec,(==)&#39;spec&#39;0,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,usize&#39;inj,inner_spec,inv&#39;10,inv&#39;9,inv&#39;8,inv&#39;4,trans&#39;0_spec,refl&#39;0_spec,cmp_gt_log&#39;0_spec,cmp_ge_log&#39;0_spec,cmp_lt_log&#39;0_spec,inv&#39;0,shallow_model&#39;6_spec,Assert38,Assert36,Assert35,Assert34,Assert33,Assert32,Assert30,Assert29,Assert28,Assert27,Assert26,Assert25,Assert17,Assert15,Assert14,Assert13,Assert11,Assert10,Assert8,Assert7,Assert4,Assert2,Assert,H,H19,H18,H17,H16,H15,H13,H12,H11,H10,H9,H8,H7,H23,H22,H6,H5,H4,H3">
    <goal name="vc_sift_down.50.0.0" expl="loop invariant" proved="true">
    <proof prover="1" timelimit="5"><result status="valid" time="0.386940" steps="10889"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_sift_down.50.1" expl="loop invariant" proved="true">
   <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),singleton,cons,snoc,(++),mem,iseq,occ,occ_all,seq_eq_sub,permut_sub,permut_all,usize&#39;minInt,usize&#39;eq,min,max,in_bounds,slice&#39;eq,id1,invariant&#39;10,invariant&#39;9,invariant&#39;8,invariant&#39;5,invariant&#39;3,invariant&#39;0,resolve&#39;0,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Unitary,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Div_bound,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,numof&#39;def,Numof_bounds,Numof_append,Numof_left_no_add,Numof_left_add,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,length_nonnegative,(==)&#39;spec,create&#39;spec,create&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ,exchange_set,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,usize&#39;inj,to_int_in_bounds,inner_spec,slice&#39;invariant,slice&#39;inj,slice_ext,spec,inv&#39;10,inv&#39;8,inv&#39;6,inv&#39;5,inv&#39;4,inv&#39;2,antisym1&#39;0_spec,trans&#39;0_spec,refl&#39;0_spec,cmp_gt_log&#39;0_spec,cmp_ge_log&#39;0_spec,inv&#39;0,shallow_model&#39;6_spec,Assert47,Assert44,Assert43,Assert42,Assert41,Assert39,Assert38,Assert36,Assert35,Assert34,Assert17,Assert15,Assert14,Assert13,Assert11,Assert7,Assert4,Assert2,Assert,H5,Assert26,Assert24,Assert23,Assert21,Assert19,Assert18">
    <goal name="vc_sift_down.50.1.0" expl="loop invariant" proved="true">
    <proof prover="2"><result status="valid" time="0.050980" steps="620780"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.51" expl="loop invariant" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,singleton,cons,snoc,(++),mem,seq_eq_sub,permut_sub,permut_all,( *_),(^_),borrow_logic,get_id,usize&#39;minInt,min,max,slice&#39;eq,invariant&#39;10,invariant&#39;9,invariant&#39;8,invariant&#39;7,invariant&#39;6,invariant&#39;5,invariant&#39;4,in_bounds&#39;0,resolve&#39;0,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Comm,Unitary,Trans,CompatOrderMult,Abs_le,Abs_pos,Div_sign_pos,Div_sign_neg,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,Numof_bounds,Numof_append,Numof_left_no_add,Numof_left_add,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_equiv,length_nonnegative,(==)&#39;spec,create&#39;spec,create&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,append_num_occ,exchange_set,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,usize&#39;inj,inner_spec,slice&#39;invariant,slice&#39;inj,slice_ext,inv&#39;10,inv&#39;8,inv&#39;7,inv&#39;6,inv&#39;5,cmp_gt_log&#39;0_spec,cmp_ge_log&#39;0_spec,cmp_lt_log&#39;0_spec,shallow_model&#39;6_spec,Assert43,Assert39,Assert38,Assert37,Assert35,Assert34,Assert31,Assert28,Assert27,Assert20,Assert18,Assert17,Assert16,Assert14,Assert13,Assert11,Assert10,Assert7,Assert5,Assert3,Assert2,Assert1,Assert,H3">
   <goal name="vc_sift_down.51.0" expl="loop invariant" proved="true">
   <proof prover="2"><result status="valid" time="0.026675" steps="164746"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.52" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.270835" steps="57792"/></proof>
  </goal>
  <goal name="vc_sift_down.53" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.318327" steps="50832"/></proof>
  </goal>
  <goal name="vc_sift_down.54" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.269419" steps="60639"/></proof>
  </goal>
  <goal name="vc_sift_down.55" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.152305" steps="23641"/></proof>
  </goal>
  <goal name="vc_sift_down.56" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.235712" steps="52416"/></proof>
  </goal>
  <goal name="vc_sift_down.57" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.126501" steps="37152"/></proof>
  </goal>
  <goal name="vc_sift_down.58" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.153294" steps="24396"/></proof>
  </goal>
  <goal name="vc_sift_down.59" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.59.0" expl="postcondition" proved="true">
   <transf name="remove" proved="true" arg1="singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,exchange_permut_sub,Permut_sub_weakening,permut_refl">
    <goal name="vc_sift_down.59.0.0" expl="postcondition" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.246490" steps="90754"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_sift_down.59.1" expl="postcondition" proved="true">
   <transf name="remove" proved="true" arg1="singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,exchange_permut_sub,Permut_sub_weakening,permut_refl">
    <goal name="vc_sift_down.59.1.0" expl="postcondition" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.327940" steps="135194"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="vc_swap&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.027614" steps="7663"/></proof>
 </goal>
 <goal name="vc_deref_mut&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.031478" steps="7663"/></proof>
 </goal>
 <goal name="vc_sift_down&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.019331" steps="7663"/></proof>
 </goal>
 <goal name="vc_len&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.029028" steps="7663"/></proof>
 </goal>
 <goal name="vc_heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_heap_sort.0" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.057955" steps="17864"/></proof>
  </goal>
  <goal name="vc_heap_sort.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.119932" steps="18013"/></proof>
  </goal>
  <goal name="vc_heap_sort.2" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.050673" steps="17575"/></proof>
  </goal>
  <goal name="vc_heap_sort.3" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.046928" steps="17207"/></proof>
  </goal>
  <goal name="vc_heap_sort.4" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.073791" steps="19255"/></proof>
  </goal>
  <goal name="vc_heap_sort.5" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.063989" steps="17990"/></proof>
  </goal>
  <goal name="vc_heap_sort.6" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.058915" steps="17969"/></proof>
  </goal>
  <goal name="vc_heap_sort.7" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.116592" steps="29437"/></proof>
  </goal>
  <goal name="vc_heap_sort.8" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.076915" steps="21445"/></proof>
  </goal>
  <goal name="vc_heap_sort.9" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.059592" steps="17159"/></proof>
  </goal>
  <goal name="vc_heap_sort.10" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.062902" steps="17158"/></proof>
  </goal>
  <goal name="vc_heap_sort.11" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.067658" steps="20101"/></proof>
  </goal>
  <goal name="vc_heap_sort.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.056599" steps="18180"/></proof>
  </goal>
  <goal name="vc_heap_sort.13" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.116415" steps="18203"/></proof>
  </goal>
  <goal name="vc_heap_sort.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.085518" steps="18556"/></proof>
  </goal>
  <goal name="vc_heap_sort.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.151324" steps="23065"/></proof>
  </goal>
  <goal name="vc_heap_sort.16" expl="precondition" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.143858" steps="31603"/></proof>
  </goal>
  <goal name="vc_heap_sort.17" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.052379" steps="21278"/></proof>
  </goal>
  <goal name="vc_heap_sort.18" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.102353" steps="28240"/></proof>
  </goal>
  <goal name="vc_heap_sort.19" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.070574" steps="28692"/></proof>
  </goal>
  <goal name="vc_heap_sort.20" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.129700" steps="29411"/></proof>
  </goal>
  <goal name="vc_heap_sort.21" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.057353" steps="21357"/></proof>
  </goal>
  <goal name="vc_heap_sort.22" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.061729" steps="21359"/></proof>
  </goal>
  <goal name="vc_heap_sort.23" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060301" steps="18136"/></proof>
  </goal>
  <goal name="vc_heap_sort.24" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.041841" steps="18438"/></proof>
  </goal>
  <goal name="vc_heap_sort.25" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.061954" steps="21282"/></proof>
  </goal>
  <goal name="vc_heap_sort.26" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.191173" steps="23491"/></proof>
  </goal>
  <goal name="vc_heap_sort.27" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.088089" steps="23540"/></proof>
  </goal>
  <goal name="vc_heap_sort.28" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.060850" steps="20728"/></proof>
  </goal>
  <goal name="vc_heap_sort.29" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.075959" steps="21427"/></proof>
  </goal>
  <goal name="vc_heap_sort.30" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.050677" steps="20758"/></proof>
  </goal>
  <goal name="vc_heap_sort.31" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.061337" steps="21436"/></proof>
  </goal>
  <goal name="vc_heap_sort.32" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.070493" steps="22001"/></proof>
  </goal>
  <goal name="vc_heap_sort.33" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.105312" steps="29344"/></proof>
  </goal>
  <goal name="vc_heap_sort.34" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.079891" steps="23996"/></proof>
  </goal>
  <goal name="vc_heap_sort.35" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.068649" steps="21501"/></proof>
  </goal>
  <goal name="vc_heap_sort.36" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.158066" steps="21653"/></proof>
  </goal>
  <goal name="vc_heap_sort.37" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.135569" steps="24662"/></proof>
  </goal>
  <goal name="vc_heap_sort.38" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.115204" steps="21044"/></proof>
  </goal>
  <goal name="vc_heap_sort.39" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.064553" steps="21737"/></proof>
  </goal>
  <goal name="vc_heap_sort.40" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.097342" steps="246967"/></proof>
  </goal>
  <goal name="vc_heap_sort.41" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.064052" steps="22002"/></proof>
  </goal>
  <goal name="vc_heap_sort.42" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.081308" steps="25485"/></proof>
  </goal>
  <goal name="vc_heap_sort.43" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.068251" steps="21326"/></proof>
  </goal>
  <goal name="vc_heap_sort.44" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.244044" steps="63310"/></proof>
  </goal>
  <goal name="vc_heap_sort.45" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.061782" steps="21967"/></proof>
  </goal>
  <goal name="vc_heap_sort.46" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_heap_sort.46.0" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.180508" steps="52333"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_heap_sort.47" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_heap_sort.47.0" expl="loop invariant" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.831947" steps="421869"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_heap_sort.48" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.098446" steps="23915"/></proof>
  </goal>
  <goal name="vc_heap_sort.49" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.108096" steps="32586"/></proof>
  </goal>
  <goal name="vc_heap_sort.50" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.108193" steps="549"/></proof>
  </goal>
  <goal name="vc_heap_sort.51" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.052784" steps="22166"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
