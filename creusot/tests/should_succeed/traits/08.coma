
module M_08__Tr__program
  type self
  
  let%span s080 = "../08.rs" 12 16 12 20
  
  let%span span1 = "../../../../../creusot-contracts/src/invariant.rs" 26 8 26 18
  
  predicate invariant'1 (self : self)
  
  predicate inv'1 (_1 : self)
  
  axiom inv'1 : forall x : self . inv'1 x = true
  
  use prelude.prelude.Borrow
  
  predicate invariant'0 (self : self) =
    [%#span1] inv'1 self
  
  predicate inv'0 (_1 : self)
  
  axiom inv'0 : forall x : self . inv'0 x = true
  
  use prelude.prelude.Intrinsic
  
  let rec program (self:self) (return'  (ret:()))= {[%#s080] inv'0 self}
    (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ]  [ return' (result:())-> (! return' {result}) ] 
end
module M_08__test
  type t
  
  predicate invariant'0 (self : t)
  
  predicate inv'0 (_1 : t)
  
  axiom inv'0 : forall x : t . inv'0 x = true
  
  use prelude.prelude.Intrinsic
  
  predicate resolve'0 (self : t)
  
  let rec test (_1:t) (return'  (ret:()))= {inv'0 _1}
    (! bb0
    [ bb0 = s0 [ s0 = {[@expl:type invariant] inv'0 _1} s1 | s1 = -{resolve'0 _1}- s2 | s2 = bb1 ] 
    | bb1 = return' {_0} ]
    ) [ & _0 : () = any_l () | & _1 : t = _1 ]  [ return' (result:())-> (! return' {result}) ] 
end
