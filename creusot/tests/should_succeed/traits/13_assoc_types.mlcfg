
module C13AssocTypes_Model_ModelTy_Type
  type self
  type modelTy
end
module CreusotContracts_Resolve_Resolve_Resolve_Stub
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module C13AssocTypes_Impl0_Model_Interface
  type t
  use prelude.Borrow
  clone C13AssocTypes_Model_ModelTy_Type as ModelTy0 with
    type self = t
  val model [#"../13_assoc_types.rs" 13 4 13 35] (self : t) : ModelTy0.modelTy
end
module C13AssocTypes_Impl0_Model
  type t
  use prelude.Borrow
  clone C13AssocTypes_Model_ModelTy_Type as ModelTy0 with
    type self = t
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve0 with
    type self = t
  let rec cfg model [#"../13_assoc_types.rs" 13 4 13 35] [@cfg:stackify] [@cfg:subregion_analysis] (self : t) : ModelTy0.modelTy
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ModelTy0.modelTy;
  var self : t = self;
  {
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve self };
    _0 <- ([#"../13_assoc_types.rs" 14 8 14 22] model self);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module C13AssocTypes_Impl0
  type t
end
