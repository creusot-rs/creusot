
module C04_User
  type t
  predicate invariant0 (self : t)
  val invariant0 (self : t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : t)
  val inv0 (_x : t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : t . inv0 x = true
  use prelude.Borrow
  val func30 [#"../04.rs" 8 4 8 38] (self : t) (o : t) : bool
    requires {[#"../04.rs" 8 14 8 18] inv0 self}
    requires {[#"../04.rs" 8 20 8 21] inv0 o}
    
  predicate resolve0 (self : t)
  val resolve0 (self : t) : bool
    ensures { result = resolve0 self }
    
  val func20 [#"../04.rs" 7 4 7 38] (self : t) (o : t) : bool
    requires {[#"../04.rs" 7 14 7 18] inv0 self}
    requires {[#"../04.rs" 7 20 7 21] inv0 o}
    
  val func10 [#"../04.rs" 6 4 6 38] (self : t) (o : t) : bool
    requires {[#"../04.rs" 6 14 6 18] inv0 self}
    requires {[#"../04.rs" 6 20 6 21] inv0 o}
    
  let rec cfg user [#"../04.rs" 12 0 12 39] [@cfg:stackify] [@cfg:subregion_analysis] (a : t) (b : t) : bool
    requires {[#"../04.rs" 12 18 12 19] inv0 a}
    requires {[#"../04.rs" 12 25 12 26] inv0 b}
    ensures { [#"../04.rs" 11 10 11 25] result = false }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var a : t = a;
  var b : t = b;
  var _4 : bool;
  var _5 : bool;
  var _8 : bool;
  var _11 : bool;
  {
    goto BB0
  }
  BB0 {
    [#"../04.rs" 13 4 13 14] _5 <- ([#"../04.rs" 13 4 13 14] func10 ([#"../04.rs" 13 4 13 14] a) ([#"../04.rs" 13 12 13 13] b));
    goto BB7
  }
  BB1 {
    assert { [@expl:type invariant] inv0 b };
    assume { resolve0 b };
    assert { [@expl:type invariant] inv0 a };
    assume { resolve0 a };
    [#"../04.rs" 13 4 13 42] _0 <- ([#"../04.rs" 13 4 13 42] [#"../04.rs" 13 4 13 42] false);
    goto BB3
  }
  BB2 {
    assert { [@expl:type invariant] inv0 a };
    assume { resolve0 a };
    assert { [@expl:type invariant] inv0 b };
    assume { resolve0 b };
    [#"../04.rs" 13 32 13 42] _11 <- ([#"../04.rs" 13 32 13 42] func30 ([#"../04.rs" 13 32 13 42] a) ([#"../04.rs" 13 40 13 41] b));
    goto BB9
  }
  BB3 {
    return _0
  }
  BB4 {
    [#"../04.rs" 13 4 13 28] _4 <- ([#"../04.rs" 13 4 13 28] [#"../04.rs" 13 4 13 28] false);
    goto BB6
  }
  BB5 {
    [#"../04.rs" 13 18 13 28] _8 <- ([#"../04.rs" 13 18 13 28] func20 ([#"../04.rs" 13 18 13 28] b) ([#"../04.rs" 13 26 13 27] a));
    goto BB8
  }
  BB6 {
    switch (_4)
      | False -> goto BB1
      | True -> goto BB2
      end
  }
  BB7 {
    switch (_5)
      | False -> goto BB4
      | True -> goto BB5
      end
  }
  BB8 {
    [#"../04.rs" 13 4 13 28] _4 <- ([#"../04.rs" 13 4 13 28] _8);
    [#"../04.rs" 13 4 13 28] _8 <- any bool;
    goto BB6
  }
  BB9 {
    [#"../04.rs" 13 4 13 42] _0 <- ([#"../04.rs" 13 4 13 42] _11);
    [#"../04.rs" 13 4 13 42] _11 <- any bool;
    goto BB3
  }
  
end
