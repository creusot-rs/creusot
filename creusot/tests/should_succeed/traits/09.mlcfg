
module C09_Test_Interface
  type t
  use prelude.Int
  use prelude.UInt32
  val test [#"../09.rs" 7 0 7 43] (t : uint32) : uint32
end
module C09_Test
  type t
  use prelude.Int
  use prelude.UInt32
  let rec cfg test [#"../09.rs" 7 0 7 43] [@cfg:stackify] [@cfg:subregion_analysis] (t : uint32) : uint32
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : uint32;
  var t_1 : uint32;
  var _2 : uint32;
  {
    t_1 <- t;
    goto BB0
  }
  BB0 {
    _2 <- t_1;
    _0 <- ([#"../09.rs" 8 4 8 9] _2 + ([#"../09.rs" 8 8 8 9] (0 : uint32)));
    return _0
  }
  
end
module C09_Tr_X_Type
  type self
  type x
end
module C09_Test2_Interface
  type t
  type u
  clone C09_Tr_X_Type as X0 with
    type self = t
  val test2 [#"../09.rs" 11 0 11 53] (t : X0.x) : X0.x
end
module C09_Test2
  type t
  type u
  clone C09_Tr_X_Type as X0 with
    type self = t
  let rec cfg test2 [#"../09.rs" 11 0 11 53] [@cfg:stackify] [@cfg:subregion_analysis] (t : X0.x) : X0.x
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : X0.x;
  var t_1 : X0.x;
  {
    t_1 <- t;
    goto BB0
  }
  BB0 {
    _0 <- t_1;
    t_1 <- any X0.x;
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
