
module C04_User
  type t
  predicate invariant'0 (self : t)
  let rec invariant'0 (self:t) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'0 self} (! return' {result}) ]
    
  predicate inv'0 (_x : t)
  let rec inv'0 (_x:t) (return'  (ret:bool))= any [ return' (result:bool)-> {result = inv'0 _x} (! return' {result}) ] 
  axiom inv'0 : forall x : t . inv'0 x = true
  use prelude.Borrow
  use prelude.Intrinsic
  let rec func3'0 (self:t) (o:t) (return'  (ret:bool))= {[@expl:precondition] [#"../04.rs" 8 20 8 21] inv'0 o}
    {[@expl:precondition] [#"../04.rs" 8 14 8 18] inv'0 self}
    any [ return' (result:bool)-> (! return' {result}) ] 
  predicate resolve'0 (self : t)
  let rec resolve'0 (self:t) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'0 self} (! return' {result}) ]
    
  let rec func2'0 (self:t) (o:t) (return'  (ret:bool))= {[@expl:precondition] [#"../04.rs" 7 20 7 21] inv'0 o}
    {[@expl:precondition] [#"../04.rs" 7 14 7 18] inv'0 self}
    any [ return' (result:bool)-> (! return' {result}) ] 
  let rec func1'0 (self:t) (o:t) (return'  (ret:bool))= {[@expl:precondition] [#"../04.rs" 6 20 6 21] inv'0 o}
    {[@expl:precondition] [#"../04.rs" 6 14 6 18] inv'0 self}
    any [ return' (result:bool)-> (! return' {result}) ] 
  let rec user (a:t) (b:t) (return'  (ret:bool))= {[#"../04.rs" 12 25 12 26] inv'0 b}
    {[#"../04.rs" 12 18 12 19] inv'0 a}
    (! bb0
    [ bb0 = s0 [ s0 = func1'0 {a} {b} (fun (_ret':bool) ->  [ &_4 <- _ret' ] s1) | s1 = bb1 ] 
    | bb1 = s0 [ s0 = any [ br0 -> {_4 = false} (! bb6) | br1 -> {_4} (! bb2) ]  ] 
    | bb2 = s0 [ s0 = func2'0 {b} {a} (fun (_ret':bool) ->  [ &_7 <- _ret' ] s1) | s1 = bb3 ] 
    | bb3 = s0 [ s0 = any [ br0 -> {_7 = false} (! bb5) | br1 -> {_7} (! bb4) ]  ] 
    | bb4 = s0
      [ s0 = {[@expl:type invariant] inv'0 a} s1
      | s1 = -{resolve'0 a}- s2
      | s2 = {[@expl:type invariant] inv'0 b} s3
      | s3 = -{resolve'0 b}- s4
      | s4 = func3'0 {a} {b} (fun (_ret':bool) ->  [ &_0 <- _ret' ] s5)
      | s5 = bb8 ]
      
    | bb8 = s0 [ s0 = bb9 ] 
    | bb5 = s0
      [ s0 = {[@expl:type invariant] inv'0 b} s1
      | s1 = -{resolve'0 b}- s2
      | s2 = {[@expl:type invariant] inv'0 a} s3
      | s3 = -{resolve'0 a}- s4
      | s4 = bb7 ]
      
    | bb6 = s0
      [ s0 = {[@expl:type invariant] inv'0 b} s1
      | s1 = -{resolve'0 b}- s2
      | s2 = {[@expl:type invariant] inv'0 a} s3
      | s3 = -{resolve'0 a}- s4
      | s4 = bb7 ]
      
    | bb7 = s0 [ s0 =  [ &_0 <- [#"../04.rs" 13 4 13 42] false ] s1 | s1 = bb9 ] 
    | bb9 = s0 [ s0 = return' {_0} ]  ]
    )
    [ & _0 : bool = any_l () : bool
    | & a : t = a
    | & b : t = b
    | & _4 : bool = any_l () : bool
    | & _7 : bool = any_l () : bool ]
     [ return' (result:bool)-> {[@expl:postcondition] [#"../04.rs" 11 10 11 25] result = false} (! return' {result}) ] 
end
