module M_11__test [#"11.rs" 18 0 18 23]
  type t_T'0
  
  predicate inv'0 (_1 : t_T'0)
  
  use prelude.prelude.Borrow
  
  predicate resolve'0 (_1 : t_T'0)
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec test'0 (_1:t_T'0) (return'  (ret:()))= {[@expl:test '_1' type invariant] inv'0 _1}
    (! bb0
    [ bb0 = s0 [ s0 = {[@expl:type invariant] inv'0 _1} s1 | s1 = -{resolve'0 _1}- s2 | s2 = bb1 ] 
    | bb1 = return' {_0} ]
    ) [ & _0 : () = any_l () | & _1 : t_T'0 = _1 ]  [ return' (result:())-> (! return' {result}) ] 
end
