module M_18_trait_laws__uses_op [#"18_trait_laws.rs" 16 0 16 48]
  let%span s18_trait_laws0 = "18_trait_laws.rs" 15 10 15 24
  let%span s18_trait_laws1 = "18_trait_laws.rs" 17 16 17 34
  let%span s18_trait_laws2 = "18_trait_laws.rs" 9 14 9 32
  
  type t_T'0
  
  function op'0 [#"18_trait_laws.rs" 6 4 6 33] (self : t_T'0) (_2 : t_T'0) : t_T'0
  
  function reflexive'0 [#"18_trait_laws.rs" 10 4 10 35] (a : t_T'0) (b : t_T'0) : ()
  
  axiom reflexive'0_spec : forall a : t_T'0, b : t_T'0 . [%#s18_trait_laws2] op'0 a b = op'0 b a
  
  constant x  : t_T'0
  
  constant y  : t_T'0
  
  function uses_op'0 [#"18_trait_laws.rs" 16 0 16 48] (x : t_T'0) (y : t_T'0) : bool
  
  goal vc_uses_op'0 : [%#s18_trait_laws0] (op'0 x y = op'0 y x) = true
end
module M_18_trait_laws__qyi7507292126067306954__reflexive [#"18_trait_laws.rs" 30 4 30 34] (* <() as Symmetric> *)
  let%span s18_trait_laws0 = "18_trait_laws.rs" 29 14 29 32
  let%span s18_trait_laws1 = "18_trait_laws.rs" 27 4 27 10
  let%span s18_trait_laws2 = "18_trait_laws.rs" 24 8 24 10
  
  function op'0 [#"18_trait_laws.rs" 23 4 23 32] (self : ()) (_2 : ()) : () =
    [%#s18_trait_laws2] ()
  
  constant a  : ()
  
  constant b  : ()
  
  function reflexive'0 [#"18_trait_laws.rs" 30 4 30 34] (a : ()) (b : ()) : ()
  
  goal vc_reflexive'0 : [%#s18_trait_laws0] op'0 a b = op'0 b a
end
module M_18_trait_laws__impl_laws [#"18_trait_laws.rs" 36 0 36 26]
  let%span s18_trait_laws0 = "18_trait_laws.rs" 35 10 35 24
  let%span s18_trait_laws1 = "18_trait_laws.rs" 37 16 37 38
  let%span s18_trait_laws2 = "18_trait_laws.rs" 24 8 24 10
  let%span s18_trait_laws3 = "18_trait_laws.rs" 29 14 29 32
  let%span s18_trait_laws4 = "18_trait_laws.rs" 27 4 27 10
  
  function op'0 [#"18_trait_laws.rs" 23 4 23 32] (self : ()) (_2 : ()) : () =
    [%#s18_trait_laws2] ()
  
  function reflexive'0 [#"18_trait_laws.rs" 30 4 30 34] (a : ()) (b : ()) : () =
    [%#s18_trait_laws4] ()
  
  axiom reflexive'0_spec : forall a : (), b : () . [%#s18_trait_laws3] op'0 a b = op'0 b a
  
  constant _1  : ()
  
  function impl_laws'0 [#"18_trait_laws.rs" 36 0 36 26] (_1 : ()) : bool
  
  goal vc_impl_laws'0 : [%#s18_trait_laws0] (op'0 () () = op'0 () ()) = true
end
module M_18_trait_laws__qyi7507292126067306954__reflexive__refines [#"18_trait_laws.rs" 30 4 30 34] (* <() as Symmetric> *)
  let%span s18_trait_laws0 = "18_trait_laws.rs" 30 4 30 34
  let%span s18_trait_laws1 = "18_trait_laws.rs" 24 8 24 10
  
  function op'0 [#"18_trait_laws.rs" 23 4 23 32] (self : ()) (_2 : ()) : () =
    [%#s18_trait_laws1] ()
  
  goal refines : [%#s18_trait_laws0] forall a : () . forall b : () . forall result : () . op'0 a b = op'0 b a
   -> op'0 a b = op'0 b a
end
