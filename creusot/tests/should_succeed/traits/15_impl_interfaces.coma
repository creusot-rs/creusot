
module C15ImplInterfaces_Calls
  let%span s15_impl_interfaces0 = "../15_impl_interfaces.rs" 22 11 22 21
  
  let%span span1 = "../15_impl_interfaces.rs" 19 4 19 10
  
  function x'0 [#"../15_impl_interfaces.rs" 18 0 18 26] (_x : ()) : ()
  
  use prelude.prelude.Intrinsic
  
  let rec calls (a:()) (return'  (ret:()))= {[%#s15_impl_interfaces0] x'0 a = ()}
    (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ]  [ return' (result:())-> (! return' {result}) ] 
end
module C15ImplInterfaces_Impl0
  
end
