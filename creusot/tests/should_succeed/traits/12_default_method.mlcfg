
module C12DefaultMethod_T_Default
  type self
  predicate invariant0 (self : self)
  val invariant0 (self : self) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : self)
  val inv0 (_x : self) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : self . inv0 x = true
  use prelude.Borrow
  predicate resolve0 (self : self)
  val resolve0 (self : self) : bool
    ensures { result = resolve0 self }
    
  use prelude.UInt32
  use prelude.Int
  let rec cfg default [#"../12_default_method.rs" 6 4 6 28] [@cfg:stackify] [@cfg:subregion_analysis] (self : self) : uint32
    requires {[#"../12_default_method.rs" 6 16 6 20] inv0 self}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : uint32;
  var self : self = self;
  {
    goto BB0
  }
  BB0 {
    [#"../12_default_method.rs" 7 8 7 9] _0 <- ([#"../12_default_method.rs" 7 8 7 9] (0 : uint32));
    assert { [@expl:type invariant] inv0 self };
    assume { resolve0 self };
    return _0
  }
  
end
module C12DefaultMethod_ShouldUseImpl
  use prelude.UInt32
  predicate invariant0 (self : uint32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : uint32) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : uint32)
  val inv0 (_x : uint32) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : uint32 . inv0 x = true
  function logic_default0 [#"../12_default_method.rs" 12 4 12 34] (self : uint32) : bool =
    [#"../12_default_method.rs" 13 8 13 12] true
  val logic_default0 [#"../12_default_method.rs" 12 4 12 34] (self : uint32) : bool
    ensures { result = logic_default0 self }
    
  use prelude.Int
  use prelude.Borrow
  val default0 [#"../12_default_method.rs" 6 4 6 28] (self : uint32) : uint32
    requires {[#"../12_default_method.rs" 6 16 6 20] inv0 self}
    
  let rec cfg should_use_impl [#"../12_default_method.rs" 20 0 20 30] [@cfg:stackify] [@cfg:subregion_analysis] (x : uint32) : ()
    ensures { [#"../12_default_method.rs" 19 10 19 27] logic_default0 x }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x : uint32 = x;
  var _3 : uint32;
  {
    goto BB0
  }
  BB0 {
    [#"../12_default_method.rs" 21 4 21 15] _3 <- ([#"../12_default_method.rs" 21 4 21 15] default0 x);
    goto BB1
  }
  BB1 {
    [#"../12_default_method.rs" 20 31 22 1] _0 <- ([#"../12_default_method.rs" 20 31 22 1] ());
    return _0
  }
  
end
module C12DefaultMethod_Impl0
  
end
