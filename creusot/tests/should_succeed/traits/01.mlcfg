
module C01_UsesGeneric
  type t
  use prelude.UInt32
  predicate invariant1 (self : uint32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant1 (self : uint32) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : uint32)
  val inv1 (_x : uint32) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : uint32 . inv1 x = true
  predicate invariant0 (self : t)
  val invariant0 (self : t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : t)
  val inv0 (_x : t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : t . inv0 x = true
  use prelude.Int
  val from_b0 [#"../01.rs" 5 4 5 31] (x : t) : uint32
    requires {[#"../01.rs" 5 17 5 18] inv0 x}
    ensures { [#"../01.rs" 5 29 5 30] inv1 result }
    
  let rec cfg uses_generic [#"../01.rs" 8 0 8 38] [@cfg:stackify] [@cfg:subregion_analysis] (b : t) : uint32
    requires {[#"../01.rs" 8 26 8 27] inv0 b}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : uint32;
  var b : t = b;
  {
    goto BB0
  }
  BB0 {
    [#"../01.rs" 9 4 9 16] _0 <- ([#"../01.rs" 9 4 9 16] from_b0 b);
    b <- any t;
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
