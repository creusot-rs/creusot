
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
end
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_unique 't =
    | C_Unique (Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (Core_Marker_PhantomData_Type.t_phantomdata 't)
    
end
module Alloc_RawVec_RawVec_Type
  use prelude.Int
  use prelude.UIntSize
  use Core_Ptr_Unique_Unique_Type as Core_Ptr_Unique_Unique_Type
  type t_rawvec 't 'a =
    | C_RawVec (Core_Ptr_Unique_Unique_Type.t_unique 't) usize 'a
    
end
module Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  use Alloc_RawVec_RawVec_Type as Alloc_RawVec_RawVec_Type
  type t_vec 't 'a =
    | C_Vec (Alloc_RawVec_RawVec_Type.t_rawvec 't 'a) usize
    
end
module Alloc_Alloc_Global_Type
  type t_global  =
    | C_Global
    
end
module C16ImplCloning_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_vec 't =
    | C_Vec (Alloc_Vec_Vec_Type.t_vec 't (Alloc_Alloc_Global_Type.t_global))
    
end
module C16ImplCloning_Impl0_ShallowModel_Stub
  type t
  use seq.Seq
  use C16ImplCloning_Vec_Type as C16ImplCloning_Vec_Type
  function shallow_model [#"../16_impl_cloning.rs" 11 4 11 50] (self : C16ImplCloning_Vec_Type.t_vec t) : Seq.seq t
end
module C16ImplCloning_Impl0_ShallowModel_Interface
  type t
  use seq.Seq
  use C16ImplCloning_Vec_Type as C16ImplCloning_Vec_Type
  function shallow_model [#"../16_impl_cloning.rs" 11 4 11 50] (self : C16ImplCloning_Vec_Type.t_vec t) : Seq.seq t
  val shallow_model [#"../16_impl_cloning.rs" 11 4 11 50] (self : C16ImplCloning_Vec_Type.t_vec t) : Seq.seq t
    ensures { result = shallow_model self }
    
end
module C16ImplCloning_Impl0_ShallowModel
  type t
  use seq.Seq
  use C16ImplCloning_Vec_Type as C16ImplCloning_Vec_Type
  function shallow_model [#"../16_impl_cloning.rs" 11 4 11 50] (self : C16ImplCloning_Vec_Type.t_vec t) : Seq.seq t
  val shallow_model [#"../16_impl_cloning.rs" 11 4 11 50] (self : C16ImplCloning_Vec_Type.t_vec t) : Seq.seq t
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl3_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl3_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl3_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../../creusot-contracts/src/model.rs" 58 8 58 31] ShallowModel0.shallow_model ( * self)
  val shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve_Stub
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module C16ImplCloning_Test_Interface
  type t
  use prelude.Borrow
  use seq.Seq
  use seq.Seq
  use C16ImplCloning_Vec_Type as C16ImplCloning_Vec_Type
  clone C16ImplCloning_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = t
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = C16ImplCloning_Vec_Type.t_vec t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  val test [#"../16_impl_cloning.rs" 17 0 17 30] (x : borrowed (C16ImplCloning_Vec_Type.t_vec t)) : ()
    ensures { [#"../16_impl_cloning.rs" 16 10 16 21] ShallowModel0.shallow_model x = ShallowModel1.shallow_model ( * x) }
    
end
module C16ImplCloning_Test
  type t
  use prelude.Borrow
  use seq.Seq
  use seq.Seq
  use C16ImplCloning_Vec_Type as C16ImplCloning_Vec_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = C16ImplCloning_Vec_Type.t_vec t
  clone C16ImplCloning_Impl0_ShallowModel as ShallowModel1 with
    type t = t
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = C16ImplCloning_Vec_Type.t_vec t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg test [#"../16_impl_cloning.rs" 17 0 17 30] [@cfg:stackify] [@cfg:subregion_analysis] (x : borrowed (C16ImplCloning_Vec_Type.t_vec t)) : ()
    ensures { [#"../16_impl_cloning.rs" 16 10 16 21] ShallowModel0.shallow_model x = ShallowModel1.shallow_model ( * x) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x_1 : borrowed (C16ImplCloning_Vec_Type.t_vec t);
  {
    x_1 <- x;
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve x_1 };
    _0 <- ();
    return _0
  }
  
end
module C16ImplCloning_Impl0
  type t
end
