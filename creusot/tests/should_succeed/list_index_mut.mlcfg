
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module ListIndexMut_List_Type
  use prelude.Int
  use prelude.UInt32
  use Core_Option_Option_Type as Core_Option_Option_Type
  type t_list  =
    | C_List uint32 (Core_Option_Option_Type.t_option (t_list))
    
  let function list_0 (self : t_list) : uint32 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_List a _ -> a
      end
  let function list_1 (self : t_list) : Core_Option_Option_Type.t_option (t_list) = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_List _ a -> a
      end
end
module ListIndexMut_Impl0_Len_Stub
  use prelude.Int
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  function len [#"../list_index_mut.rs" 7 4 7 29] (self : ListIndexMut_List_Type.t_list) : int
end
module ListIndexMut_Impl0_Len_Interface
  use prelude.Int
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  function len [#"../list_index_mut.rs" 7 4 7 29] (self : ListIndexMut_List_Type.t_list) : int
  val len [#"../list_index_mut.rs" 7 4 7 29] (self : ListIndexMut_List_Type.t_list) : int
    ensures { result = len self }
    
end
module ListIndexMut_Impl0_Len
  use prelude.Int
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  function len [#"../list_index_mut.rs" 7 4 7 29] (self : ListIndexMut_List_Type.t_list) : int =
    [#"../list_index_mut.rs" 6 4 6 12] let ListIndexMut_List_Type.C_List _ ls = self in 1 + match (ls) with
      | Core_Option_Option_Type.C_Some ls -> len ls
      | Core_Option_Option_Type.C_None -> 0
      end
  val len [#"../list_index_mut.rs" 7 4 7 29] (self : ListIndexMut_List_Type.t_list) : int
    ensures { result = len self }
    
end
module ListIndexMut_Impl0_Get_Stub
  use prelude.Int
  use prelude.UInt32
  use Core_Option_Option_Type as Core_Option_Option_Type
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  function get [#"../list_index_mut.rs" 18 4 18 46] (self : ListIndexMut_List_Type.t_list) (ix : int) : Core_Option_Option_Type.t_option uint32
    
end
module ListIndexMut_Impl0_Get_Interface
  use prelude.Int
  use prelude.UInt32
  use Core_Option_Option_Type as Core_Option_Option_Type
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  function get [#"../list_index_mut.rs" 18 4 18 46] (self : ListIndexMut_List_Type.t_list) (ix : int) : Core_Option_Option_Type.t_option uint32
    
  val get [#"../list_index_mut.rs" 18 4 18 46] (self : ListIndexMut_List_Type.t_list) (ix : int) : Core_Option_Option_Type.t_option uint32
    ensures { result = get self ix }
    
end
module ListIndexMut_Impl0_Get
  use prelude.Int
  use prelude.UInt32
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  function get [#"../list_index_mut.rs" 18 4 18 46] (self : ListIndexMut_List_Type.t_list) (ix : int) : Core_Option_Option_Type.t_option uint32
    
   =
    [#"../list_index_mut.rs" 17 4 17 12] let ListIndexMut_List_Type.C_List i ls = self in if ix > 0 then
      match (ls) with
        | Core_Option_Option_Type.C_Some ls -> get ls (ix - 1)
        | Core_Option_Option_Type.C_None -> Core_Option_Option_Type.C_None
        end
    else
      Core_Option_Option_Type.C_Some i
    
  val get [#"../list_index_mut.rs" 18 4 18 46] (self : ListIndexMut_List_Type.t_list) (ix : int) : Core_Option_Option_Type.t_option uint32
    ensures { result = get self ix }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl5_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl5_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl5_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot-contracts/src/model.rs" 83 8 83 31] ShallowModel0.shallow_model self
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Ghost_Impl1_ShallowModel_Stub
  type t
  use prelude.Ghost
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Ghost_Impl1_ShallowModel_Interface
  type t
  use prelude.Ghost
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Ghost_Impl1_ShallowModel
  type t
  use prelude.Ghost
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot-contracts/src/ghost.rs" 26 20 26 48] ShallowModel0.shallow_model (Ghost.inner self)
  val shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve_Stub
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
    [#"../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Invariant_Inv_Stub
  type t
  predicate inv (_x : t)
end
module CreusotContracts_Invariant_Inv_Interface
  type t
  predicate inv (_x : t)
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CreusotContracts_Invariant_Inv
  type t
  predicate inv (_x : t) =
    [#"../../../../creusot-contracts/src/invariant.rs" 16 4 16 8] true
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module Core_Option_Impl0_AsMut_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = Core_Option_Option_Type.t_option (borrowed t)
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = borrowed t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (Core_Option_Option_Type.t_option t)
  val as_mut (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option (borrowed t)
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 39 16 39 77]  * self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None /\  ^ self = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 40 16 43 18]  * self = Core_Option_Option_Type.C_None \/ (exists r : borrowed t . Inv1.inv r /\ result = Core_Option_Option_Type.C_Some r /\  * self = Core_Option_Option_Type.C_Some ( * r) /\  ^ self = Core_Option_Option_Type.C_Some ( ^ r)) }
    ensures { Inv2.inv result }
    
end
module Core_Option_Impl0_Unwrap_Interface
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Core_Option_Option_Type.t_option t
  val unwrap (self : Core_Option_Option_Type.t_option t) : t
    requires {[#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self <> Core_Option_Option_Type.C_None}
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] Core_Option_Option_Type.C_Some result = self }
    ensures { Inv1.inv result }
    
end
module TyInv_Trivial
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = t
  axiom inv_trivial : forall self : t . Inv0.inv self = true
end
module CreusotContracts_Std1_Num_Impl15_ShallowModel_Stub
  use prelude.Int
  use prelude.UIntSize
  function shallow_model (self : usize) : int
end
module CreusotContracts_Std1_Num_Impl15_ShallowModel_Interface
  use prelude.Int
  use prelude.UIntSize
  function shallow_model (self : usize) : int
  val shallow_model (self : usize) : int
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Std1_Num_Impl15_ShallowModel
  use prelude.Int
  use prelude.UIntSize
  function shallow_model (self : usize) : int =
    UIntSize.to_int self
  val shallow_model (self : usize) : int
    ensures { result = shallow_model self }
    
end
module ListIndexMut_IndexMut_Interface
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone ListIndexMut_Impl0_Get_Stub as Get0
  clone ListIndexMut_Impl0_Len_Stub as Len0
  val index_mut [#"../list_index_mut.rs" 37 0 37 61] (l : borrowed (ListIndexMut_List_Type.t_list)) (ix : usize) : borrowed uint32
    requires {[#"../list_index_mut.rs" 32 11 32 24] UIntSize.to_int ix < Len0.len ( * l)}
    ensures { [#"../list_index_mut.rs" 33 10 33 37] Core_Option_Option_Type.C_Some ( * result) = Get0.get ( * l) (UIntSize.to_int ix) }
    ensures { [#"../list_index_mut.rs" 34 10 34 40] Core_Option_Option_Type.C_Some ( ^ result) = Get0.get ( ^ l) (UIntSize.to_int ix) }
    ensures { [#"../list_index_mut.rs" 35 10 35 34] Len0.len ( ^ l) = Len0.len ( * l) }
    ensures { [#"../list_index_mut.rs" 36 0 36 87] forall i : int . 0 <= i /\ i < Len0.len ( * l) /\ i <> UIntSize.to_int ix -> Get0.get ( * l) i = Get0.get ( ^ l) i }
    
end
module ListIndexMut_IndexMut
  use prelude.Ghost
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.UInt32
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = Core_Option_Option_Type.t_option (borrowed (ListIndexMut_List_Type.t_list))
  clone TyInv_Trivial as TyInv_Trivial2 with
    type t = Core_Option_Option_Type.t_option (borrowed (ListIndexMut_List_Type.t_list)),
    predicate Inv0.inv = Inv2.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = borrowed (ListIndexMut_List_Type.t_list)
  clone TyInv_Trivial as TyInv_Trivial1 with
    type t = borrowed (ListIndexMut_List_Type.t_list),
    predicate Inv0.inv = Inv1.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = borrowed (Core_Option_Option_Type.t_option (ListIndexMut_List_Type.t_list))
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = borrowed (Core_Option_Option_Type.t_option (ListIndexMut_List_Type.t_list)),
    predicate Inv0.inv = Inv0.inv,
    axiom .
  clone CreusotContracts_Std1_Num_Impl15_ShallowModel as ShallowModel2
  use prelude.Int
  clone CreusotContracts_Model_Impl5_ShallowModel as ShallowModel1 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = ListIndexMut_List_Type.t_list
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap0 with
    type t = borrowed (ListIndexMut_List_Type.t_list),
    predicate Inv0.inv = Inv2.inv,
    predicate Inv1.inv = Inv1.inv
  clone Core_Option_Impl0_AsMut_Interface as AsMut0 with
    type t = ListIndexMut_List_Type.t_list,
    predicate Inv0.inv = Inv0.inv,
    predicate Inv1.inv = Inv1.inv,
    predicate Inv2.inv = Inv2.inv
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = ListIndexMut_List_Type.t_list
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = uint32
  clone CreusotContracts_Ghost_Impl1_ShallowModel as ShallowModel0 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone ListIndexMut_Impl0_Get as Get0
  clone ListIndexMut_Impl0_Len as Len0
  let rec cfg index_mut [#"../list_index_mut.rs" 37 0 37 61] [@cfg:stackify] [@cfg:subregion_analysis] (l : borrowed (ListIndexMut_List_Type.t_list)) (ix : usize) : borrowed uint32
    requires {[#"../list_index_mut.rs" 32 11 32 24] UIntSize.to_int ix < Len0.len ( * l)}
    ensures { [#"../list_index_mut.rs" 33 10 33 37] Core_Option_Option_Type.C_Some ( * result) = Get0.get ( * l) (UIntSize.to_int ix) }
    ensures { [#"../list_index_mut.rs" 34 10 34 40] Core_Option_Option_Type.C_Some ( ^ result) = Get0.get ( ^ l) (UIntSize.to_int ix) }
    ensures { [#"../list_index_mut.rs" 35 10 35 34] Len0.len ( ^ l) = Len0.len ( * l) }
    ensures { [#"../list_index_mut.rs" 36 0 36 87] forall i : int . 0 <= i /\ i < Len0.len ( * l) /\ i <> UIntSize.to_int ix -> Get0.get ( * l) i = Get0.get ( ^ l) i }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : borrowed uint32;
  var l : borrowed (ListIndexMut_List_Type.t_list) = l;
  var ix : usize = ix;
  var _3 : borrowed uint32;
  var old_l : Ghost.ghost_ty (borrowed (ListIndexMut_List_Type.t_list));
  var old_ix : Ghost.ghost_ty usize;
  var _22 : borrowed (ListIndexMut_List_Type.t_list);
  var _23 : borrowed (ListIndexMut_List_Type.t_list);
  var _24 : Core_Option_Option_Type.t_option (borrowed (ListIndexMut_List_Type.t_list));
  var _25 : borrowed (Core_Option_Option_Type.t_option (ListIndexMut_List_Type.t_list));
  var _29 : borrowed uint32;
  {
    goto BB0
  }
  BB0 {
    old_l <- ([#"../list_index_mut.rs" 38 16 38 25] Ghost.new l);
    goto BB1
  }
  BB1 {
    old_ix <- ([#"../list_index_mut.rs" 39 17 39 27] Ghost.new ix);
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    invariant { [#"../list_index_mut.rs" 40 16 40 45] (0 : usize) <= ix /\ UIntSize.to_int ix < Len0.len ( * l) };
    invariant { [#"../list_index_mut.rs" 41 16 41 52] Get0.get ( * l) (UIntSize.to_int ix) = Get0.get ( * Ghost.inner old_l) (ShallowModel0.shallow_model old_ix) };
    invariant { [#"../list_index_mut.rs" 42 16 42 55] Get0.get ( ^ l) (UIntSize.to_int ix) = Get0.get ( ^ Ghost.inner old_l) (ShallowModel0.shallow_model old_ix) };
    invariant { [#"../list_index_mut.rs" 40 4 40 47] Len0.len ( ^ l) = Len0.len ( * l) -> Len0.len ( ^ Ghost.inner old_l) = Len0.len ( * Ghost.inner old_l) };
    invariant { [#"../list_index_mut.rs" 40 4 40 47] (forall i : int . 0 <= i /\ i < Len0.len ( * l) /\ i <> UIntSize.to_int ix -> Get0.get ( ^ l) i = Get0.get ( * l) i) -> (forall i : int . 0 <= i /\ i < Len0.len ( * Ghost.inner old_l) /\ i <> ShallowModel0.shallow_model old_ix -> Get0.get ( ^ Ghost.inner old_l) i = Get0.get ( * Ghost.inner old_l) i) };
    goto BB4
  }
  BB4 {
    switch ([#"../list_index_mut.rs" 49 10 49 16] ix > ([#"../list_index_mut.rs" 49 15 49 16] (0 : usize)))
      | False -> goto BB8
      | True -> goto BB5
      end
  }
  BB5 {
    _25 <- Borrow.borrow_mut (ListIndexMut_List_Type.list_1 ( * l));
    l <- { l with current = (let ListIndexMut_List_Type.C_List a b =  * l in ListIndexMut_List_Type.C_List a ( ^ _25)) };
    _24 <- ([#"../list_index_mut.rs" 50 12 50 24] AsMut0.as_mut _25);
    _25 <- any borrowed (Core_Option_Option_Type.t_option (ListIndexMut_List_Type.t_list));
    goto BB6
  }
  BB6 {
    _23 <- ([#"../list_index_mut.rs" 50 12 50 33] Unwrap0.unwrap _24);
    _24 <- any Core_Option_Option_Type.t_option (borrowed (ListIndexMut_List_Type.t_list));
    goto BB7
  }
  BB7 {
    _22 <- Borrow.borrow_mut ( * _23);
    _23 <- { _23 with current = ( ^ _22) };
    assume { Resolve1.resolve l };
    l <- _22;
    _22 <- any borrowed (ListIndexMut_List_Type.t_list);
    assume { Resolve2.resolve _23 };
    ix <- ([#"../list_index_mut.rs" 52 8 52 15] ix - ([#"../list_index_mut.rs" 52 14 52 15] (1 : usize)));
    goto BB3
  }
  BB8 {
    _29 <- Borrow.borrow_mut (ListIndexMut_List_Type.list_0 ( * l));
    l <- { l with current = (let ListIndexMut_List_Type.C_List a b =  * l in ListIndexMut_List_Type.C_List ( ^ _29) b) };
    _3 <- Borrow.borrow_mut ( * _29);
    _29 <- { _29 with current = ( ^ _3) };
    _0 <- Borrow.borrow_mut ( * _3);
    _3 <- { _3 with current = ( ^ _0) };
    assume { Resolve0.resolve _29 };
    assume { Resolve0.resolve _3 };
    assume { Resolve1.resolve l };
    return _0
  }
  
end
module ListIndexMut_Write_Interface
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone ListIndexMut_Impl0_Get_Stub as Get0
  clone ListIndexMut_Impl0_Len_Stub as Len0
  val write [#"../list_index_mut.rs" 63 0 63 45] (l : borrowed (ListIndexMut_List_Type.t_list)) (ix : usize) (v : uint32) : ()
    requires {[#"../list_index_mut.rs" 59 11 59 24] UIntSize.to_int ix < Len0.len ( * l)}
    ensures { [#"../list_index_mut.rs" 60 10 60 34] Core_Option_Option_Type.C_Some v = Get0.get ( ^ l) (UIntSize.to_int ix) }
    ensures { [#"../list_index_mut.rs" 61 10 61 31] Len0.len ( ^ l) = Len0.len ( * l) }
    ensures { [#"../list_index_mut.rs" 62 0 62 87] forall i : int . 0 <= i /\ i < Len0.len ( * l) /\ i <> UIntSize.to_int ix -> Get0.get ( * l) i = Get0.get ( ^ l) i }
    
end
module ListIndexMut_Write
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.UInt32
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone ListIndexMut_Impl0_Get as Get0
  clone ListIndexMut_Impl0_Len as Len0
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = ListIndexMut_List_Type.t_list
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = uint32
  clone ListIndexMut_IndexMut_Interface as IndexMut0 with
    function Len0.len = Len0.len,
    function Get0.get = Get0.get
  let rec cfg write [#"../list_index_mut.rs" 63 0 63 45] [@cfg:stackify] [@cfg:subregion_analysis] (l : borrowed (ListIndexMut_List_Type.t_list)) (ix : usize) (v : uint32) : ()
    requires {[#"../list_index_mut.rs" 59 11 59 24] UIntSize.to_int ix < Len0.len ( * l)}
    ensures { [#"../list_index_mut.rs" 60 10 60 34] Core_Option_Option_Type.C_Some v = Get0.get ( ^ l) (UIntSize.to_int ix) }
    ensures { [#"../list_index_mut.rs" 61 10 61 31] Len0.len ( ^ l) = Len0.len ( * l) }
    ensures { [#"../list_index_mut.rs" 62 0 62 87] forall i : int . 0 <= i /\ i < Len0.len ( * l) /\ i <> UIntSize.to_int ix -> Get0.get ( * l) i = Get0.get ( ^ l) i }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var l : borrowed (ListIndexMut_List_Type.t_list) = l;
  var ix : usize = ix;
  var v : uint32 = v;
  var _9 : borrowed uint32;
  var _10 : borrowed (ListIndexMut_List_Type.t_list);
  {
    goto BB0
  }
  BB0 {
    _10 <- Borrow.borrow_mut ( * l);
    l <- { l with current = ( ^ _10) };
    _9 <- ([#"../list_index_mut.rs" 64 5 64 21] IndexMut0.index_mut _10 ix);
    _10 <- any borrowed (ListIndexMut_List_Type.t_list);
    goto BB1
  }
  BB1 {
    _9 <- { _9 with current = v };
    assume { Resolve0.resolve _9 };
    assume { Resolve1.resolve l };
    _0 <- ();
    return _0
  }
  
end
module ListIndexMut_F_Interface
  val f [#"../list_index_mut.rs" 67 0 67 10] (_1 : ()) : ()
end
module ListIndexMut_F
  use prelude.Int
  use prelude.UInt32
  use prelude.UIntSize
  use prelude.Borrow
  use ListIndexMut_List_Type as ListIndexMut_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone ListIndexMut_Impl0_Get as Get0
  clone ListIndexMut_Impl0_Len as Len0
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = ListIndexMut_List_Type.t_list
  clone ListIndexMut_Write_Interface as Write0 with
    function Len0.len = Len0.len,
    function Get0.get = Get0.get
  let rec cfg f [#"../list_index_mut.rs" 67 0 67 10] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var l : ListIndexMut_List_Type.t_list;
  var _6 : ();
  var _7 : borrowed (ListIndexMut_List_Type.t_list);
  var _8 : borrowed (ListIndexMut_List_Type.t_list);
  {
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    l <- ListIndexMut_List_Type.C_List ([#"../list_index_mut.rs" 68 21 68 22] (1 : uint32)) (Core_Option_Option_Type.C_Some (ListIndexMut_List_Type.C_List ([#"../list_index_mut.rs" 68 43 68 45] (10 : uint32)) (Core_Option_Option_Type.C_None)));
    goto BB4
  }
  BB4 {
    _8 <- Borrow.borrow_mut l;
    l <-  ^ _8;
    _7 <- Borrow.borrow_mut ( * _8);
    _8 <- { _8 with current = ( ^ _7) };
    _6 <- ([#"../list_index_mut.rs" 69 4 69 23] Write0.write _7 ([#"../list_index_mut.rs" 69 18 69 19] (0 : usize)) ([#"../list_index_mut.rs" 69 21 69 22] (2 : uint32)));
    _7 <- any borrowed (ListIndexMut_List_Type.t_list);
    goto BB5
  }
  BB5 {
    assume { Resolve0.resolve _8 };
    _0 <- ();
    goto BB6
  }
  BB6 {
    return _0
  }
  
end
