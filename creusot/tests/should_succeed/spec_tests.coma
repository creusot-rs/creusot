module M_spec_tests__test_specs [#"spec_tests.rs" 20 0 20 19]
  let%span sspec_tests0 = "spec_tests.rs" 18 10 18 22
  let%span sspec_tests1 = "spec_tests.rs" 19 10 19 41
  
  use prelude.prelude.Intrinsic
  
  type t_T'0  =
    | C_A'0
    | C_B'0
  
  use prelude.prelude.UInt32
  
  type t_S'0  =
    { t_S__0'0: uint32; t_S__1'0: bool }
  
  meta "compute_max_steps" 1000000
  
  let rec test_specs'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> {[@expl:test_specs ensures #0] [%#sspec_tests0] C_A'0 = C_B'0}
      {[@expl:test_specs ensures #1] [%#sspec_tests1] { t_S__0'0 = (0 : uint32); t_S__1'0 = true }
      = { t_S__0'0 = (1 : uint32); t_S__1'0 = false }}
      (! return' {result}) ]
    
end
