
module C02_Simple_Stub
  function simple [#"../02.rs" 9 0 9 19] (_1' : ()) : bool
end
module C02_Simple_Interface
  function simple [#"../02.rs" 9 0 9 19] (_1' : ()) : bool
end
module C02_Simple
  function simple [#"../02.rs" 9 0 9 19] (_1' : ()) : bool =
    [#"../02.rs" 10 4 10 8] true
  val simple [#"../02.rs" 9 0 9 19] (_1' : ()) : bool
    ensures { result = simple _1' }
    
end
module C02_UsesSimple_Stub
  function uses_simple [#"../02.rs" 14 0 14 24] (_1' : ()) : bool
end
module C02_UsesSimple_Interface
  function uses_simple [#"../02.rs" 14 0 14 24] (_1' : ()) : bool
end
module C02_UsesSimple
  clone C02_Simple_Stub as Simple0
  function uses_simple [#"../02.rs" 14 0 14 24] (_1' : ()) : bool =
    [#"../02.rs" 15 4 15 12] Simple0.simple ()
  val uses_simple [#"../02.rs" 14 0 14 24] (_1' : ()) : bool
    ensures { result = uses_simple _1' }
    
end
module C02_Program_Interface
  clone C02_Simple_Stub as Simple0
  clone C02_UsesSimple_Stub as UsesSimple0
  val program [@cfg:stackify] [#"../02.rs" 20 0 20 16] (_1' : ()) : ()
    requires {[#"../02.rs" 18 11 18 24] UsesSimple0.uses_simple ()}
    ensures { [#"../02.rs" 19 10 19 18] Simple0.simple () }
    
end
module C02_Program
  clone C02_Simple as Simple0
  clone C02_UsesSimple as UsesSimple0 with
    function Simple0.simple = Simple0.simple
  let rec cfg program [@cfg:stackify] [#"../02.rs" 20 0 20 16] (_1' : ()) : ()
    requires {[#"../02.rs" 18 11 18 24] UsesSimple0.uses_simple ()}
    ensures { [#"../02.rs" 19 10 19 18] Simple0.simple () }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
