module M_02__program [#"02.rs" 20 0 20 16]
  let%span s020 = "02.rs" 18 11 18 24
  let%span s021 = "02.rs" 19 10 19 18
  let%span s022 = "02.rs" 15 4 15 12
  let%span s023 = "02.rs" 10 4 10 8
  
  function simple'0 [#"02.rs" 9 0 9 19] (_1 : ()) : bool =
    [%#s023] true
  
  function uses_simple'0 [#"02.rs" 14 0 14 24] (_1 : ()) : bool =
    [%#s022] simple'0 ()
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec program (_1:()) (return'  (ret:()))= {[%#s020] uses_simple'0 ()}
    (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> {[@expl:postcondition] [%#s021] simple'0 ()} (! return' {result}) ]
    
end
