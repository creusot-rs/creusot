
module C04_F
  use prelude.UInt32
  use prelude.Int
  function a0 [#"../04.rs" 6 0 6 20] (x : uint32) : bool =
    [#"../04.rs" 7 4 7 12] x > (0 : uint32)
  val a0 [#"../04.rs" 6 0 6 20] (x : uint32) : bool
    ensures { result = a0 x }
    
  function b0 [#"../04.rs" 11 0 11 20] (x : uint32) : bool =
    [#"../04.rs" 12 4 12 21] x > (10 : uint32) /\ a0 x
  val b0 [#"../04.rs" 11 0 11 20] (x : uint32) : bool
    ensures { result = b0 x }
    
  function c0 [#"../04.rs" 16 0 16 20] (x : uint32) : bool =
    [#"../04.rs" 17 4 17 21] x < (50 : uint32) /\ b0 x
  val c0 [#"../04.rs" 16 0 16 20] (x : uint32) : bool
    ensures { result = c0 x }
    
  let rec cfg f [#"../04.rs" 21 0 21 16] [@cfg:stackify] [@cfg:subregion_analysis] (x : uint32) : ()
    requires {[#"../04.rs" 20 11 20 15] c0 x}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    [#"../04.rs" 21 17 21 19] _0 <- ([#"../04.rs" 21 17 21 19] ());
    return _0
  }
  
end
