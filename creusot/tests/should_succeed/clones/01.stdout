module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
end
module C01_Func1_Interface
  val func1 [@cfg:stackify] () : ()
end
module C01_Func1
  let rec cfg func1 [@cfg:stackify] () : () = 
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module C01_Func2_Interface
  val func2 [@cfg:stackify] () : ()
end
module C01_Func2
  clone C01_Func1_Interface as Func10
  let rec cfg func2 [@cfg:stackify] () : () = 
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- Func10.func1 ();
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module C01_Func3_Interface
  val func3 [@cfg:stackify] () : ()
end
module C01_Func3
  clone C01_Func2_Interface as Func20
  let rec cfg func3 [@cfg:stackify] () : () = 
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- Func20.func2 ();
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
