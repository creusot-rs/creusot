
module IncMax3_IncMax3
  use prelude.Borrow
  use prelude.UInt32
  predicate resolve1 (self : borrowed uint32) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve1 (self : borrowed uint32) : bool
    ensures { result = resolve1 self }
    
  predicate resolve0 (self : borrowed (borrowed uint32)) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve0 (self : borrowed (borrowed uint32)) : bool
    ensures { result = resolve0 self }
    
  use prelude.Int
  val swap0 [#"../inc_max_3.rs" 6 0 6 67] (mma : borrowed (borrowed uint32)) (mmb : borrowed (borrowed uint32)) : ()
    ensures { [#"../inc_max_3.rs" 5 10 5 38]  ^ mma =  * mmb /\  ^ mmb =  * mma }
    
  let rec cfg inc_max_3 [#"../inc_max_3.rs" 12 0 12 79] [@cfg:stackify] [@cfg:subregion_analysis] (ma : borrowed uint32) (mb : borrowed uint32) (mc : borrowed uint32) : ()
    requires {[#"../inc_max_3.rs" 10 11 10 76]  * ma <= (1000000 : uint32) /\  * mb <= (1000000 : uint32) /\  * mc <= (1000000 : uint32)}
    ensures { [#"../inc_max_3.rs" 11 10 11 48]  ^ ma <>  ^ mb /\  ^ mb <>  ^ mc /\  ^ mc <>  ^ ma }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var ma : borrowed uint32 = ma;
  var mb : borrowed uint32 = mb;
  var mc : borrowed uint32 = mc;
  var _6 : ();
  var _10 : ();
  var _11 : borrowed (borrowed uint32);
  var _12 : borrowed (borrowed uint32);
  var _13 : borrowed (borrowed uint32);
  var _14 : borrowed (borrowed uint32);
  var _15 : ();
  var _19 : ();
  var _20 : borrowed (borrowed uint32);
  var _21 : borrowed (borrowed uint32);
  var _22 : borrowed (borrowed uint32);
  var _23 : borrowed (borrowed uint32);
  var _24 : ();
  var _28 : ();
  var _29 : borrowed (borrowed uint32);
  var _30 : borrowed (borrowed uint32);
  var _31 : borrowed (borrowed uint32);
  var _32 : borrowed (borrowed uint32);
  {
    goto BB0
  }
  BB0 {
    switch ([#"../inc_max_3.rs" 13 7 13 16] ([#"../inc_max_3.rs" 13 7 13 10]  * ma) < ([#"../inc_max_3.rs" 13 13 13 16]  * mb))
      | False -> goto BB3
      | True -> goto BB1
      end
  }
  BB1 {
    [#"../inc_max_3.rs" 14 13 14 20] _12 <- Borrow.borrow_mut ma;
    [#"../inc_max_3.rs" 14 13 14 20] ma <-  ^ _12;
    [#"../inc_max_3.rs" 14 13 14 20] _11 <- Borrow.borrow_mut ( * _12);
    [#"../inc_max_3.rs" 14 13 14 20] _12 <- { _12 with current =  ^ _11 };
    [#"../inc_max_3.rs" 14 22 14 29] _14 <- Borrow.borrow_mut mb;
    [#"../inc_max_3.rs" 14 22 14 29] mb <-  ^ _14;
    [#"../inc_max_3.rs" 14 22 14 29] _13 <- Borrow.borrow_mut ( * _14);
    [#"../inc_max_3.rs" 14 22 14 29] _14 <- { _14 with current =  ^ _13 };
    [#"../inc_max_3.rs" 14 8 14 30] _10 <- ([#"../inc_max_3.rs" 14 8 14 30] swap0 _11 _13);
    _11 <- any borrowed (borrowed uint32);
    _13 <- any borrowed (borrowed uint32);
    goto BB2
  }
  BB2 {
    assume { resolve0 _14 };
    assume { resolve0 _12 };
    [#"../inc_max_3.rs" 13 17 15 5] _6 <- ([#"../inc_max_3.rs" 13 17 15 5] ());
    goto BB4
  }
  BB3 {
    [#"../inc_max_3.rs" 15 5 15 5] _6 <- ([#"../inc_max_3.rs" 15 5 15 5] ());
    goto BB4
  }
  BB4 {
    switch ([#"../inc_max_3.rs" 16 7 16 16] ([#"../inc_max_3.rs" 16 7 16 10]  * mb) < ([#"../inc_max_3.rs" 16 13 16 16]  * mc))
      | False -> goto BB7
      | True -> goto BB5
      end
  }
  BB5 {
    [#"../inc_max_3.rs" 17 13 17 20] _21 <- Borrow.borrow_mut mb;
    [#"../inc_max_3.rs" 17 13 17 20] mb <-  ^ _21;
    [#"../inc_max_3.rs" 17 13 17 20] _20 <- Borrow.borrow_mut ( * _21);
    [#"../inc_max_3.rs" 17 13 17 20] _21 <- { _21 with current =  ^ _20 };
    [#"../inc_max_3.rs" 17 22 17 29] _23 <- Borrow.borrow_mut mc;
    [#"../inc_max_3.rs" 17 22 17 29] mc <-  ^ _23;
    [#"../inc_max_3.rs" 17 22 17 29] _22 <- Borrow.borrow_mut ( * _23);
    [#"../inc_max_3.rs" 17 22 17 29] _23 <- { _23 with current =  ^ _22 };
    [#"../inc_max_3.rs" 17 8 17 30] _19 <- ([#"../inc_max_3.rs" 17 8 17 30] swap0 _20 _22);
    _20 <- any borrowed (borrowed uint32);
    _22 <- any borrowed (borrowed uint32);
    goto BB6
  }
  BB6 {
    assume { resolve0 _23 };
    assume { resolve0 _21 };
    assume { resolve1 mc };
    [#"../inc_max_3.rs" 16 17 18 5] _15 <- ([#"../inc_max_3.rs" 16 17 18 5] ());
    goto BB8
  }
  BB7 {
    assume { resolve1 mc };
    [#"../inc_max_3.rs" 18 5 18 5] _15 <- ([#"../inc_max_3.rs" 18 5 18 5] ());
    goto BB8
  }
  BB8 {
    switch ([#"../inc_max_3.rs" 19 7 19 16] ([#"../inc_max_3.rs" 19 7 19 10]  * ma) < ([#"../inc_max_3.rs" 19 13 19 16]  * mb))
      | False -> goto BB11
      | True -> goto BB9
      end
  }
  BB9 {
    [#"../inc_max_3.rs" 20 13 20 20] _30 <- Borrow.borrow_mut ma;
    [#"../inc_max_3.rs" 20 13 20 20] ma <-  ^ _30;
    [#"../inc_max_3.rs" 20 13 20 20] _29 <- Borrow.borrow_mut ( * _30);
    [#"../inc_max_3.rs" 20 13 20 20] _30 <- { _30 with current =  ^ _29 };
    [#"../inc_max_3.rs" 20 22 20 29] _32 <- Borrow.borrow_mut mb;
    [#"../inc_max_3.rs" 20 22 20 29] mb <-  ^ _32;
    [#"../inc_max_3.rs" 20 22 20 29] _31 <- Borrow.borrow_mut ( * _32);
    [#"../inc_max_3.rs" 20 22 20 29] _32 <- { _32 with current =  ^ _31 };
    [#"../inc_max_3.rs" 20 8 20 30] _28 <- ([#"../inc_max_3.rs" 20 8 20 30] swap0 _29 _31);
    _29 <- any borrowed (borrowed uint32);
    _31 <- any borrowed (borrowed uint32);
    goto BB10
  }
  BB10 {
    assume { resolve0 _32 };
    assume { resolve0 _30 };
    [#"../inc_max_3.rs" 19 17 21 5] _24 <- ([#"../inc_max_3.rs" 19 17 21 5] ());
    goto BB12
  }
  BB11 {
    [#"../inc_max_3.rs" 21 5 21 5] _24 <- ([#"../inc_max_3.rs" 21 5 21 5] ());
    goto BB12
  }
  BB12 {
    [#"../inc_max_3.rs" 22 4 22 12] ma <- { ma with current = ([#"../inc_max_3.rs" 22 4 22 12]  * ma + ([#"../inc_max_3.rs" 22 11 22 12] [#"../inc_max_3.rs" 22 11 22 12] (2 : uint32))) };
    assume { resolve1 ma };
    [#"../inc_max_3.rs" 23 4 23 12] mb <- { mb with current = ([#"../inc_max_3.rs" 23 4 23 12]  * mb + ([#"../inc_max_3.rs" 23 11 23 12] [#"../inc_max_3.rs" 23 11 23 12] (1 : uint32))) };
    assume { resolve1 mb };
    [#"../inc_max_3.rs" 12 80 24 1] _0 <- ([#"../inc_max_3.rs" 12 80 24 1] ());
    return _0
  }
  
end
module IncMax3_TestIncMax3
  use prelude.Borrow
  use prelude.UInt32
  predicate resolve0 (self : borrowed uint32) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve0 (self : borrowed uint32) : bool
    ensures { result = resolve0 self }
    
  use prelude.Int
  val inc_max_30 [#"../inc_max_3.rs" 12 0 12 79] (ma : borrowed uint32) (mb : borrowed uint32) (mc : borrowed uint32) : ()
    requires {[#"../inc_max_3.rs" 10 11 10 76]  * ma <= (1000000 : uint32) /\  * mb <= (1000000 : uint32) /\  * mc <= (1000000 : uint32)}
    ensures { [#"../inc_max_3.rs" 11 10 11 48]  ^ ma <>  ^ mb /\  ^ mb <>  ^ mc /\  ^ mc <>  ^ ma }
    
  let rec cfg test_inc_max_3 [#"../inc_max_3.rs" 27 0 27 57] [@cfg:stackify] [@cfg:subregion_analysis] (a : uint32) (b : uint32) (c : uint32) : ()
    requires {[#"../inc_max_3.rs" 26 11 26 70] a <= (1000000 : uint32) /\ b <= (1000000 : uint32) /\ c <= (1000000 : uint32)}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var a : uint32 = a;
  var b : uint32 = b;
  var c : uint32 = c;
  var _5 : ();
  var _6 : borrowed uint32;
  var _7 : borrowed uint32;
  var _8 : borrowed uint32;
  var _9 : borrowed uint32;
  var _10 : borrowed uint32;
  var _11 : borrowed uint32;
  var _14 : bool;
  var _15 : bool;
  {
    goto BB0
  }
  BB0 {
    [#"../inc_max_3.rs" 28 14 28 20] _7 <- Borrow.borrow_mut a;
    [#"../inc_max_3.rs" 28 14 28 20] a <-  ^ _7;
    [#"../inc_max_3.rs" 28 14 28 20] _6 <- Borrow.borrow_mut ( * _7);
    [#"../inc_max_3.rs" 28 14 28 20] _7 <- { _7 with current =  ^ _6 };
    [#"../inc_max_3.rs" 28 22 28 28] _9 <- Borrow.borrow_mut b;
    [#"../inc_max_3.rs" 28 22 28 28] b <-  ^ _9;
    [#"../inc_max_3.rs" 28 22 28 28] _8 <- Borrow.borrow_mut ( * _9);
    [#"../inc_max_3.rs" 28 22 28 28] _9 <- { _9 with current =  ^ _8 };
    [#"../inc_max_3.rs" 28 30 28 36] _11 <- Borrow.borrow_mut c;
    [#"../inc_max_3.rs" 28 30 28 36] c <-  ^ _11;
    [#"../inc_max_3.rs" 28 30 28 36] _10 <- Borrow.borrow_mut ( * _11);
    [#"../inc_max_3.rs" 28 30 28 36] _11 <- { _11 with current =  ^ _10 };
    [#"../inc_max_3.rs" 28 4 28 37] _5 <- ([#"../inc_max_3.rs" 28 4 28 37] inc_max_30 _6 _8 _10);
    _6 <- any borrowed uint32;
    _8 <- any borrowed uint32;
    _10 <- any borrowed uint32;
    goto BB1
  }
  BB1 {
    assume { resolve0 _11 };
    assume { resolve0 _9 };
    assume { resolve0 _7 };
    switch ([#"../inc_max_3.rs" 29 12 29 18] ([#"../inc_max_3.rs" 29 12 29 13] a) <> ([#"../inc_max_3.rs" 29 17 29 18] b))
      | False -> goto BB5
      | True -> goto BB6
      end
  }
  BB2 {
    [#"../inc_max_3.rs" 29 12 29 38] _14 <- ([#"../inc_max_3.rs" 29 12 29 38] [#"../inc_max_3.rs" 29 12 29 38] false);
    goto BB4
  }
  BB3 {
    [#"../inc_max_3.rs" 29 12 29 38] _14 <- ([#"../inc_max_3.rs" 29 32 29 38] ([#"../inc_max_3.rs" 29 32 29 33] c) <> ([#"../inc_max_3.rs" 29 37 29 38] a));
    goto BB4
  }
  BB4 {
    switch ([#"../inc_max_3.rs" 29 4 29 39] not _14)
      | False -> goto BB9
      | True -> goto BB8
      end
  }
  BB5 {
    [#"../inc_max_3.rs" 29 12 29 28] _15 <- ([#"../inc_max_3.rs" 29 12 29 28] [#"../inc_max_3.rs" 29 12 29 28] false);
    goto BB7
  }
  BB6 {
    [#"../inc_max_3.rs" 29 12 29 28] _15 <- ([#"../inc_max_3.rs" 29 22 29 28] ([#"../inc_max_3.rs" 29 22 29 23] b) <> ([#"../inc_max_3.rs" 29 27 29 28] c));
    goto BB7
  }
  BB7 {
    switch (_15)
      | False -> goto BB2
      | True -> goto BB3
      end
  }
  BB8 {
    assert { [#"../inc_max_3.rs" 29 4 29 39] false };
    absurd
  }
  BB9 {
    [#"../inc_max_3.rs" 27 58 30 1] _0 <- ([#"../inc_max_3.rs" 27 58 30 1] ());
    return _0
  }
  
end
