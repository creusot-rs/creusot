
module UnusedInLoop_UnusedInLoop
  use prelude.Intrinsic
  use prelude.UInt32
  use prelude.Int
  let rec unused_in_loop (b:bool) (return'  (ret:uint32))= (! bb0
    [ bb0 = s0 [ s0 =  [ &x <- [#"../unused_in_loop.rs" 6 12 6 14] (10 : uint32) ] s1 | s1 = bb1 ] 
    | bb1 = bb1
      [ bb1 = {[@expl:loop invariant] [#"../unused_in_loop.rs" 7 16 7 20] true}
        (! s0) [ s0 = bb2 ] 
        [ bb2 = s0 [ s0 = any [ br0 -> {b = false} (! bb4) | br1 -> {b} (! bb3) ]  ]  | bb4 = s0 [ s0 = bb1 ]  ]
         ]
      
    | bb3 = s0 [ s0 =  [ &_0 <- x ] s1 | s1 = return' {_0} ]  ]
    ) [ & _0 : uint32 = any_l () : uint32 | & b : bool = b | & x : uint32 = any_l () : uint32 ] 
    [ return' (result:uint32)-> {[@expl:postcondition] [#"../unused_in_loop.rs" 4 10 4 25] result = (10 : uint32)}
      (! return' {result}) ]
    
end
