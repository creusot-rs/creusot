<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.mlcfg"/>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="6"><result status="valid" time="0.000000" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="6"><result status="valid" time="0.020000" steps="313"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="remainder by zero" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="39"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="233"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="323"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="126721"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.255995" steps="541302"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="136"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="138"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="140"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="507"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="106"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="127"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.175685" steps="556556"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.283044" steps="34967"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="136499"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.271976" steps="30686"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.030000" steps="404"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.173042" steps="30504"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="add&#39;vc.19.0" expl="assertion" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="add&#39;vc.19.0.0" expl="VC for add" proved="true">
    <proof prover="6"><result status="valid" time="0.010000" steps="383"/></proof>
    </goal>
    <goal name="add&#39;vc.19.0.1" expl="VC for add" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.19.0.1.0" expl="VC for add" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="add&#39;vc.19.0.1.0.0" expl="VC for add" proved="true">
      <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="1.164475" steps="32622"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.19.0.2" expl="VC for add" proved="true">
    <proof prover="6"><result status="valid" time="0.375301" steps="10735"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.20" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="300"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="235"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.030000" steps="168"/></proof>
  </goal>
  <goal name="add&#39;vc.23" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="add&#39;vc.23.0" expl="assertion" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="add&#39;vc.23.0.0" expl="VC for add" proved="true">
    <proof prover="6"><result status="valid" time="0.020000" steps="172"/></proof>
    </goal>
    <goal name="add&#39;vc.23.0.1" expl="VC for add" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.23.0.1.0" expl="VC for add" proved="true">
     <proof prover="6" timelimit="5" memlimit="2000"><result status="valid" time="0.320998" steps="7334"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.23.0.2" expl="VC for add" proved="true">
    <proof prover="1"><result status="valid" time="0.344391" steps="36807"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.092059" steps="375709"/></proof>
  </goal>
  <goal name="add&#39;vc.25" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.25.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.842436" steps="97286"/></proof>
   </goal>
   <goal name="add&#39;vc.25.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.435345" steps="8162"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="6"><result status="valid" time="0.256900" steps="5547"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="22"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="112361"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="43"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="44"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="22"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.110000" steps="16957"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="46"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="78"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="71"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="104"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="106"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.199073" steps="571134"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="253"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="310"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="65674"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="97"/></proof>
  </goal>
  <goal name="resize&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.053083" steps="959"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.056834" steps="969"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.277875" steps="33766"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="125639"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.072294" steps="1195"/></proof>
  </goal>
  <goal name="resize&#39;vc.23" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="124"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.153650" steps="4331"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="275"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="145"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="122"/></proof>
  </goal>
  <goal name="resize&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="288"/></proof>
  </goal>
  <goal name="resize&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="79"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="69422"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="129"/></proof>
  </goal>
  <goal name="resize&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="89"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="68"/></proof>
  </goal>
  <goal name="resize&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="127198"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="6"><result status="valid" time="0.020000" steps="101"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl0" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
