<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.mlcfg"/>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="0"><result status="valid" time="0.003188" steps="7"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="0"><result status="valid" time="0.018378" steps="229"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.010269" steps="16"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.012628" steps="20"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.016974" steps="22"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.017248" steps="26"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="remainder by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.014750" steps="53"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.013186" steps="34"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.025538" steps="214"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.027429" steps="385"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017201" steps="75"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.018666" steps="77"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.019385" steps="94"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016616" steps="97"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.117533" steps="128002"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.024731" steps="166"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.020319" steps="170"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.024924" steps="175"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.037042" steps="766"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.022986" steps="171"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.027700" steps="153"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020044" steps="154"/></proof>
  </goal>
  <goal name="add&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024511" steps="154"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020288" steps="157"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.025039" steps="178"/></proof>
  </goal>
  <goal name="add&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.014019" steps="182"/></proof>
  </goal>
  <goal name="add&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.022716" steps="182"/></proof>
  </goal>
  <goal name="add&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.046695" steps="140146"/></proof>
  </goal>
  <goal name="add&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.168621" steps="41174"/></proof>
  </goal>
  <goal name="add&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.224426" steps="29055"/></proof>
  </goal>
  <goal name="add&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="328955"/></proof>
  </goal>
  <goal name="add&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.239705" steps="29063"/></proof>
  </goal>
  <goal name="add&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.074204" steps="332559"/></proof>
  </goal>
  <goal name="add&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.027948" steps="155"/></proof>
  </goal>
  <goal name="add&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.021141" steps="159"/></proof>
  </goal>
  <goal name="add&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.015711" steps="134"/></proof>
  </goal>
  <goal name="add&#39;vc.34" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.018316" steps="136"/></proof>
  </goal>
  <goal name="add&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.023510" steps="168"/></proof>
  </goal>
  <goal name="add&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024709" steps="168"/></proof>
  </goal>
  <goal name="add&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.027712" steps="172"/></proof>
  </goal>
  <goal name="add&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024983" steps="174"/></proof>
  </goal>
  <goal name="add&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.024942" steps="176"/></proof>
  </goal>
  <goal name="add&#39;vc.40" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="add&#39;vc.40.0" expl="assertion" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="add&#39;vc.40.0.0" expl="VC for add" proved="true">
    <proof prover="0"><result status="valid" time="0.034509" steps="428"/></proof>
    </goal>
    <goal name="add&#39;vc.40.0.1" expl="VC for add" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.40.0.1.0" expl="VC for add" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="add&#39;vc.40.0.1.0.0" expl="VC for add" proved="true">
      <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.702853" steps="15709"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.40.0.2" expl="VC for add" proved="true">
    <proof prover="1"><result status="valid" time="0.211758" steps="47291"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.41" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.031341" steps="310"/></proof>
  </goal>
  <goal name="add&#39;vc.42" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.024982" steps="248"/></proof>
  </goal>
  <goal name="add&#39;vc.43" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.022584" steps="187"/></proof>
  </goal>
  <goal name="add&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.013533" steps="86"/></proof>
  </goal>
  <goal name="add&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.014065" steps="88"/></proof>
  </goal>
  <goal name="add&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.021237" steps="124"/></proof>
  </goal>
  <goal name="add&#39;vc.47" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.014286" steps="125"/></proof>
  </goal>
  <goal name="add&#39;vc.48" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020933" steps="128"/></proof>
  </goal>
  <goal name="add&#39;vc.49" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017076" steps="129"/></proof>
  </goal>
  <goal name="add&#39;vc.50" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="add&#39;vc.50.0" expl="assertion" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="add&#39;vc.50.0.0" expl="VC for add" proved="true">
    <proof prover="0"><result status="valid" time="0.021310" steps="241"/></proof>
    </goal>
    <goal name="add&#39;vc.50.0.1" expl="VC for add" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.50.0.1.0" expl="VC for add" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="add&#39;vc.50.0.1.0.0" expl="VC for add" proved="true">
      <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="1.832314" steps="28708"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.50.0.2" expl="VC for add" proved="true">
    <proof prover="0"><result status="valid" time="0.130009" steps="3528"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.082778" steps="347027"/></proof>
  </goal>
  <goal name="add&#39;vc.52" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.52.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.52.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.52.0.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="add&#39;vc.52.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="add&#39;vc.52.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="inline_goal" proved="true" >
        <goal name="add&#39;vc.52.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="add&#39;vc.52.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.381826" steps="10218"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.52.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.338887" steps="7427"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013241" steps="12"/></proof>
  </goal>
  <goal name="get&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.013186" steps="15"/></proof>
  </goal>
  <goal name="get&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010216" steps="20"/></proof>
  </goal>
  <goal name="get&#39;vc.3" expl="remainder by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.010795" steps="66"/></proof>
  </goal>
  <goal name="get&#39;vc.4" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.013572" steps="24"/></proof>
  </goal>
  <goal name="get&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.019968" steps="174"/></proof>
  </goal>
  <goal name="get&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.010112" steps="26"/></proof>
  </goal>
  <goal name="get&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015715" steps="194"/></proof>
  </goal>
  <goal name="get&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015344" steps="48"/></proof>
  </goal>
  <goal name="get&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.012285" steps="49"/></proof>
  </goal>
  <goal name="get&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.010291" steps="34"/></proof>
  </goal>
  <goal name="get&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.041283" steps="669"/></proof>
  </goal>
  <goal name="get&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.013410" steps="57"/></proof>
  </goal>
  <goal name="get&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.013031" steps="60"/></proof>
  </goal>
  <goal name="get&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013695" steps="52"/></proof>
  </goal>
  <goal name="get&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013217" steps="62"/></proof>
  </goal>
  <goal name="get&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020245" steps="63"/></proof>
  </goal>
  <goal name="get&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.013687" steps="66"/></proof>
  </goal>
  <goal name="get&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.015150" steps="69"/></proof>
  </goal>
  <goal name="get&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.023097" steps="284"/></proof>
  </goal>
  <goal name="get&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.015285" steps="64"/></proof>
  </goal>
  <goal name="get&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016993" steps="60"/></proof>
  </goal>
  <goal name="get&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017095" steps="66"/></proof>
  </goal>
  <goal name="get&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.025306" steps="53"/></proof>
  </goal>
  <goal name="get&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017353" steps="42"/></proof>
  </goal>
  <goal name="get&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.204543" steps="22677"/></proof>
  </goal>
  <goal name="get&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.016676" steps="55"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.014791" steps="14"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010382" steps="18"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.016374" steps="26"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.018384" steps="35"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="108124"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.014874" steps="49"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.015282" steps="48"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.017212" steps="28"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.014398" steps="36"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.110000" steps="17500"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.013090" steps="48"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013458" steps="48"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016739" steps="65"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016512" steps="67"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.021227" steps="73"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="119856"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010714" steps="76"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017459" steps="72"/></proof>
  </goal>
  <goal name="resize&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.018425" steps="73"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015787" steps="91"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.022181" steps="93"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.022763" steps="95"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.013220" steps="97"/></proof>
  </goal>
  <goal name="resize&#39;vc.23" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.017138" steps="90"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.081917" steps="117676"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.013610" steps="105"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.065109" steps="1073"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.038125" steps="530"/></proof>
  </goal>
  <goal name="resize&#39;vc.28" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.041691" steps="665"/></proof>
  </goal>
  <goal name="resize&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.018371" steps="115"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020658" steps="119"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017199" steps="122"/></proof>
  </goal>
  <goal name="resize&#39;vc.32" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="59018"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017111" steps="127"/></proof>
  </goal>
  <goal name="resize&#39;vc.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.016609" steps="127"/></proof>
  </goal>
  <goal name="resize&#39;vc.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.016428" steps="127"/></proof>
  </goal>
  <goal name="resize&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020922" steps="128"/></proof>
  </goal>
  <goal name="resize&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.009161" steps="132"/></proof>
  </goal>
  <goal name="resize&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.059036" steps="959"/></proof>
  </goal>
  <goal name="resize&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.051048" steps="959"/></proof>
  </goal>
  <goal name="resize&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.133882" steps="35166"/></proof>
  </goal>
  <goal name="resize&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="122836"/></proof>
  </goal>
  <goal name="resize&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.055840" steps="903"/></proof>
  </goal>
  <goal name="resize&#39;vc.43" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.019523" steps="115"/></proof>
  </goal>
  <goal name="resize&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.012683" steps="94"/></proof>
  </goal>
  <goal name="resize&#39;vc.45" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.212084" steps="4052"/></proof>
  </goal>
  <goal name="resize&#39;vc.46" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.024669" steps="231"/></proof>
  </goal>
  <goal name="resize&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.220708" steps="25509"/></proof>
  </goal>
  <goal name="resize&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.015604" steps="120"/></proof>
  </goal>
  <goal name="resize&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.033317" steps="408"/></proof>
  </goal>
  <goal name="resize&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.016444" steps="99"/></proof>
  </goal>
  <goal name="resize&#39;vc.51" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="34309"/></proof>
  </goal>
  <goal name="resize&#39;vc.52" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.021100" steps="124"/></proof>
  </goal>
  <goal name="resize&#39;vc.53" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.018940" steps="103"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="2"><result status="valid" time="0.104287" steps="258233"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl0" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.010928" steps="1"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.013528" steps="3"/></proof>
 </goal>
</theory>
</file>
</why3session>
