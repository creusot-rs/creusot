
module HomeSigRef_Test_Type
  use prelude.Int
  use prelude.UInt32
  type t_test  =
    | C_Test uint32
    
  let function test_x (self : t_test) : uint32 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Test a -> a
      end
end
module HomeSigRef_Test_Stub
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test [#"../home_sig_ref.rs" 10 0 10 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
end
module HomeSigRef_Test_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test [#"../home_sig_ref.rs" 10 0 10 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
  val test [#"../home_sig_ref.rs" 10 0 10 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test arg }
    
end
module HomeSigRef_Test
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test [#"../home_sig_ref.rs" 10 0 10 31] (arg : HomeSigRef_Test_Type.t_test) : uint32 =
    [#"../home_sig_ref.rs" 9 0 9 22] let HomeSigRef_Test_Type.C_Test x = arg in x
  val test [#"../home_sig_ref.rs" 10 0 10 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test arg }
    
end
module HomeSigRef_Test2_Stub
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test2 [#"../home_sig_ref.rs" 17 0 17 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
end
module HomeSigRef_Test2_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test2 [#"../home_sig_ref.rs" 17 0 17 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
  val test2 [#"../home_sig_ref.rs" 17 0 17 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test2 arg }
    
end
module HomeSigRef_Test2
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  clone HomeSigRef_Test_Stub as Test1
  function test2 [#"../home_sig_ref.rs" 17 0 17 32] (arg : HomeSigRef_Test_Type.t_test) : uint32 =
    [#"../home_sig_ref.rs" 18 4 18 13] Test1.test arg
  val test2 [#"../home_sig_ref.rs" 17 0 17 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test2 arg }
    
end
module HomeSigRef_Test3_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  clone HomeSigRef_Test2_Stub as Test20
  val test3 [#"../home_sig_ref.rs" 22 0 22 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { [#"../home_sig_ref.rs" 21 10 21 30] result = Test20.test2 arg }
    
end
module HomeSigRef_Test3
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  clone HomeSigRef_Test as Test1
  clone HomeSigRef_Test2 as Test20 with
    function Test1.test = Test1.test
  let rec cfg test3 [#"../home_sig_ref.rs" 22 0 22 32] [@cfg:stackify] [@cfg:subregion_analysis] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { [#"../home_sig_ref.rs" 21 10 21 30] result = Test20.test2 arg }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : uint32;
  var arg_1 : HomeSigRef_Test_Type.t_test;
  var _3 : uint32;
  {
    arg_1 <- arg;
    goto BB0
  }
  BB0 {
    _3 <- HomeSigRef_Test_Type.test_x arg_1;
    _0 <- _3;
    return _0
  }
  
end
module HomeSigRef_Test4_Stub
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test4 [#"../home_sig_ref.rs" 28 0 28 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
end
module HomeSigRef_Test4_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test4 [#"../home_sig_ref.rs" 28 0 28 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
  val test4 [#"../home_sig_ref.rs" 28 0 28 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test4 arg }
    
end
module HomeSigRef_Test4
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test4 [#"../home_sig_ref.rs" 28 0 28 31] (arg : HomeSigRef_Test_Type.t_test) : uint32 =
    [#"../home_sig_ref.rs" 29 4 29 9] HomeSigRef_Test_Type.test_x arg
  val test4 [#"../home_sig_ref.rs" 28 0 28 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test4 arg }
    
end
module HomeSigRef_Test5_Stub
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test5 [#"../home_sig_ref.rs" 34 0 34 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
end
module HomeSigRef_Test5_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test5 [#"../home_sig_ref.rs" 34 0 34 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
  val test5 [#"../home_sig_ref.rs" 34 0 34 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test5 arg }
    
end
module HomeSigRef_Test5
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test5 [#"../home_sig_ref.rs" 34 0 34 31] (arg : HomeSigRef_Test_Type.t_test) : uint32 =
    [#"../home_sig_ref.rs" 35 4 35 9] HomeSigRef_Test_Type.test_x arg
  val test5 [#"../home_sig_ref.rs" 34 0 34 31] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test5 arg }
    
end
module HomeSigRef_FakeRef_MakeRef_Stub
  type self
  use prelude.Borrow
  function make_ref [#"../home_sig_ref.rs" 41 4 41 31] (self : self) : self
end
module HomeSigRef_FakeRef_MakeRef_Interface
  type self
  use prelude.Borrow
  function make_ref [#"../home_sig_ref.rs" 41 4 41 31] (self : self) : self
  val make_ref [#"../home_sig_ref.rs" 41 4 41 31] (self : self) : self
    ensures { result = make_ref self }
    
end
module HomeSigRef_FakeRef_MakeRef
  type self
  use prelude.Borrow
  function make_ref [#"../home_sig_ref.rs" 41 4 41 31] (self : self) : self =
    [#"../home_sig_ref.rs" 42 8 42 12] self
  val make_ref [#"../home_sig_ref.rs" 41 4 41 31] (self : self) : self
    ensures { result = make_ref self }
    
end
module HomeSigRef_Test6_Stub
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test6 [#"../home_sig_ref.rs" 50 0 50 30] (arg : HomeSigRef_Test_Type.t_test) : uint32
end
module HomeSigRef_Test6_Interface
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test6 [#"../home_sig_ref.rs" 50 0 50 30] (arg : HomeSigRef_Test_Type.t_test) : uint32
  val test6 [#"../home_sig_ref.rs" 50 0 50 30] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test6 arg }
    
end
module HomeSigRef_Test6
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  clone HomeSigRef_Test4_Stub as Test40
  clone HomeSigRef_FakeRef_MakeRef_Stub as MakeRef0 with
    type self = HomeSigRef_Test_Type.t_test
  function test6 [#"../home_sig_ref.rs" 50 0 50 30] (arg : HomeSigRef_Test_Type.t_test) : uint32 =
    [#"../home_sig_ref.rs" 51 4 51 25] Test40.test4 (MakeRef0.make_ref arg)
  val test6 [#"../home_sig_ref.rs" 50 0 50 30] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test6 arg }
    
end
module HomeSigRef_Test7_Stub
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test7 [#"../home_sig_ref.rs" 56 0 56 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
end
module HomeSigRef_Test7_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test7 [#"../home_sig_ref.rs" 56 0 56 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
  val test7 [#"../home_sig_ref.rs" 56 0 56 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test7 arg }
    
end
module HomeSigRef_Test7
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  clone HomeSigRef_FakeRef_MakeRef_Stub as MakeRef0 with
    type self = uint32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test7 [#"../home_sig_ref.rs" 56 0 56 32] (arg : HomeSigRef_Test_Type.t_test) : uint32 =
    [#"../home_sig_ref.rs" 55 0 55 24] MakeRef0.make_ref (HomeSigRef_Test_Type.test_x arg)
  val test7 [#"../home_sig_ref.rs" 56 0 56 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test7 arg }
    
end
module HomeSigRef_Test8_Stub
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test8 [#"../home_sig_ref.rs" 62 0 62 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
end
module HomeSigRef_Test8_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test8 [#"../home_sig_ref.rs" 62 0 62 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
  val test8 [#"../home_sig_ref.rs" 62 0 62 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test8 arg }
    
end
module HomeSigRef_Test8
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  clone HomeSigRef_FakeRef_MakeRef_Stub as MakeRef0 with
    type self = uint32
  use HomeSigRef_Test_Type as HomeSigRef_Test_Type
  function test8 [#"../home_sig_ref.rs" 62 0 62 32] (arg : HomeSigRef_Test_Type.t_test) : uint32 =
    [#"../home_sig_ref.rs" 61 0 61 22] MakeRef0.make_ref (HomeSigRef_Test_Type.test_x arg)
  val test8 [#"../home_sig_ref.rs" 62 0 62 32] (arg : HomeSigRef_Test_Type.t_test) : uint32
    ensures { result = test8 arg }
    
end
module HomeSigRef_Impl0
  type x
end
