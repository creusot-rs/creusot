
module Deref_Deref1_Stub
  type t
  use prelude.Borrow
  function deref1 [#"../deref.rs" 5 0 5 44] (x : t) : t
end
module Deref_Deref1_Interface
  type t
  use prelude.Borrow
  function deref1 [#"../deref.rs" 5 0 5 44] (x : t) : t
end
module Deref_Deref1
  type t
  use prelude.Borrow
  function deref1 [#"../deref.rs" 5 0 5 44] (x : t) : t =
    [#"../deref.rs" 6 5 6 6] x
  val deref1 [#"../deref.rs" 5 0 5 44] (x : t) : t
    ensures { result = deref1 x }
    
end
module Deref_Deref2_Stub
  type t
  use prelude.Borrow
  function deref2 [#"../deref.rs" 10 0 10 54] (x : t) : t
end
module Deref_Deref2_Interface
  type t
  use prelude.Borrow
  function deref2 [#"../deref.rs" 10 0 10 54] (x : t) : t
end
module Deref_Deref2
  type t
  use prelude.Borrow
  function deref2 [#"../deref.rs" 10 0 10 54] (x : t) : t =
    [#"../deref.rs" 11 7 11 8] x
  val deref2 [#"../deref.rs" 10 0 10 54] (x : t) : t
    ensures { result = deref2 x }
    
end
module Deref_Deref3_Stub
  type t
  function deref3 [#"../deref.rs" 16 0 16 28] (_1' : ()) : t
end
module Deref_Deref3_Interface
  type t
  function deref3 [#"../deref.rs" 16 0 16 28] (_1' : ()) : t
end
module Deref_Deref3
  type t
  function deref3 [#"../deref.rs" 16 0 16 28] (_1' : ()) : t
  val deref3 [#"../deref.rs" 16 0 16 28] (_1' : ()) : t
    ensures { result = deref3 _1' }
    
end
