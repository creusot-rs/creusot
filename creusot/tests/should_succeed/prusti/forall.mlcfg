
module Forall_CheckBool_Stub
  function check_bool [#"../forall.rs" 5 0 5 34] (_1' : bool) : bool
end
module Forall_CheckBool_Interface
  function check_bool [#"../forall.rs" 5 0 5 34] (_1' : bool) : bool
end
module Forall_CheckBool
  function check_bool [#"../forall.rs" 5 0 5 34] (_1' : bool) : bool =
    [#"../forall.rs" 6 4 6 8] true
  val check_bool [#"../forall.rs" 5 0 5 34] (_1' : bool) : bool
    ensures { result = check_bool _1' }
    
end
module Forall_TakeFirstMut_Interface
  clone Forall_CheckBool_Stub as CheckBool0
  val take_first_mut [@cfg:stackify] [#"../forall.rs" 10 0 10 23] (_1' : ()) : ()
    requires {[#"../forall.rs" 9 0 9 72] forall b2 : bool . forall b1 : bool . CheckBool0.check_bool b1 /\ CheckBool0.check_bool b2}
    
end
module Forall_TakeFirstMut
  clone Forall_CheckBool as CheckBool0
  let rec cfg take_first_mut [@cfg:stackify] [#"../forall.rs" 10 0 10 23] (_1' : ()) : ()
    requires {[#"../forall.rs" 9 0 9 72] forall b2 : bool . forall b1 : bool . CheckBool0.check_bool b1 /\ CheckBool0.check_bool b2}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
