module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
end
module Immut_Main_Interface
  val main () : ()
end
module Immut_Main
  use mach.int.Int
  use mach.int.UInt32
  use prelude.Prelude
  let rec cfg main () : () = 
  var _0 : ();
  var a_1 : uint32;
  var b_2 : borrowed uint32;
  var c_3 : uint32;
  {
    goto BB0
  }
  BB0 {
    a_1 <- (10 : uint32);
    b_2 <- borrow_mut a_1;
    a_1 <-  ^ b_2;
    assume { (fun x -> true) a_1 };
    c_3 <-  * b_2;
    assume { (fun x -> true) b_2 };
    assume { (fun x -> true) c_3 };
    _0 <- ();
    return _0
  }
  
end
