<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="collections.coma"/>
<theory name="M_collections__roundtrip_hashmap_into_iter" proved="true">
 <goal name="vc_roundtrip_hashmap_into_iter&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_roundtrip_hashmap_into_iter&#39;0.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.129200" steps="10"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_into_iter&#39;0.1" expl="into_iter requires" proved="true">
  <proof prover="1"><result status="valid" time="0.035639" steps="4442"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_into_iter&#39;0.2" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.042712" steps="5121"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_into_iter&#39;0.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.066291" steps="53853"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_into_iter&#39;0.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.065833" steps="57487"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_into_iter&#39;0.5" expl="roundtrip_hashmap_into_iter ensures" proved="true">
  <proof prover="2"><result status="valid" time="0.602379" steps="1741307"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_collections__roundtrip_hashmap_iter" proved="true">
 <goal name="vc_roundtrip_hashmap_iter&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_roundtrip_hashmap_iter&#39;0.0" expl="iter &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.030483" steps="4693"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter&#39;0.1" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.037823" steps="4746"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter&#39;0.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.219998" steps="428"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter&#39;0.3" expl="roundtrip_hashmap_iter ensures" proved="true">
  <proof prover="2"><result status="valid" time="0.071380" steps="52338"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_collections__roundtrip_hashmap_iter_mut" proved="true">
 <goal name="vc_roundtrip_hashmap_iter_mut&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_roundtrip_hashmap_iter_mut&#39;0.0" expl="iter_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.023498" steps="13"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter_mut&#39;0.1" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.028734" steps="15"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter_mut&#39;0.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.042275" steps="64222"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter_mut&#39;0.3" expl="roundtrip_hashmap_iter_mut ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.108240" steps="61574"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter_mut&#39;0.4" expl="roundtrip_hashmap_iter_mut ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.067087" steps="61872"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashmap_iter_mut&#39;0.5" expl="roundtrip_hashmap_iter_mut ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.141218" steps="56822"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_collections__roundtrip_hashset_into_iter" proved="true">
 <goal name="vc_roundtrip_hashset_into_iter&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_roundtrip_hashset_into_iter&#39;0.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.089828" steps="6"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashset_into_iter&#39;0.1" expl="into_iter requires" proved="true">
  <proof prover="1"><result status="valid" time="0.026540" steps="6426"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashset_into_iter&#39;0.2" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.044601" steps="7102"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashset_into_iter&#39;0.3" expl="roundtrip_hashset_into_iter ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.078467" steps="158"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_collections__roundtrip_hashset_iter" proved="true">
 <goal name="vc_roundtrip_hashset_iter&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_roundtrip_hashset_iter&#39;0.0" expl="iter &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.044858" steps="5"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashset_iter&#39;0.1" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.044196" steps="6689"/></proof>
  </goal>
  <goal name="vc_roundtrip_hashset_iter&#39;0.2" expl="roundtrip_hashset_iter ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.046622" steps="145"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_collections__hashset_intersection" proved="true">
 <goal name="vc_hashset_intersection&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_hashset_intersection&#39;0.0" expl="intersection &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.029898" steps="5"/></proof>
  </goal>
  <goal name="vc_hashset_intersection&#39;0.1" expl="intersection &#39;other&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.027620" steps="8"/></proof>
  </goal>
  <goal name="vc_hashset_intersection&#39;0.2" expl="copied &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.049824" steps="6"/></proof>
  </goal>
  <goal name="vc_hashset_intersection&#39;0.3" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.085638" steps="8"/></proof>
  </goal>
  <goal name="vc_hashset_intersection&#39;0.4" expl="hashset_intersection ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.121701" steps="690"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
