
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module Core_Result_Result_Type
  type t_result 't 'e =
    | C_Ok 't
    | C_Err 'e
    
end
module Result_TestResult
  use prelude.Int32
  use Core_Result_Result_Type as Core_Result_Result_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  predicate invariant14 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant14 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) : bool
    ensures { result = invariant14 self }
    
  predicate inv14 (_x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32))
  val inv14 (_x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) : bool
    ensures { result = inv14 _x }
    
  axiom inv14 : forall x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) . inv14 x = true
  predicate invariant13 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant13 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) : bool
    ensures { result = invariant13 self }
    
  predicate inv13 (_x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32))
  val inv13 (_x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) : bool
    ensures { result = inv13 _x }
    
  axiom inv13 : forall x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) . inv13 x = true
  predicate invariant12 (self : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant12 (self : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) : bool
    ensures { result = invariant12 self }
    
  predicate inv12 (_x : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32)
  val inv12 (_x : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) : bool
    ensures { result = inv12 _x }
    
  axiom inv12 : forall x : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 . inv12 x = true
  use prelude.Borrow
  predicate invariant11 (self : Core_Result_Result_Type.t_result int32 (borrowed int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant11 (self : Core_Result_Result_Type.t_result int32 (borrowed int32)) : bool
    ensures { result = invariant11 self }
    
  predicate inv11 (_x : Core_Result_Result_Type.t_result int32 (borrowed int32))
  val inv11 (_x : Core_Result_Result_Type.t_result int32 (borrowed int32)) : bool
    ensures { result = inv11 _x }
    
  axiom inv11 : forall x : Core_Result_Result_Type.t_result int32 (borrowed int32) . inv11 x = true
  predicate invariant10 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant10 (self : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = invariant10 self }
    
  predicate inv10 (_x : Core_Result_Result_Type.t_result int32 int32)
  val inv10 (_x : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = inv10 _x }
    
  axiom inv10 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv10 x = true
  predicate invariant9 (self : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant9 (self : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) : bool
    ensures { result = invariant9 self }
    
  predicate inv9 (_x : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32))
  val inv9 (_x : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) : bool
    ensures { result = inv9 _x }
    
  axiom inv9 : forall x : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) . inv9 x = true
  predicate invariant8 (self : borrowed int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant8 (self : borrowed int32) : bool
    ensures { result = invariant8 self }
    
  predicate inv8 (_x : borrowed int32)
  val inv8 (_x : borrowed int32) : bool
    ensures { result = inv8 _x }
    
  axiom inv8 : forall x : borrowed int32 . inv8 x = true
  predicate invariant7 (self : borrowed (Core_Result_Result_Type.t_result int32 int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant7 (self : borrowed (Core_Result_Result_Type.t_result int32 int32)) : bool
    ensures { result = invariant7 self }
    
  predicate inv7 (_x : borrowed (Core_Result_Result_Type.t_result int32 int32))
  val inv7 (_x : borrowed (Core_Result_Result_Type.t_result int32 int32)) : bool
    ensures { result = inv7 _x }
    
  axiom inv7 : forall x : borrowed (Core_Result_Result_Type.t_result int32 int32) . inv7 x = true
  predicate invariant6 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant6 (self : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = invariant6 self }
    
  predicate inv6 (_x : Core_Result_Result_Type.t_result int32 int32)
  val inv6 (_x : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = inv6 _x }
    
  axiom inv6 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv6 x = true
  predicate invariant5 (self : int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant5 (self : int32) : bool
    ensures { result = invariant5 self }
    
  predicate inv5 (_x : int32)
  val inv5 (_x : int32) : bool
    ensures { result = inv5 _x }
    
  axiom inv5 : forall x : int32 . inv5 x = true
  predicate invariant4 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant4 (self : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = invariant4 self }
    
  predicate inv4 (_x : Core_Option_Option_Type.t_option int32)
  val inv4 (_x : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : Core_Option_Option_Type.t_option int32 . inv4 x = true
  predicate invariant3 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant3 (self : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = invariant3 self }
    
  predicate inv3 (_x : Core_Option_Option_Type.t_option int32)
  val inv3 (_x : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = inv3 _x }
    
  axiom inv3 : forall x : Core_Option_Option_Type.t_option int32 . inv3 x = true
  predicate invariant2 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : Core_Result_Result_Type.t_result int32 int32)
  val inv2 (_x : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv2 x = true
  predicate invariant1 (self : int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant1 (self : int32) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : int32)
  val inv1 (_x : int32) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : int32 . inv1 x = true
  predicate invariant0 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : Core_Result_Result_Type.t_result int32 int32)
  val inv0 (_x : Core_Result_Result_Type.t_result int32 int32) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv0 x = true
  val unwrap6 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) : Core_Result_Result_Type.t_result int32 int32
    requires {[#"../../../../../creusot-contracts/src/std/option.rs" 29 0 126 1] self <> Core_Option_Option_Type.C_None}
    requires {inv13 self}
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 29 0 126 1] Core_Option_Option_Type.C_Some result = self }
    ensures { inv2 result }
    
  val is_none1 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) : bool
    requires {inv14 self}
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 36 26 36 51] result = (self = Core_Option_Option_Type.C_None) }
    
  val transpose0 (self : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)
    requires {inv12 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 112 16 112 63] self = Core_Result_Result_Type.C_Ok (Core_Option_Option_Type.C_None)
     -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 113 16 113 86] forall t : int32 . inv1 t
     -> self = Core_Result_Result_Type.C_Ok (Core_Option_Option_Type.C_Some t)
     -> result = Core_Option_Option_Type.C_Some (Core_Result_Result_Type.C_Ok t) }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 114 16 114 82] forall e : int32 . inv1 e
     -> self = Core_Result_Result_Type.C_Err e
     -> result = Core_Option_Option_Type.C_Some (Core_Result_Result_Type.C_Err e) }
    ensures { inv13 result }
    
  predicate resolve0 (self : borrowed int32) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve0 (self : borrowed int32) : bool
    ensures { result = resolve0 self }
    
  val cloned1 (self : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) : Core_Result_Result_Type.t_result int32 (borrowed int32)
    requires {inv9 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 104 16 104 95] forall t : borrowed int32 . inv8 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok ( * t) /\ resolve0 t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 105 16 105 76] forall e : borrowed int32 . inv8 e
     -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e }
    ensures { inv11 result }
    
  val cloned0 (self : Core_Result_Result_Type.t_result int32 int32) : Core_Result_Result_Type.t_result int32 int32
    requires {inv6 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 90 16 90 76] forall t : int32 . inv5 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 91 16 91 76] forall e : int32 . inv5 e
     -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e }
    ensures { inv10 result }
    
  val unwrap_err4 (self : Core_Result_Result_Type.t_result int32 (borrowed int32)) : borrowed int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 58 16 58 56] exists e : borrowed int32 . inv8 e /\ self = Core_Result_Result_Type.C_Err e}
    requires {inv11 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Err result = self }
    ensures { inv8 result }
    
  val unwrap5 (self : Core_Result_Result_Type.t_result int32 (borrowed int32)) : int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 46 16 46 55] exists t : int32 . inv1 t /\ self = Core_Result_Result_Type.C_Ok t}
    requires {inv11 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Ok result = self }
    ensures { inv1 result }
    
  val copied1 (self : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) : Core_Result_Result_Type.t_result int32 (borrowed int32)
    requires {inv9 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 98 16 98 95] forall t : borrowed int32 . inv8 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok ( * t) /\ resolve0 t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 99 16 99 76] forall e : borrowed int32 . inv8 e
     -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e }
    ensures { inv11 result }
    
  val unwrap_err3 (self : Core_Result_Result_Type.t_result int32 int32) : int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 58 16 58 56] exists e : int32 . inv5 e /\ self = Core_Result_Result_Type.C_Err e}
    requires {inv10 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Err result = self }
    ensures { inv5 result }
    
  val unwrap4 (self : Core_Result_Result_Type.t_result int32 int32) : int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 46 16 46 55] exists t : int32 . inv1 t /\ self = Core_Result_Result_Type.C_Ok t}
    requires {inv10 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Ok result = self }
    ensures { inv1 result }
    
  val copied0 (self : Core_Result_Result_Type.t_result int32 int32) : Core_Result_Result_Type.t_result int32 int32
    requires {inv6 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 84 16 84 76] forall t : int32 . inv5 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 85 16 85 76] forall e : int32 . inv5 e
     -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e }
    ensures { inv10 result }
    
  val or0 (self : Core_Result_Result_Type.t_result int32 int32) (res : Core_Result_Result_Type.t_result int32 int32) : Core_Result_Result_Type.t_result int32 int32
    requires {inv2 self}
    requires {inv2 res}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 78 16 78 74] forall t : int32 . inv1 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 79 16 79 75] (exists e : int32 . inv1 e /\ self = Core_Result_Result_Type.C_Err e)
     -> result = res }
    ensures { inv2 result }
    
  val and0 (self : Core_Result_Result_Type.t_result int32 int32) (res : Core_Result_Result_Type.t_result int32 int32) : Core_Result_Result_Type.t_result int32 int32
    requires {inv2 self}
    requires {inv2 res}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 74 16 74 74] (exists t : int32 . inv1 t /\ self = Core_Result_Result_Type.C_Ok t)
     -> result = res }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 75 16 75 76] forall e : int32 . inv1 e
     -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e }
    ensures { inv2 result }
    
  use prelude.Int
  predicate is_default0 (self : int32) =
    [#"../../../../../creusot-contracts/src/std/num.rs" 30 28 30 32] self = (0 : int32)
  val is_default0 (self : int32) : bool
    ensures { result = is_default0 self }
    
  val unwrap_or_default0 (self : Core_Result_Result_Type.t_result int32 int32) : int32
    requires {inv2 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 68 16 68 70] forall t : int32 . inv1 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 69 16 69 81] (exists e : int32 . inv1 e /\ self = Core_Result_Result_Type.C_Err e)
     -> is_default0 result }
    ensures { inv1 result }
    
  val unwrap_or0 (self : Core_Result_Result_Type.t_result int32 int32) (default : int32) : int32
    requires {inv2 self}
    requires {inv1 default}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 64 16 64 70] forall t : int32 . inv1 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 65 16 65 79] (exists e : int32 . inv1 e /\ self = Core_Result_Result_Type.C_Err e)
     -> result = default }
    ensures { inv1 result }
    
  val unwrap_err2 (self : Core_Result_Result_Type.t_result int32 int32) : int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 58 16 58 56] exists e : int32 . inv1 e /\ self = Core_Result_Result_Type.C_Err e}
    requires {inv2 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Err result = self }
    ensures { inv1 result }
    
  val unwrap_err1 (self : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) : borrowed int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 58 16 58 56] exists e : borrowed int32 . inv8 e /\ self = Core_Result_Result_Type.C_Err e}
    requires {inv9 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Err result = self }
    ensures { inv8 result }
    
  val unwrap3 (self : Core_Result_Result_Type.t_result int32 int32) : int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 46 16 46 55] exists t : int32 . inv1 t /\ self = Core_Result_Result_Type.C_Ok t}
    requires {inv2 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Ok result = self }
    ensures { inv1 result }
    
  val unwrap2 (self : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) : borrowed int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 46 16 46 55] exists t : borrowed int32 . inv8 t /\ self = Core_Result_Result_Type.C_Ok t}
    requires {inv9 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Ok result = self }
    ensures { inv8 result }
    
  val as_mut0 (self : borrowed (Core_Result_Result_Type.t_result int32 int32)) : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    requires {inv7 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 40 16 43 18] exists t : borrowed int32 . inv8 t /\ ( * self = Core_Result_Result_Type.C_Ok ( * t) /\  ^ self = Core_Result_Result_Type.C_Ok ( ^ t) /\ result = Core_Result_Result_Type.C_Ok t \/ (exists e : borrowed int32 . inv8 e /\  * self = Core_Result_Result_Type.C_Err ( * e) /\  ^ self = Core_Result_Result_Type.C_Err ( ^ e) /\ result = Core_Result_Result_Type.C_Err e)) }
    ensures { inv9 result }
    
  val unwrap_err0 (self : Core_Result_Result_Type.t_result int32 int32) : int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 58 16 58 56] exists e : int32 . inv5 e /\ self = Core_Result_Result_Type.C_Err e}
    requires {inv6 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Err result = self }
    ensures { inv5 result }
    
  val unwrap1 (self : Core_Result_Result_Type.t_result int32 int32) : int32
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 46 16 46 55] exists t : int32 . inv5 t /\ self = Core_Result_Result_Type.C_Ok t}
    requires {inv6 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Ok result = self }
    ensures { inv5 result }
    
  val as_ref0 (self : Core_Result_Result_Type.t_result int32 int32) : Core_Result_Result_Type.t_result int32 int32
    requires {inv0 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 36 16 36 77] forall t : int32 . inv5 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 37 16 37 79] forall e : int32 . inv5 e
     -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e }
    ensures { inv6 result }
    
  val err0 (self : Core_Result_Result_Type.t_result int32 int32) : Core_Option_Option_Type.t_option int32
    requires {inv2 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 32 16 32 75] (exists t : int32 . inv1 t /\ self = Core_Result_Result_Type.C_Ok t)
     -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 33 16 33 77] forall e : int32 . inv1 e
     -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Option_Option_Type.C_Some e }
    ensures { inv3 result }
    
  val is_none0 (self : Core_Option_Option_Type.t_option int32) : bool
    requires {inv4 self}
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 36 26 36 51] result = (self = Core_Option_Option_Type.C_None) }
    
  val unwrap0 (self : Core_Option_Option_Type.t_option int32) : int32
    requires {[#"../../../../../creusot-contracts/src/std/option.rs" 29 0 126 1] self <> Core_Option_Option_Type.C_None}
    requires {inv3 self}
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 29 0 126 1] Core_Option_Option_Type.C_Some result = self }
    ensures { inv1 result }
    
  val ok0 (self : Core_Result_Result_Type.t_result int32 int32) : Core_Option_Option_Type.t_option int32
    requires {inv2 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 28 16 28 76] forall t : int32 . inv1 t
     -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Option_Option_Type.C_Some t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 29 16 29 76] (exists e : int32 . inv1 e /\ self = Core_Result_Result_Type.C_Err e)
     -> result = Core_Option_Option_Type.C_None }
    ensures { inv3 result }
    
  val is_err0 (self : Core_Result_Result_Type.t_result int32 int32) : bool
    requires {inv0 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 25 26 25 64] result = (exists e : int32 . inv1 e /\ self = Core_Result_Result_Type.C_Err e) }
    
  val is_ok0 (self : Core_Result_Result_Type.t_result int32 int32) : bool
    requires {inv0 self}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 22 26 22 63] result = (exists t : int32 . inv1 t /\ self = Core_Result_Result_Type.C_Ok t) }
    
  let rec cfg test_result [#"../result.rs" 3 0 3 20] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var ok : Core_Result_Result_Type.t_result int32 int32;
  var err : Core_Result_Result_Type.t_result int32 int32;
  var _4 : bool;
  var _6 : bool;
  var _10 : bool;
  var _12 : bool;
  var _16 : bool;
  var _17 : int32;
  var _18 : Core_Option_Option_Type.t_option int32;
  var _22 : bool;
  var _24 : Core_Option_Option_Type.t_option int32;
  var _28 : bool;
  var _30 : Core_Option_Option_Type.t_option int32;
  var _34 : bool;
  var _35 : int32;
  var _36 : Core_Option_Option_Type.t_option int32;
  var _40 : bool;
  var _42 : int32;
  var _43 : Core_Result_Result_Type.t_result int32 int32;
  var _47 : bool;
  var _49 : int32;
  var _50 : Core_Result_Result_Type.t_result int32 int32;
  var _53 : borrowed int32;
  var _54 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _55 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _57 : bool;
  var _58 : int32;
  var _61 : borrowed int32;
  var _62 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _63 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _65 : bool;
  var _66 : int32;
  var _69 : borrowed int32;
  var _70 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _71 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _73 : bool;
  var _74 : int32;
  var _77 : borrowed int32;
  var _78 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _79 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _81 : bool;
  var _82 : int32;
  var _86 : bool;
  var _87 : int32;
  var _91 : bool;
  var _92 : int32;
  var _96 : bool;
  var _97 : int32;
  var _101 : bool;
  var _102 : int32;
  var _106 : bool;
  var _107 : int32;
  var _111 : bool;
  var _112 : int32;
  var _116 : bool;
  var _117 : int32;
  var _118 : Core_Result_Result_Type.t_result int32 int32;
  var _120 : Core_Result_Result_Type.t_result int32 int32;
  var _123 : bool;
  var _124 : int32;
  var _125 : Core_Result_Result_Type.t_result int32 int32;
  var _127 : Core_Result_Result_Type.t_result int32 int32;
  var _130 : bool;
  var _131 : int32;
  var _132 : Core_Result_Result_Type.t_result int32 int32;
  var _134 : Core_Result_Result_Type.t_result int32 int32;
  var _137 : bool;
  var _138 : int32;
  var _139 : Core_Result_Result_Type.t_result int32 int32;
  var _141 : Core_Result_Result_Type.t_result int32 int32;
  var _144 : bool;
  var _145 : int32;
  var _146 : Core_Result_Result_Type.t_result int32 int32;
  var _148 : Core_Result_Result_Type.t_result int32 int32;
  var _151 : bool;
  var _152 : int32;
  var _153 : Core_Result_Result_Type.t_result int32 int32;
  var _155 : Core_Result_Result_Type.t_result int32 int32;
  var _158 : bool;
  var _159 : int32;
  var _160 : Core_Result_Result_Type.t_result int32 int32;
  var _162 : Core_Result_Result_Type.t_result int32 int32;
  var _165 : bool;
  var _166 : int32;
  var _167 : Core_Result_Result_Type.t_result int32 int32;
  var _169 : Core_Result_Result_Type.t_result int32 int32;
  var _172 : bool;
  var _173 : int32;
  var _174 : Core_Result_Result_Type.t_result int32 int32;
  var _175 : Core_Result_Result_Type.t_result int32 int32;
  var _179 : bool;
  var _181 : int32;
  var _182 : Core_Result_Result_Type.t_result int32 int32;
  var _183 : Core_Result_Result_Type.t_result int32 int32;
  var _187 : bool;
  var _188 : int32;
  var _189 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _190 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _191 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _194 : bool;
  var _196 : borrowed int32;
  var _197 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _198 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _199 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _202 : bool;
  var _203 : int32;
  var _204 : Core_Result_Result_Type.t_result int32 int32;
  var _205 : Core_Result_Result_Type.t_result int32 int32;
  var _209 : bool;
  var _211 : int32;
  var _212 : Core_Result_Result_Type.t_result int32 int32;
  var _213 : Core_Result_Result_Type.t_result int32 int32;
  var _217 : bool;
  var _218 : int32;
  var _219 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _220 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _221 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _224 : bool;
  var _226 : borrowed int32;
  var _227 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _228 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _229 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var res : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _232 : Core_Option_Option_Type.t_option int32;
  var _234 : bool;
  var _236 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
  var res1 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _240 : Core_Option_Option_Type.t_option int32;
  var _242 : bool;
  var _243 : int32;
  var _244 : Core_Result_Result_Type.t_result int32 int32;
  var _245 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
  var res2 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _250 : bool;
  var _251 : int32;
  var _252 : Core_Result_Result_Type.t_result int32 int32;
  var _253 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
  {
    goto BB0
  }
  BB0 {
    [#"../result.rs" 4 35 4 40] ok <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 4 38 4 39] (1 : int32));
    [#"../result.rs" 5 36 5 43] err <- Core_Result_Result_Type.C_Err ([#"../result.rs" 5 40 5 42] (-1 : int32));
    [#"../result.rs" 8 12 8 22] _4 <- ([#"../result.rs" 8 12 8 22] is_ok0 ok);
    goto BB1
  }
  BB1 {
    switch (_4)
      | False -> goto BB6
      | True -> goto BB2
      end
  }
  BB2 {
    [#"../result.rs" 8 27 8 38] _6 <- ([#"../result.rs" 8 27 8 38] is_ok0 err);
    goto BB3
  }
  BB3 {
    switch (_6)
      | False -> goto BB5
      | True -> goto BB4
      end
  }
  BB4 {
    goto BB7
  }
  BB5 {
    [#"../result.rs" 10 12 10 24] _10 <- ([#"../result.rs" 10 12 10 24] is_err0 err);
    goto BB8
  }
  BB6 {
    goto BB7
  }
  BB7 {
    assert { [#"../result.rs" 8 4 8 39] false };
    absurd
  }
  BB8 {
    switch (_10)
      | False -> goto BB13
      | True -> goto BB9
      end
  }
  BB9 {
    [#"../result.rs" 10 29 10 40] _12 <- ([#"../result.rs" 10 29 10 40] is_err0 ok);
    goto BB10
  }
  BB10 {
    switch (_12)
      | False -> goto BB12
      | True -> goto BB11
      end
  }
  BB11 {
    goto BB14
  }
  BB12 {
    [#"../result.rs" 13 12 13 19] _18 <- ([#"../result.rs" 13 12 13 19] ok0 ok);
    goto BB15
  }
  BB13 {
    goto BB14
  }
  BB14 {
    assert { [#"../result.rs" 10 4 10 41] false };
    absurd
  }
  BB15 {
    [#"../result.rs" 13 12 13 28] _17 <- ([#"../result.rs" 13 12 13 28] unwrap0 _18);
    _18 <- any Core_Option_Option_Type.t_option int32;
    goto BB16
  }
  BB16 {
    [#"../result.rs" 13 12 13 33] _16 <- _17 = ([#"../result.rs" 13 32 13 33] (1 : int32));
    _17 <- any int32;
    switch (_16)
      | False -> goto BB18
      | True -> goto BB17
      end
  }
  BB17 {
    [#"../result.rs" 14 12 14 20] _24 <- ([#"../result.rs" 14 12 14 20] ok0 err);
    goto BB19
  }
  BB18 {
    assert { [#"../result.rs" 13 4 13 34] false };
    absurd
  }
  BB19 {
    [#"../result.rs" 14 12 14 30] _22 <- ([#"../result.rs" 14 12 14 30] is_none0 _24);
    goto BB20
  }
  BB20 {
    switch (_22)
      | False -> goto BB22
      | True -> goto BB21
      end
  }
  BB21 {
    [#"../result.rs" 16 12 16 20] _30 <- ([#"../result.rs" 16 12 16 20] err0 ok);
    goto BB23
  }
  BB22 {
    assert { [#"../result.rs" 14 4 14 31] false };
    absurd
  }
  BB23 {
    [#"../result.rs" 16 12 16 30] _28 <- ([#"../result.rs" 16 12 16 30] is_none0 _30);
    goto BB24
  }
  BB24 {
    switch (_28)
      | False -> goto BB26
      | True -> goto BB25
      end
  }
  BB25 {
    [#"../result.rs" 17 12 17 21] _36 <- ([#"../result.rs" 17 12 17 21] err0 err);
    goto BB27
  }
  BB26 {
    assert { [#"../result.rs" 16 4 16 31] false };
    absurd
  }
  BB27 {
    [#"../result.rs" 17 12 17 30] _35 <- ([#"../result.rs" 17 12 17 30] unwrap0 _36);
    _36 <- any Core_Option_Option_Type.t_option int32;
    goto BB28
  }
  BB28 {
    [#"../result.rs" 17 12 17 36] _34 <- _35 = ([#"../result.rs" 17 34 17 36] (-1 : int32));
    _35 <- any int32;
    switch (_34)
      | False -> goto BB30
      | True -> goto BB29
      end
  }
  BB29 {
    [#"../result.rs" 20 13 20 24] _43 <- ([#"../result.rs" 20 13 20 24] as_ref0 ok);
    goto BB31
  }
  BB30 {
    assert { [#"../result.rs" 17 4 17 37] false };
    absurd
  }
  BB31 {
    [#"../result.rs" 20 13 20 33] _42 <- ([#"../result.rs" 20 13 20 33] unwrap1 _43);
    _43 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB32
  }
  BB32 {
    [#"../result.rs" 20 12 20 38] _40 <- _42 = ([#"../result.rs" 20 37 20 38] (1 : int32));
    switch (_40)
      | False -> goto BB34
      | True -> goto BB33
      end
  }
  BB33 {
    [#"../result.rs" 21 13 21 25] _50 <- ([#"../result.rs" 21 13 21 25] as_ref0 err);
    goto BB35
  }
  BB34 {
    assert { [#"../result.rs" 20 4 20 39] false };
    absurd
  }
  BB35 {
    [#"../result.rs" 21 13 21 38] _49 <- ([#"../result.rs" 21 13 21 38] unwrap_err0 _50);
    _50 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB36
  }
  BB36 {
    [#"../result.rs" 21 12 21 44] _47 <- _49 = ([#"../result.rs" 21 42 21 44] (-1 : int32));
    switch (_47)
      | False -> goto BB38
      | True -> goto BB37
      end
  }
  BB37 {
    [#"../result.rs" 23 5 23 7] _55 <- Borrow.borrow_mut ok;
    [#"../result.rs" 23 5 23 7] ok <-  ^ _55;
    [#"../result.rs" 23 5 23 16] _54 <- ([#"../result.rs" 23 5 23 16] as_mut0 _55);
    _55 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB39
  }
  BB38 {
    assert { [#"../result.rs" 21 4 21 45] false };
    absurd
  }
  BB39 {
    [#"../result.rs" 23 5 23 25] _53 <- ([#"../result.rs" 23 5 23 25] unwrap2 _54);
    _54 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB40
  }
  BB40 {
    [#"../result.rs" 23 4 23 29] _53 <- { _53 with current = ([#"../result.rs" 23 28 23 29] (0 : int32)) ; };
    assume { resolve0 _53 };
    [#"../result.rs" 24 12 24 23] _58 <- ([#"../result.rs" 24 12 24 23] unwrap3 ok);
    goto BB41
  }
  BB41 {
    [#"../result.rs" 24 12 24 28] _57 <- _58 = ([#"../result.rs" 24 27 24 28] (0 : int32));
    _58 <- any int32;
    switch (_57)
      | False -> goto BB43
      | True -> goto BB42
      end
  }
  BB42 {
    [#"../result.rs" 25 5 25 7] _63 <- Borrow.borrow_mut ok;
    [#"../result.rs" 25 5 25 7] ok <-  ^ _63;
    [#"../result.rs" 25 5 25 16] _62 <- ([#"../result.rs" 25 5 25 16] as_mut0 _63);
    _63 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB44
  }
  BB43 {
    assert { [#"../result.rs" 24 4 24 29] false };
    absurd
  }
  BB44 {
    [#"../result.rs" 25 5 25 25] _61 <- ([#"../result.rs" 25 5 25 25] unwrap2 _62);
    _62 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB45
  }
  BB45 {
    [#"../result.rs" 25 4 25 29] _61 <- { _61 with current = ([#"../result.rs" 25 28 25 29] (1 : int32)) ; };
    assume { resolve0 _61 };
    [#"../result.rs" 26 12 26 23] _66 <- ([#"../result.rs" 26 12 26 23] unwrap3 ok);
    goto BB46
  }
  BB46 {
    [#"../result.rs" 26 12 26 28] _65 <- _66 = ([#"../result.rs" 26 27 26 28] (1 : int32));
    _66 <- any int32;
    switch (_65)
      | False -> goto BB48
      | True -> goto BB47
      end
  }
  BB47 {
    [#"../result.rs" 27 5 27 8] _71 <- Borrow.borrow_mut err;
    [#"../result.rs" 27 5 27 8] err <-  ^ _71;
    [#"../result.rs" 27 5 27 17] _70 <- ([#"../result.rs" 27 5 27 17] as_mut0 _71);
    _71 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB49
  }
  BB48 {
    assert { [#"../result.rs" 26 4 26 29] false };
    absurd
  }
  BB49 {
    [#"../result.rs" 27 5 27 30] _69 <- ([#"../result.rs" 27 5 27 30] unwrap_err1 _70);
    _70 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB50
  }
  BB50 {
    [#"../result.rs" 27 4 27 34] _69 <- { _69 with current = ([#"../result.rs" 27 33 27 34] (0 : int32)) ; };
    assume { resolve0 _69 };
    [#"../result.rs" 28 12 28 28] _74 <- ([#"../result.rs" 28 12 28 28] unwrap_err2 err);
    goto BB51
  }
  BB51 {
    [#"../result.rs" 28 12 28 33] _73 <- _74 = ([#"../result.rs" 28 32 28 33] (0 : int32));
    _74 <- any int32;
    switch (_73)
      | False -> goto BB53
      | True -> goto BB52
      end
  }
  BB52 {
    [#"../result.rs" 29 5 29 8] _79 <- Borrow.borrow_mut err;
    [#"../result.rs" 29 5 29 8] err <-  ^ _79;
    [#"../result.rs" 29 5 29 17] _78 <- ([#"../result.rs" 29 5 29 17] as_mut0 _79);
    _79 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB54
  }
  BB53 {
    assert { [#"../result.rs" 28 4 28 34] false };
    absurd
  }
  BB54 {
    [#"../result.rs" 29 5 29 30] _77 <- ([#"../result.rs" 29 5 29 30] unwrap_err1 _78);
    _78 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB55
  }
  BB55 {
    [#"../result.rs" 29 4 29 35] _77 <- { _77 with current = ([#"../result.rs" 29 33 29 35] (-1 : int32)) ; };
    assume { resolve0 _77 };
    [#"../result.rs" 30 12 30 28] _82 <- ([#"../result.rs" 30 12 30 28] unwrap_err2 err);
    goto BB56
  }
  BB56 {
    [#"../result.rs" 30 12 30 34] _81 <- _82 = ([#"../result.rs" 30 32 30 34] (-1 : int32));
    _82 <- any int32;
    switch (_81)
      | False -> goto BB58
      | True -> goto BB57
      end
  }
  BB57 {
    [#"../result.rs" 33 12 33 23] _87 <- ([#"../result.rs" 33 12 33 23] unwrap3 ok);
    goto BB59
  }
  BB58 {
    assert { [#"../result.rs" 30 4 30 35] false };
    absurd
  }
  BB59 {
    [#"../result.rs" 33 12 33 28] _86 <- _87 = ([#"../result.rs" 33 27 33 28] (1 : int32));
    _87 <- any int32;
    switch (_86)
      | False -> goto BB61
      | True -> goto BB60
      end
  }
  BB60 {
    [#"../result.rs" 37 12 37 28] _92 <- ([#"../result.rs" 37 12 37 28] unwrap_err2 err);
    goto BB62
  }
  BB61 {
    assert { [#"../result.rs" 33 4 33 29] false };
    absurd
  }
  BB62 {
    [#"../result.rs" 37 12 37 34] _91 <- _92 = ([#"../result.rs" 37 32 37 34] (-1 : int32));
    _92 <- any int32;
    switch (_91)
      | False -> goto BB64
      | True -> goto BB63
      end
  }
  BB63 {
    [#"../result.rs" 40 12 40 27] _97 <- ([#"../result.rs" 40 12 40 27] unwrap_or0 ok ([#"../result.rs" 40 25 40 26] (0 : int32)));
    goto BB65
  }
  BB64 {
    assert { [#"../result.rs" 37 4 37 35] false };
    absurd
  }
  BB65 {
    [#"../result.rs" 40 12 40 32] _96 <- _97 = ([#"../result.rs" 40 31 40 32] (1 : int32));
    _97 <- any int32;
    switch (_96)
      | False -> goto BB67
      | True -> goto BB66
      end
  }
  BB66 {
    [#"../result.rs" 41 12 41 28] _102 <- ([#"../result.rs" 41 12 41 28] unwrap_or0 err ([#"../result.rs" 41 26 41 27] (0 : int32)));
    goto BB68
  }
  BB67 {
    assert { [#"../result.rs" 40 4 40 33] false };
    absurd
  }
  BB68 {
    [#"../result.rs" 41 12 41 33] _101 <- _102 = ([#"../result.rs" 41 32 41 33] (0 : int32));
    _102 <- any int32;
    switch (_101)
      | False -> goto BB70
      | True -> goto BB69
      end
  }
  BB69 {
    [#"../result.rs" 43 12 43 34] _107 <- ([#"../result.rs" 43 12 43 34] unwrap_or_default0 ok);
    goto BB71
  }
  BB70 {
    assert { [#"../result.rs" 41 4 41 34] false };
    absurd
  }
  BB71 {
    [#"../result.rs" 43 12 43 39] _106 <- _107 = ([#"../result.rs" 43 38 43 39] (1 : int32));
    _107 <- any int32;
    switch (_106)
      | False -> goto BB73
      | True -> goto BB72
      end
  }
  BB72 {
    [#"../result.rs" 44 12 44 35] _112 <- ([#"../result.rs" 44 12 44 35] unwrap_or_default0 err);
    goto BB74
  }
  BB73 {
    assert { [#"../result.rs" 43 4 43 40] false };
    absurd
  }
  BB74 {
    [#"../result.rs" 44 12 44 40] _111 <- _112 = ([#"../result.rs" 44 39 44 40] (0 : int32));
    _112 <- any int32;
    switch (_111)
      | False -> goto BB76
      | True -> goto BB75
      end
  }
  BB75 {
    [#"../result.rs" 47 26 47 33] _120 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 47 30 47 32] (-2 : int32));
    [#"../result.rs" 47 12 47 34] _118 <- ([#"../result.rs" 47 12 47 34] and0 ok _120);
    _120 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB77
  }
  BB76 {
    assert { [#"../result.rs" 44 4 44 41] false };
    absurd
  }
  BB77 {
    [#"../result.rs" 47 12 47 47] _117 <- ([#"../result.rs" 47 12 47 47] unwrap_err2 _118);
    _118 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB78
  }
  BB78 {
    [#"../result.rs" 47 12 47 53] _116 <- _117 = ([#"../result.rs" 47 51 47 53] (-2 : int32));
    _117 <- any int32;
    switch (_116)
      | False -> goto BB80
      | True -> goto BB79
      end
  }
  BB79 {
    [#"../result.rs" 48 19 48 24] _127 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 48 22 48 23] (2 : int32));
    [#"../result.rs" 48 12 48 25] _125 <- ([#"../result.rs" 48 12 48 25] and0 ok _127);
    _127 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB81
  }
  BB80 {
    assert { [#"../result.rs" 47 4 47 54] false };
    absurd
  }
  BB81 {
    [#"../result.rs" 48 12 48 34] _124 <- ([#"../result.rs" 48 12 48 34] unwrap3 _125);
    _125 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB82
  }
  BB82 {
    [#"../result.rs" 48 12 48 39] _123 <- _124 = ([#"../result.rs" 48 38 48 39] (2 : int32));
    _124 <- any int32;
    switch (_123)
      | False -> goto BB84
      | True -> goto BB83
      end
  }
  BB83 {
    [#"../result.rs" 49 27 49 34] _134 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 49 31 49 33] (-2 : int32));
    [#"../result.rs" 49 12 49 35] _132 <- ([#"../result.rs" 49 12 49 35] and0 err _134);
    _134 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB85
  }
  BB84 {
    assert { [#"../result.rs" 48 4 48 40] false };
    absurd
  }
  BB85 {
    [#"../result.rs" 49 12 49 48] _131 <- ([#"../result.rs" 49 12 49 48] unwrap_err2 _132);
    _132 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB86
  }
  BB86 {
    [#"../result.rs" 49 12 49 54] _130 <- _131 = ([#"../result.rs" 49 52 49 54] (-1 : int32));
    _131 <- any int32;
    switch (_130)
      | False -> goto BB88
      | True -> goto BB87
      end
  }
  BB87 {
    [#"../result.rs" 50 20 50 25] _141 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 50 23 50 24] (2 : int32));
    [#"../result.rs" 50 12 50 26] _139 <- ([#"../result.rs" 50 12 50 26] and0 err _141);
    _141 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB89
  }
  BB88 {
    assert { [#"../result.rs" 49 4 49 55] false };
    absurd
  }
  BB89 {
    [#"../result.rs" 50 12 50 39] _138 <- ([#"../result.rs" 50 12 50 39] unwrap_err2 _139);
    _139 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB90
  }
  BB90 {
    [#"../result.rs" 50 12 50 45] _137 <- _138 = ([#"../result.rs" 50 43 50 45] (-1 : int32));
    _138 <- any int32;
    switch (_137)
      | False -> goto BB92
      | True -> goto BB91
      end
  }
  BB91 {
    [#"../result.rs" 53 18 53 25] _148 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 53 22 53 24] (-2 : int32));
    [#"../result.rs" 53 12 53 26] _146 <- ([#"../result.rs" 53 12 53 26] or0 ok _148);
    _148 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB93
  }
  BB92 {
    assert { [#"../result.rs" 50 4 50 46] false };
    absurd
  }
  BB93 {
    [#"../result.rs" 53 12 53 35] _145 <- ([#"../result.rs" 53 12 53 35] unwrap3 _146);
    _146 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB94
  }
  BB94 {
    [#"../result.rs" 53 12 53 40] _144 <- _145 = ([#"../result.rs" 53 39 53 40] (1 : int32));
    _145 <- any int32;
    switch (_144)
      | False -> goto BB96
      | True -> goto BB95
      end
  }
  BB95 {
    [#"../result.rs" 54 25 54 30] _155 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 54 28 54 29] (2 : int32));
    [#"../result.rs" 54 12 54 31] _153 <- ([#"../result.rs" 54 12 54 31] or0 ok _155);
    _155 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB97
  }
  BB96 {
    assert { [#"../result.rs" 53 4 53 41] false };
    absurd
  }
  BB97 {
    [#"../result.rs" 54 12 54 40] _152 <- ([#"../result.rs" 54 12 54 40] unwrap3 _153);
    _153 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB98
  }
  BB98 {
    [#"../result.rs" 54 12 54 45] _151 <- _152 = ([#"../result.rs" 54 44 54 45] (1 : int32));
    _152 <- any int32;
    switch (_151)
      | False -> goto BB100
      | True -> goto BB99
      end
  }
  BB99 {
    [#"../result.rs" 55 19 55 26] _162 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 55 23 55 25] (-2 : int32));
    [#"../result.rs" 55 12 55 27] _160 <- ([#"../result.rs" 55 12 55 27] or0 err _162);
    _162 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB101
  }
  BB100 {
    assert { [#"../result.rs" 54 4 54 46] false };
    absurd
  }
  BB101 {
    [#"../result.rs" 55 12 55 40] _159 <- ([#"../result.rs" 55 12 55 40] unwrap_err2 _160);
    _160 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB102
  }
  BB102 {
    [#"../result.rs" 55 12 55 46] _158 <- _159 = ([#"../result.rs" 55 44 55 46] (-2 : int32));
    _159 <- any int32;
    switch (_158)
      | False -> goto BB104
      | True -> goto BB103
      end
  }
  BB103 {
    [#"../result.rs" 56 26 56 31] _169 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 56 29 56 30] (2 : int32));
    [#"../result.rs" 56 12 56 32] _167 <- ([#"../result.rs" 56 12 56 32] or0 err _169);
    _169 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB105
  }
  BB104 {
    assert { [#"../result.rs" 55 4 55 47] false };
    absurd
  }
  BB105 {
    [#"../result.rs" 56 12 56 41] _166 <- ([#"../result.rs" 56 12 56 41] unwrap3 _167);
    _167 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB106
  }
  BB106 {
    [#"../result.rs" 56 12 56 46] _165 <- _166 = ([#"../result.rs" 56 45 56 46] (2 : int32));
    _166 <- any int32;
    switch (_165)
      | False -> goto BB108
      | True -> goto BB107
      end
  }
  BB107 {
    [#"../result.rs" 59 12 59 23] _175 <- ([#"../result.rs" 59 12 59 23] as_ref0 ok);
    goto BB109
  }
  BB108 {
    assert { [#"../result.rs" 56 4 56 47] false };
    absurd
  }
  BB109 {
    [#"../result.rs" 59 12 59 32] _174 <- ([#"../result.rs" 59 12 59 32] copied0 _175);
    _175 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB110
  }
  BB110 {
    [#"../result.rs" 59 12 59 41] _173 <- ([#"../result.rs" 59 12 59 41] unwrap4 _174);
    _174 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB111
  }
  BB111 {
    [#"../result.rs" 59 12 59 46] _172 <- _173 = ([#"../result.rs" 59 45 59 46] (1 : int32));
    _173 <- any int32;
    switch (_172)
      | False -> goto BB113
      | True -> goto BB112
      end
  }
  BB112 {
    [#"../result.rs" 60 13 60 25] _183 <- ([#"../result.rs" 60 13 60 25] as_ref0 err);
    goto BB114
  }
  BB113 {
    assert { [#"../result.rs" 59 4 59 47] false };
    absurd
  }
  BB114 {
    [#"../result.rs" 60 13 60 34] _182 <- ([#"../result.rs" 60 13 60 34] copied0 _183);
    _183 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB115
  }
  BB115 {
    [#"../result.rs" 60 13 60 47] _181 <- ([#"../result.rs" 60 13 60 47] unwrap_err3 _182);
    _182 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB116
  }
  BB116 {
    [#"../result.rs" 60 12 60 53] _179 <- _181 = ([#"../result.rs" 60 51 60 53] (-1 : int32));
    switch (_179)
      | False -> goto BB118
      | True -> goto BB117
      end
  }
  BB117 {
    [#"../result.rs" 61 12 61 14] _191 <- Borrow.borrow_mut ok;
    [#"../result.rs" 61 12 61 14] ok <-  ^ _191;
    [#"../result.rs" 61 12 61 23] _190 <- ([#"../result.rs" 61 12 61 23] as_mut0 _191);
    _191 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB119
  }
  BB118 {
    assert { [#"../result.rs" 60 4 60 54] false };
    absurd
  }
  BB119 {
    [#"../result.rs" 61 12 61 32] _189 <- ([#"../result.rs" 61 12 61 32] copied1 _190);
    _190 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB120
  }
  BB120 {
    [#"../result.rs" 61 12 61 41] _188 <- ([#"../result.rs" 61 12 61 41] unwrap5 _189);
    _189 <- any Core_Result_Result_Type.t_result int32 (borrowed int32);
    goto BB121
  }
  BB121 {
    [#"../result.rs" 61 12 61 46] _187 <- _188 = ([#"../result.rs" 61 45 61 46] (1 : int32));
    _188 <- any int32;
    switch (_187)
      | False -> goto BB123
      | True -> goto BB122
      end
  }
  BB122 {
    [#"../result.rs" 62 13 62 16] _199 <- Borrow.borrow_mut err;
    [#"../result.rs" 62 13 62 16] err <-  ^ _199;
    [#"../result.rs" 62 13 62 25] _198 <- ([#"../result.rs" 62 13 62 25] as_mut0 _199);
    _199 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB124
  }
  BB123 {
    assert { [#"../result.rs" 61 4 61 47] false };
    absurd
  }
  BB124 {
    [#"../result.rs" 62 13 62 34] _197 <- ([#"../result.rs" 62 13 62 34] copied1 _198);
    _198 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB125
  }
  BB125 {
    [#"../result.rs" 62 13 62 47] _196 <- ([#"../result.rs" 62 13 62 47] unwrap_err4 _197);
    _197 <- any Core_Result_Result_Type.t_result int32 (borrowed int32);
    goto BB126
  }
  BB126 {
    assume { resolve0 _196 };
    [#"../result.rs" 62 12 62 53] _194 <-  * _196 = ([#"../result.rs" 62 51 62 53] (-1 : int32));
    switch (_194)
      | False -> goto BB128
      | True -> goto BB127
      end
  }
  BB127 {
    [#"../result.rs" 64 12 64 23] _205 <- ([#"../result.rs" 64 12 64 23] as_ref0 ok);
    goto BB129
  }
  BB128 {
    assert { [#"../result.rs" 62 4 62 54] false };
    absurd
  }
  BB129 {
    [#"../result.rs" 64 12 64 32] _204 <- ([#"../result.rs" 64 12 64 32] cloned0 _205);
    _205 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB130
  }
  BB130 {
    [#"../result.rs" 64 12 64 41] _203 <- ([#"../result.rs" 64 12 64 41] unwrap4 _204);
    _204 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB131
  }
  BB131 {
    [#"../result.rs" 64 12 64 46] _202 <- _203 = ([#"../result.rs" 64 45 64 46] (1 : int32));
    _203 <- any int32;
    switch (_202)
      | False -> goto BB133
      | True -> goto BB132
      end
  }
  BB132 {
    [#"../result.rs" 65 13 65 25] _213 <- ([#"../result.rs" 65 13 65 25] as_ref0 err);
    goto BB134
  }
  BB133 {
    assert { [#"../result.rs" 64 4 64 47] false };
    absurd
  }
  BB134 {
    [#"../result.rs" 65 13 65 34] _212 <- ([#"../result.rs" 65 13 65 34] cloned0 _213);
    _213 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB135
  }
  BB135 {
    [#"../result.rs" 65 13 65 47] _211 <- ([#"../result.rs" 65 13 65 47] unwrap_err3 _212);
    _212 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB136
  }
  BB136 {
    [#"../result.rs" 65 12 65 53] _209 <- _211 = ([#"../result.rs" 65 51 65 53] (-1 : int32));
    switch (_209)
      | False -> goto BB138
      | True -> goto BB137
      end
  }
  BB137 {
    [#"../result.rs" 66 12 66 14] _221 <- Borrow.borrow_mut ok;
    [#"../result.rs" 66 12 66 14] ok <-  ^ _221;
    [#"../result.rs" 66 12 66 23] _220 <- ([#"../result.rs" 66 12 66 23] as_mut0 _221);
    _221 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB139
  }
  BB138 {
    assert { [#"../result.rs" 65 4 65 54] false };
    absurd
  }
  BB139 {
    [#"../result.rs" 66 12 66 32] _219 <- ([#"../result.rs" 66 12 66 32] cloned1 _220);
    _220 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB140
  }
  BB140 {
    [#"../result.rs" 66 12 66 41] _218 <- ([#"../result.rs" 66 12 66 41] unwrap5 _219);
    _219 <- any Core_Result_Result_Type.t_result int32 (borrowed int32);
    goto BB141
  }
  BB141 {
    [#"../result.rs" 66 12 66 46] _217 <- _218 = ([#"../result.rs" 66 45 66 46] (1 : int32));
    _218 <- any int32;
    switch (_217)
      | False -> goto BB143
      | True -> goto BB142
      end
  }
  BB142 {
    [#"../result.rs" 67 13 67 16] _229 <- Borrow.borrow_mut err;
    [#"../result.rs" 67 13 67 16] err <-  ^ _229;
    [#"../result.rs" 67 13 67 25] _228 <- ([#"../result.rs" 67 13 67 25] as_mut0 _229);
    _229 <- any borrowed (Core_Result_Result_Type.t_result int32 int32);
    goto BB144
  }
  BB143 {
    assert { [#"../result.rs" 66 4 66 47] false };
    absurd
  }
  BB144 {
    [#"../result.rs" 67 13 67 34] _227 <- ([#"../result.rs" 67 13 67 34] cloned1 _228);
    _228 <- any Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
    goto BB145
  }
  BB145 {
    [#"../result.rs" 67 13 67 47] _226 <- ([#"../result.rs" 67 13 67 47] unwrap_err4 _227);
    _227 <- any Core_Result_Result_Type.t_result int32 (borrowed int32);
    goto BB146
  }
  BB146 {
    assume { resolve0 _226 };
    [#"../result.rs" 67 12 67 53] _224 <-  * _226 = ([#"../result.rs" 67 51 67 53] (-1 : int32));
    switch (_224)
      | False -> goto BB148
      | True -> goto BB147
      end
  }
  BB147 {
    [#"../result.rs" 70 43 70 47] _232 <- Core_Option_Option_Type.C_None;
    [#"../result.rs" 70 40 70 48] res <- Core_Result_Result_Type.C_Ok _232;
    _232 <- any Core_Option_Option_Type.t_option int32;
    [#"../result.rs" 71 12 71 27] _236 <- ([#"../result.rs" 71 12 71 27] transpose0 res);
    goto BB149
  }
  BB148 {
    assert { [#"../result.rs" 67 4 67 54] false };
    absurd
  }
  BB149 {
    [#"../result.rs" 71 12 71 37] _234 <- ([#"../result.rs" 71 12 71 37] is_none1 _236);
    goto BB150
  }
  BB150 {
    switch (_234)
      | False -> goto BB152
      | True -> goto BB151
      end
  }
  BB151 {
    [#"../result.rs" 72 43 72 50] _240 <- Core_Option_Option_Type.C_Some ([#"../result.rs" 72 48 72 49] (1 : int32));
    [#"../result.rs" 72 40 72 51] res1 <- Core_Result_Result_Type.C_Ok _240;
    _240 <- any Core_Option_Option_Type.t_option int32;
    [#"../result.rs" 73 12 73 27] _245 <- ([#"../result.rs" 73 12 73 27] transpose0 res1);
    goto BB153
  }
  BB152 {
    assert { [#"../result.rs" 71 4 71 38] false };
    absurd
  }
  BB153 {
    [#"../result.rs" 73 12 73 36] _244 <- ([#"../result.rs" 73 12 73 36] unwrap6 _245);
    _245 <- any Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
    goto BB154
  }
  BB154 {
    [#"../result.rs" 73 12 73 45] _243 <- ([#"../result.rs" 73 12 73 45] unwrap3 _244);
    _244 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB155
  }
  BB155 {
    [#"../result.rs" 73 12 73 50] _242 <- _243 = ([#"../result.rs" 73 49 73 50] (1 : int32));
    _243 <- any int32;
    switch (_242)
      | False -> goto BB157
      | True -> goto BB156
      end
  }
  BB156 {
    [#"../result.rs" 74 40 74 47] res2 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 74 44 74 46] (-1 : int32));
    [#"../result.rs" 75 12 75 27] _253 <- ([#"../result.rs" 75 12 75 27] transpose0 res2);
    goto BB158
  }
  BB157 {
    assert { [#"../result.rs" 73 4 73 51] false };
    absurd
  }
  BB158 {
    [#"../result.rs" 75 12 75 36] _252 <- ([#"../result.rs" 75 12 75 36] unwrap6 _253);
    _253 <- any Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
    goto BB159
  }
  BB159 {
    [#"../result.rs" 75 12 75 49] _251 <- ([#"../result.rs" 75 12 75 49] unwrap_err2 _252);
    _252 <- any Core_Result_Result_Type.t_result int32 int32;
    goto BB160
  }
  BB160 {
    [#"../result.rs" 75 12 75 55] _250 <- _251 = ([#"../result.rs" 75 53 75 55] (-1 : int32));
    _251 <- any int32;
    switch (_250)
      | False -> goto BB162
      | True -> goto BB161
      end
  }
  BB161 {
    [#"../result.rs" 3 21 76 1] _0 <- ([#"../result.rs" 3 21 76 1] ());
    return _0
  }
  BB162 {
    assert { [#"../result.rs" 75 4 75 56] false };
    absurd
  }
  
end
