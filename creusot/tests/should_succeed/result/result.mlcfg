
module Core_Result_Result_Type
  type t_result 't 'e =
    | C_Ok 't
    | C_Err 'e
    
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module CreusotContracts_Resolve_Impl1_Resolve_Stub
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module Core_Result_Impl0_IsOk_Interface
  type t
  type e
  use prelude.Borrow
  use Core_Result_Result_Type as Core_Result_Result_Type
  val is_ok (self : Core_Result_Result_Type.t_result t e) : bool
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 22 26 22 63] result = (exists t : t . self = Core_Result_Result_Type.C_Ok t) }
    
end
module Core_Result_Impl0_IsErr_Interface
  type t
  type e
  use prelude.Borrow
  use Core_Result_Result_Type as Core_Result_Result_Type
  val is_err (self : Core_Result_Result_Type.t_result t e) : bool
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 25 26 25 64] result = (exists e : e . self = Core_Result_Result_Type.C_Err e) }
    
end
module Core_Result_Impl0_Ok_Interface
  type t
  type e
  use Core_Option_Option_Type as Core_Option_Option_Type
  use Core_Result_Result_Type as Core_Result_Result_Type
  val ok (self : Core_Result_Result_Type.t_result t e) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 28 16 28 76] forall t : t . self = Core_Result_Result_Type.C_Ok t -> result = Core_Option_Option_Type.C_Some t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 29 16 29 76] (exists e : e . self = Core_Result_Result_Type.C_Err e) -> result = Core_Option_Option_Type.C_None }
    
end
module Core_Option_Impl0_Unwrap_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap (self : Core_Option_Option_Type.t_option t) : t
    requires {[#"../../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self <> Core_Option_Option_Type.C_None}
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] Core_Option_Option_Type.C_Some result = self }
    
end
module Core_Option_Impl0_IsNone_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_none (self : Core_Option_Option_Type.t_option t) : bool
    ensures { [#"../../../../../creusot-contracts/src/std/option.rs" 24 26 24 51] result = (self = Core_Option_Option_Type.C_None) }
    
end
module Core_Result_Impl0_Err_Interface
  type t
  type e
  use Core_Option_Option_Type as Core_Option_Option_Type
  use Core_Result_Result_Type as Core_Result_Result_Type
  val err (self : Core_Result_Result_Type.t_result t e) : Core_Option_Option_Type.t_option e
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 32 16 32 75] (exists t : t . self = Core_Result_Result_Type.C_Ok t) -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 33 16 33 77] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Option_Option_Type.C_Some e }
    
end
module Core_Result_Impl0_AsRef_Interface
  type t
  type e
  use prelude.Borrow
  use Core_Result_Result_Type as Core_Result_Result_Type
  val as_ref (self : Core_Result_Result_Type.t_result t e) : Core_Result_Result_Type.t_result t e
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 36 16 36 77] forall t : t . self = Core_Result_Result_Type.C_Ok t -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 37 16 37 79] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Result_Result_Type.C_Err e }
    
end
module Core_Result_Impl0_Unwrap_Interface
  type t
  type e
  use Core_Result_Result_Type as Core_Result_Result_Type
  val unwrap (self : Core_Result_Result_Type.t_result t e) : t
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 46 16 46 55] exists t : t . self = Core_Result_Result_Type.C_Ok t}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Ok result = self }
    
end
module Core_Result_Impl0_UnwrapErr_Interface
  type t
  type e
  use Core_Result_Result_Type as Core_Result_Result_Type
  val unwrap_err (self : Core_Result_Result_Type.t_result t e) : e
    requires {[#"../../../../../creusot-contracts/src/std/result.rs" 58 16 58 56] exists e : e . self = Core_Result_Result_Type.C_Err e}
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 18 0 119 1] Core_Result_Result_Type.C_Err result = self }
    
end
module Core_Result_Impl0_AsMut_Interface
  type t
  type e
  use prelude.Borrow
  use Core_Result_Result_Type as Core_Result_Result_Type
  val as_mut (self : borrowed (Core_Result_Result_Type.t_result t e)) : Core_Result_Result_Type.t_result (borrowed t) (borrowed e)
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 40 16 43 18] exists t : borrowed t .  * self = Core_Result_Result_Type.C_Ok ( * t) /\  ^ self = Core_Result_Result_Type.C_Ok ( ^ t) /\ result = Core_Result_Result_Type.C_Ok t \/ (exists e : borrowed e .  * self = Core_Result_Result_Type.C_Err ( * e) /\  ^ self = Core_Result_Result_Type.C_Err ( ^ e) /\ result = Core_Result_Result_Type.C_Err e) }
    
end
module Core_Result_Impl0_UnwrapOr_Interface
  type t
  type e
  use Core_Result_Result_Type as Core_Result_Result_Type
  val unwrap_or (self : Core_Result_Result_Type.t_result t e) (default : t) : t
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 64 16 64 70] forall t : t . self = Core_Result_Result_Type.C_Ok t -> result = t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 65 16 65 79] (exists e : e . self = Core_Result_Result_Type.C_Err e) -> result = default }
    
end
module CreusotContracts_Std1_Default_Default_IsDefault_Stub
  type self
  predicate is_default (self : self)
end
module CreusotContracts_Std1_Default_Default_IsDefault_Interface
  type self
  predicate is_default (self : self)
  val is_default (self : self) : bool
    ensures { result = is_default self }
    
end
module CreusotContracts_Std1_Default_Default_IsDefault
  type self
  predicate is_default (self : self)
  val is_default (self : self) : bool
    ensures { result = is_default self }
    
end
module Core_Result_Impl0_UnwrapOrDefault_Interface
  type t
  type e
  clone CreusotContracts_Std1_Default_Default_IsDefault_Stub as IsDefault0 with
    type self = t
  use Core_Result_Result_Type as Core_Result_Result_Type
  val unwrap_or_default (self : Core_Result_Result_Type.t_result t e) : t
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 68 16 68 70] forall t : t . self = Core_Result_Result_Type.C_Ok t -> result = t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 69 16 69 81] (exists e : e . self = Core_Result_Result_Type.C_Err e) -> IsDefault0.is_default result }
    
end
module Core_Result_Impl0_And_Interface
  type t
  type e
  type u
  use Core_Result_Result_Type as Core_Result_Result_Type
  val and (self : Core_Result_Result_Type.t_result t e) (res : Core_Result_Result_Type.t_result u e) : Core_Result_Result_Type.t_result u e
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 74 16 74 74] (exists t : t . self = Core_Result_Result_Type.C_Ok t) -> result = res }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 75 16 75 76] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Result_Result_Type.C_Err e }
    
end
module Core_Result_Impl0_Or_Interface
  type t
  type e
  type f
  use Core_Result_Result_Type as Core_Result_Result_Type
  val or (self : Core_Result_Result_Type.t_result t e) (res : Core_Result_Result_Type.t_result t f) : Core_Result_Result_Type.t_result t f
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 78 16 78 74] forall t : t . self = Core_Result_Result_Type.C_Ok t -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 79 16 79 75] (exists e : e . self = Core_Result_Result_Type.C_Err e) -> result = res }
    
end
module Core_Result_Impl1_Copied_Interface
  type t
  type e
  use prelude.Borrow
  use Core_Result_Result_Type as Core_Result_Result_Type
  val copied (self : Core_Result_Result_Type.t_result t e) : Core_Result_Result_Type.t_result t e
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 84 16 84 76] forall t : t . self = Core_Result_Result_Type.C_Ok t -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 85 16 85 76] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Result_Result_Type.C_Err e }
    
end
module Core_Result_Impl2_Copied_Interface
  type t
  type e
  use prelude.Borrow
  clone CreusotContracts_Resolve_Impl1_Resolve_Stub as Resolve0 with
    type t = t
  use Core_Result_Result_Type as Core_Result_Result_Type
  val copied (self : Core_Result_Result_Type.t_result (borrowed t) e) : Core_Result_Result_Type.t_result t e
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 98 16 98 95] forall t : borrowed t . self = Core_Result_Result_Type.C_Ok t -> result = Core_Result_Result_Type.C_Ok ( * t) /\ Resolve0.resolve t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 99 16 99 76] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Result_Result_Type.C_Err e }
    
end
module Core_Result_Impl1_Cloned_Interface
  type t
  type e
  use prelude.Borrow
  use Core_Result_Result_Type as Core_Result_Result_Type
  val cloned (self : Core_Result_Result_Type.t_result t e) : Core_Result_Result_Type.t_result t e
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 90 16 90 76] forall t : t . self = Core_Result_Result_Type.C_Ok t -> result = Core_Result_Result_Type.C_Ok t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 91 16 91 76] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Result_Result_Type.C_Err e }
    
end
module Core_Result_Impl2_Cloned_Interface
  type t
  type e
  use prelude.Borrow
  clone CreusotContracts_Resolve_Impl1_Resolve_Stub as Resolve0 with
    type t = t
  use Core_Result_Result_Type as Core_Result_Result_Type
  val cloned (self : Core_Result_Result_Type.t_result (borrowed t) e) : Core_Result_Result_Type.t_result t e
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 104 16 104 95] forall t : borrowed t . self = Core_Result_Result_Type.C_Ok t -> result = Core_Result_Result_Type.C_Ok ( * t) /\ Resolve0.resolve t }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 105 16 105 76] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Result_Result_Type.C_Err e }
    
end
module Core_Result_Impl3_Transpose_Interface
  type t
  type e
  use Core_Result_Result_Type as Core_Result_Result_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  val transpose (self : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option t) e) : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result t e)
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 112 16 112 63] self = Core_Result_Result_Type.C_Ok (Core_Option_Option_Type.C_None) -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 113 16 113 86] forall t : t . self = Core_Result_Result_Type.C_Ok (Core_Option_Option_Type.C_Some t) -> result = Core_Option_Option_Type.C_Some (Core_Result_Result_Type.C_Ok t) }
    ensures { [#"../../../../../creusot-contracts/src/std/result.rs" 114 16 114 82] forall e : e . self = Core_Result_Result_Type.C_Err e -> result = Core_Option_Option_Type.C_Some (Core_Result_Result_Type.C_Err e) }
    
end
module CreusotContracts_Std1_Num_Impl26_IsDefault_Stub
  use prelude.Int
  use prelude.Int32
  predicate is_default (self : int32)
end
module CreusotContracts_Std1_Num_Impl26_IsDefault_Interface
  use prelude.Int
  use prelude.Int32
  predicate is_default (self : int32)
  val is_default (self : int32) : bool
    ensures { result = is_default self }
    
end
module CreusotContracts_Std1_Num_Impl26_IsDefault
  use prelude.Int
  use prelude.Int32
  predicate is_default (self : int32) =
    [#"../../../../../creusot-contracts/src/std/num.rs" 30 28 30 32] self = (0 : int32)
  val is_default (self : int32) : bool
    ensures { result = is_default self }
    
end
module Result_TestResult_Interface
  val test_result [#"../result.rs" 3 0 3 20] (_1' : ()) : ()
end
module Result_TestResult
  use prelude.Int
  use prelude.Int32
  use prelude.Borrow
  clone CreusotContracts_Std1_Num_Impl26_IsDefault as IsDefault0
  use Core_Result_Result_Type as Core_Result_Result_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap6 with
    type t = Core_Result_Result_Type.t_result int32 int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone1 with
    type t = Core_Result_Result_Type.t_result int32 int32
  clone Core_Result_Impl3_Transpose_Interface as Transpose0 with
    type t = int32,
    type e = int32
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = int32
  clone Core_Result_Impl2_Cloned_Interface as Cloned1 with
    type t = int32,
    type e = borrowed int32,
    predicate Resolve0.resolve = Resolve0.resolve
  clone Core_Result_Impl1_Cloned_Interface as Cloned0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_UnwrapErr_Interface as UnwrapErr4 with
    type t = int32,
    type e = borrowed int32
  clone Core_Result_Impl0_Unwrap_Interface as Unwrap5 with
    type t = int32,
    type e = borrowed int32
  clone Core_Result_Impl2_Copied_Interface as Copied1 with
    type t = int32,
    type e = borrowed int32,
    predicate Resolve0.resolve = Resolve0.resolve
  clone Core_Result_Impl0_UnwrapErr_Interface as UnwrapErr3 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_Unwrap_Interface as Unwrap4 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl1_Copied_Interface as Copied0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_Or_Interface as Or0 with
    type t = int32,
    type e = int32,
    type f = int32
  clone Core_Result_Impl0_And_Interface as And0 with
    type t = int32,
    type e = int32,
    type u = int32
  clone Core_Result_Impl0_UnwrapOrDefault_Interface as UnwrapOrDefault0 with
    type t = int32,
    type e = int32,
    predicate IsDefault0.is_default = IsDefault0.is_default
  clone Core_Result_Impl0_UnwrapOr_Interface as UnwrapOr0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_UnwrapErr_Interface as UnwrapErr2 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_UnwrapErr_Interface as UnwrapErr1 with
    type t = borrowed int32,
    type e = borrowed int32
  clone Core_Result_Impl0_Unwrap_Interface as Unwrap3 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_Unwrap_Interface as Unwrap2 with
    type t = borrowed int32,
    type e = borrowed int32
  clone Core_Result_Impl0_AsMut_Interface as AsMut0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_UnwrapErr_Interface as UnwrapErr0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_Unwrap_Interface as Unwrap1 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_AsRef_Interface as AsRef0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_Err_Interface as Err0 with
    type t = int32,
    type e = int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone0 with
    type t = int32
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap0 with
    type t = int32
  clone Core_Result_Impl0_Ok_Interface as Ok0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_IsErr_Interface as IsErr0 with
    type t = int32,
    type e = int32
  clone Core_Result_Impl0_IsOk_Interface as IsOk0 with
    type t = int32,
    type e = int32
  let rec cfg test_result [#"../result.rs" 3 0 3 20] [@cfg:stackify] [@cfg:subregion_analysis] (_1' : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var ok_1 : Core_Result_Result_Type.t_result int32 int32;
  var err_2 : Core_Result_Result_Type.t_result int32 int32;
  var _3 : ();
  var _4 : bool;
  var _5 : bool;
  var _6 : bool;
  var _7 : Core_Result_Result_Type.t_result int32 int32;
  var _8 : bool;
  var _9 : bool;
  var _10 : Core_Result_Result_Type.t_result int32 int32;
  var _11 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : bool;
  var _15 : bool;
  var _16 : Core_Result_Result_Type.t_result int32 int32;
  var _17 : bool;
  var _18 : bool;
  var _19 : Core_Result_Result_Type.t_result int32 int32;
  var _20 : ();
  var _21 : ();
  var _22 : bool;
  var _23 : bool;
  var _24 : int32;
  var _25 : Core_Option_Option_Type.t_option int32;
  var _26 : Core_Result_Result_Type.t_result int32 int32;
  var _27 : ();
  var _28 : ();
  var _29 : bool;
  var _30 : bool;
  var _31 : Core_Option_Option_Type.t_option int32;
  var _32 : Core_Option_Option_Type.t_option int32;
  var _33 : Core_Result_Result_Type.t_result int32 int32;
  var _34 : ();
  var _35 : ();
  var _36 : bool;
  var _37 : bool;
  var _38 : Core_Option_Option_Type.t_option int32;
  var _39 : Core_Option_Option_Type.t_option int32;
  var _40 : Core_Result_Result_Type.t_result int32 int32;
  var _41 : ();
  var _42 : ();
  var _43 : bool;
  var _44 : bool;
  var _45 : int32;
  var _46 : Core_Option_Option_Type.t_option int32;
  var _47 : Core_Result_Result_Type.t_result int32 int32;
  var _48 : ();
  var _49 : ();
  var _50 : bool;
  var _51 : bool;
  var _52 : int32;
  var _53 : int32;
  var _54 : Core_Result_Result_Type.t_result int32 int32;
  var _55 : Core_Result_Result_Type.t_result int32 int32;
  var _56 : ();
  var _57 : ();
  var _58 : bool;
  var _59 : bool;
  var _60 : int32;
  var _61 : int32;
  var _62 : Core_Result_Result_Type.t_result int32 int32;
  var _63 : Core_Result_Result_Type.t_result int32 int32;
  var _64 : ();
  var _65 : borrowed int32;
  var _66 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _67 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _68 : ();
  var _69 : bool;
  var _70 : bool;
  var _71 : int32;
  var _72 : Core_Result_Result_Type.t_result int32 int32;
  var _73 : ();
  var _74 : borrowed int32;
  var _75 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _76 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _77 : ();
  var _78 : bool;
  var _79 : bool;
  var _80 : int32;
  var _81 : Core_Result_Result_Type.t_result int32 int32;
  var _82 : ();
  var _83 : borrowed int32;
  var _84 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _85 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _86 : ();
  var _87 : bool;
  var _88 : bool;
  var _89 : int32;
  var _90 : Core_Result_Result_Type.t_result int32 int32;
  var _91 : ();
  var _92 : borrowed int32;
  var _93 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _94 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _95 : ();
  var _96 : bool;
  var _97 : bool;
  var _98 : int32;
  var _99 : Core_Result_Result_Type.t_result int32 int32;
  var _100 : ();
  var _101 : ();
  var _102 : bool;
  var _103 : bool;
  var _104 : int32;
  var _105 : Core_Result_Result_Type.t_result int32 int32;
  var _106 : ();
  var _107 : ();
  var _108 : bool;
  var _109 : bool;
  var _110 : int32;
  var _111 : Core_Result_Result_Type.t_result int32 int32;
  var _112 : ();
  var _113 : ();
  var _114 : bool;
  var _115 : bool;
  var _116 : int32;
  var _117 : Core_Result_Result_Type.t_result int32 int32;
  var _118 : ();
  var _119 : ();
  var _120 : bool;
  var _121 : bool;
  var _122 : int32;
  var _123 : Core_Result_Result_Type.t_result int32 int32;
  var _124 : ();
  var _125 : ();
  var _126 : bool;
  var _127 : bool;
  var _128 : int32;
  var _129 : Core_Result_Result_Type.t_result int32 int32;
  var _130 : ();
  var _131 : ();
  var _132 : bool;
  var _133 : bool;
  var _134 : int32;
  var _135 : Core_Result_Result_Type.t_result int32 int32;
  var _136 : ();
  var _137 : ();
  var _138 : bool;
  var _139 : bool;
  var _140 : int32;
  var _141 : Core_Result_Result_Type.t_result int32 int32;
  var _142 : Core_Result_Result_Type.t_result int32 int32;
  var _143 : Core_Result_Result_Type.t_result int32 int32;
  var _144 : ();
  var _145 : ();
  var _146 : bool;
  var _147 : bool;
  var _148 : int32;
  var _149 : Core_Result_Result_Type.t_result int32 int32;
  var _150 : Core_Result_Result_Type.t_result int32 int32;
  var _151 : Core_Result_Result_Type.t_result int32 int32;
  var _152 : ();
  var _153 : ();
  var _154 : bool;
  var _155 : bool;
  var _156 : int32;
  var _157 : Core_Result_Result_Type.t_result int32 int32;
  var _158 : Core_Result_Result_Type.t_result int32 int32;
  var _159 : Core_Result_Result_Type.t_result int32 int32;
  var _160 : ();
  var _161 : ();
  var _162 : bool;
  var _163 : bool;
  var _164 : int32;
  var _165 : Core_Result_Result_Type.t_result int32 int32;
  var _166 : Core_Result_Result_Type.t_result int32 int32;
  var _167 : Core_Result_Result_Type.t_result int32 int32;
  var _168 : ();
  var _169 : ();
  var _170 : bool;
  var _171 : bool;
  var _172 : int32;
  var _173 : Core_Result_Result_Type.t_result int32 int32;
  var _174 : Core_Result_Result_Type.t_result int32 int32;
  var _175 : Core_Result_Result_Type.t_result int32 int32;
  var _176 : ();
  var _177 : ();
  var _178 : bool;
  var _179 : bool;
  var _180 : int32;
  var _181 : Core_Result_Result_Type.t_result int32 int32;
  var _182 : Core_Result_Result_Type.t_result int32 int32;
  var _183 : Core_Result_Result_Type.t_result int32 int32;
  var _184 : ();
  var _185 : ();
  var _186 : bool;
  var _187 : bool;
  var _188 : int32;
  var _189 : Core_Result_Result_Type.t_result int32 int32;
  var _190 : Core_Result_Result_Type.t_result int32 int32;
  var _191 : Core_Result_Result_Type.t_result int32 int32;
  var _192 : ();
  var _193 : ();
  var _194 : bool;
  var _195 : bool;
  var _196 : int32;
  var _197 : Core_Result_Result_Type.t_result int32 int32;
  var _198 : Core_Result_Result_Type.t_result int32 int32;
  var _199 : Core_Result_Result_Type.t_result int32 int32;
  var _200 : ();
  var _201 : ();
  var _202 : bool;
  var _203 : bool;
  var _204 : int32;
  var _205 : Core_Result_Result_Type.t_result int32 int32;
  var _206 : Core_Result_Result_Type.t_result int32 int32;
  var _207 : Core_Result_Result_Type.t_result int32 int32;
  var _208 : ();
  var _209 : ();
  var _210 : bool;
  var _211 : bool;
  var _212 : int32;
  var _213 : int32;
  var _214 : Core_Result_Result_Type.t_result int32 int32;
  var _215 : Core_Result_Result_Type.t_result int32 int32;
  var _216 : Core_Result_Result_Type.t_result int32 int32;
  var _217 : ();
  var _218 : ();
  var _219 : bool;
  var _220 : bool;
  var _221 : int32;
  var _222 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _223 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _224 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _225 : ();
  var _226 : ();
  var _227 : bool;
  var _228 : bool;
  var _229 : int32;
  var _230 : borrowed int32;
  var _231 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _232 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _233 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _234 : ();
  var _235 : ();
  var _236 : bool;
  var _237 : bool;
  var _238 : int32;
  var _239 : Core_Result_Result_Type.t_result int32 int32;
  var _240 : Core_Result_Result_Type.t_result int32 int32;
  var _241 : Core_Result_Result_Type.t_result int32 int32;
  var _242 : ();
  var _243 : ();
  var _244 : bool;
  var _245 : bool;
  var _246 : int32;
  var _247 : int32;
  var _248 : Core_Result_Result_Type.t_result int32 int32;
  var _249 : Core_Result_Result_Type.t_result int32 int32;
  var _250 : Core_Result_Result_Type.t_result int32 int32;
  var _251 : ();
  var _252 : ();
  var _253 : bool;
  var _254 : bool;
  var _255 : int32;
  var _256 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _257 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _258 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _259 : ();
  var _260 : ();
  var _261 : bool;
  var _262 : bool;
  var _263 : int32;
  var _264 : borrowed int32;
  var _265 : Core_Result_Result_Type.t_result int32 (borrowed int32);
  var _266 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32);
  var _267 : borrowed (Core_Result_Result_Type.t_result int32 int32);
  var _268 : ();
  var res_269 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _270 : Core_Option_Option_Type.t_option int32;
  var _271 : ();
  var _272 : bool;
  var _273 : bool;
  var _274 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
  var _275 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
  var _276 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _277 : ();
  var res_278 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _279 : Core_Option_Option_Type.t_option int32;
  var _280 : ();
  var _281 : bool;
  var _282 : bool;
  var _283 : int32;
  var _284 : Core_Result_Result_Type.t_result int32 int32;
  var _285 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
  var _286 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _287 : ();
  var res_288 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _289 : ();
  var _290 : bool;
  var _291 : bool;
  var _292 : int32;
  var _293 : Core_Result_Result_Type.t_result int32 int32;
  var _294 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32);
  var _295 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32;
  var _296 : ();
  {
    goto BB0
  }
  BB0 {
    ok_1 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 4 38 4 39] (1 : int32));
    err_2 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 5 40 5 42] (-1 : int32));
    _7 <- ok_1;
    _6 <- ([#"../result.rs" 8 12 8 22] IsOk0.is_ok _7);
    goto BB4
  }
  BB1 {
    _5 <- ([#"../result.rs" 8 12 8 38] false);
    goto BB3
  }
  BB2 {
    _10 <- err_2;
    _9 <- ([#"../result.rs" 8 27 8 38] IsOk0.is_ok _10);
    goto BB5
  }
  BB3 {
    _4 <- not _5;
    switch (_4)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB4 {
    switch (_6)
      | False -> goto BB1
      | True -> goto BB2
      end
  }
  BB5 {
    _8 <- not _9;
    _5 <- _8;
    _8 <- any bool;
    goto BB3
  }
  BB6 {
    absurd
  }
  BB7 {
    _3 <- ();
    _16 <- err_2;
    _15 <- ([#"../result.rs" 10 12 10 24] IsErr0.is_err _16);
    goto BB11
  }
  BB8 {
    _14 <- ([#"../result.rs" 10 12 10 40] false);
    goto BB10
  }
  BB9 {
    _19 <- ok_1;
    _18 <- ([#"../result.rs" 10 29 10 40] IsErr0.is_err _19);
    goto BB12
  }
  BB10 {
    _13 <- not _14;
    switch (_13)
      | False -> goto BB14
      | True -> goto BB13
      end
  }
  BB11 {
    switch (_15)
      | False -> goto BB8
      | True -> goto BB9
      end
  }
  BB12 {
    _17 <- not _18;
    _14 <- _17;
    _17 <- any bool;
    goto BB10
  }
  BB13 {
    absurd
  }
  BB14 {
    _12 <- ();
    _26 <- ok_1;
    _25 <- ([#"../result.rs" 13 12 13 19] Ok0.ok _26);
    goto BB15
  }
  BB15 {
    _24 <- ([#"../result.rs" 13 12 13 28] Unwrap0.unwrap _25);
    goto BB16
  }
  BB16 {
    _23 <- ([#"../result.rs" 13 12 13 33] _24 = ([#"../result.rs" 13 32 13 33] (1 : int32)));
    _22 <- not _23;
    switch (_22)
      | False -> goto BB18
      | True -> goto BB17
      end
  }
  BB17 {
    absurd
  }
  BB18 {
    _21 <- ();
    _33 <- err_2;
    _32 <- ([#"../result.rs" 14 12 14 20] Ok0.ok _33);
    goto BB19
  }
  BB19 {
    _31 <- _32;
    _30 <- ([#"../result.rs" 14 12 14 30] IsNone0.is_none _31);
    goto BB20
  }
  BB20 {
    _29 <- not _30;
    switch (_29)
      | False -> goto BB22
      | True -> goto BB21
      end
  }
  BB21 {
    absurd
  }
  BB22 {
    _28 <- ();
    _40 <- ok_1;
    _39 <- ([#"../result.rs" 16 12 16 20] Err0.err _40);
    goto BB23
  }
  BB23 {
    _38 <- _39;
    _37 <- ([#"../result.rs" 16 12 16 30] IsNone0.is_none _38);
    goto BB24
  }
  BB24 {
    _36 <- not _37;
    switch (_36)
      | False -> goto BB26
      | True -> goto BB25
      end
  }
  BB25 {
    absurd
  }
  BB26 {
    _35 <- ();
    _47 <- err_2;
    _46 <- ([#"../result.rs" 17 12 17 21] Err0.err _47);
    goto BB27
  }
  BB27 {
    _45 <- ([#"../result.rs" 17 12 17 30] Unwrap0.unwrap _46);
    goto BB28
  }
  BB28 {
    _44 <- ([#"../result.rs" 17 12 17 36] _45 = ([#"../result.rs" 17 34 17 36] (-1 : int32)));
    _43 <- not _44;
    switch (_43)
      | False -> goto BB30
      | True -> goto BB29
      end
  }
  BB29 {
    absurd
  }
  BB30 {
    _42 <- ();
    _55 <- ok_1;
    _54 <- ([#"../result.rs" 20 13 20 24] AsRef0.as_ref _55);
    goto BB31
  }
  BB31 {
    _53 <- ([#"../result.rs" 20 13 20 33] Unwrap1.unwrap _54);
    goto BB32
  }
  BB32 {
    _52 <- _53;
    _51 <- ([#"../result.rs" 20 12 20 38] _52 = ([#"../result.rs" 20 37 20 38] (1 : int32)));
    _50 <- not _51;
    switch (_50)
      | False -> goto BB34
      | True -> goto BB33
      end
  }
  BB33 {
    absurd
  }
  BB34 {
    _49 <- ();
    _63 <- err_2;
    _62 <- ([#"../result.rs" 21 13 21 25] AsRef0.as_ref _63);
    goto BB35
  }
  BB35 {
    _61 <- ([#"../result.rs" 21 13 21 38] UnwrapErr0.unwrap_err _62);
    goto BB36
  }
  BB36 {
    _60 <- _61;
    _59 <- ([#"../result.rs" 21 12 21 44] _60 = ([#"../result.rs" 21 42 21 44] (-1 : int32)));
    _58 <- not _59;
    switch (_58)
      | False -> goto BB38
      | True -> goto BB37
      end
  }
  BB37 {
    absurd
  }
  BB38 {
    _57 <- ();
    _67 <- borrow_mut ok_1;
    ok_1 <-  ^ _67;
    _66 <- ([#"../result.rs" 23 5 23 16] AsMut0.as_mut _67);
    goto BB39
  }
  BB39 {
    _65 <- ([#"../result.rs" 23 5 23 25] Unwrap2.unwrap _66);
    goto BB40
  }
  BB40 {
    _65 <- { _65 with current = ([#"../result.rs" 23 28 23 29] (0 : int32)) };
    assume { Resolve0.resolve _65 };
    _72 <- ok_1;
    _71 <- ([#"../result.rs" 24 12 24 23] Unwrap3.unwrap _72);
    goto BB41
  }
  BB41 {
    _70 <- ([#"../result.rs" 24 12 24 28] _71 = ([#"../result.rs" 24 27 24 28] (0 : int32)));
    _69 <- not _70;
    switch (_69)
      | False -> goto BB43
      | True -> goto BB42
      end
  }
  BB42 {
    absurd
  }
  BB43 {
    _68 <- ();
    _76 <- borrow_mut ok_1;
    ok_1 <-  ^ _76;
    _75 <- ([#"../result.rs" 25 5 25 16] AsMut0.as_mut _76);
    goto BB44
  }
  BB44 {
    _74 <- ([#"../result.rs" 25 5 25 25] Unwrap2.unwrap _75);
    goto BB45
  }
  BB45 {
    _74 <- { _74 with current = ([#"../result.rs" 25 28 25 29] (1 : int32)) };
    assume { Resolve0.resolve _74 };
    _81 <- ok_1;
    _80 <- ([#"../result.rs" 26 12 26 23] Unwrap3.unwrap _81);
    goto BB46
  }
  BB46 {
    _79 <- ([#"../result.rs" 26 12 26 28] _80 = ([#"../result.rs" 26 27 26 28] (1 : int32)));
    _78 <- not _79;
    switch (_78)
      | False -> goto BB48
      | True -> goto BB47
      end
  }
  BB47 {
    absurd
  }
  BB48 {
    _77 <- ();
    _85 <- borrow_mut err_2;
    err_2 <-  ^ _85;
    _84 <- ([#"../result.rs" 27 5 27 17] AsMut0.as_mut _85);
    goto BB49
  }
  BB49 {
    _83 <- ([#"../result.rs" 27 5 27 30] UnwrapErr1.unwrap_err _84);
    goto BB50
  }
  BB50 {
    _83 <- { _83 with current = ([#"../result.rs" 27 33 27 34] (0 : int32)) };
    assume { Resolve0.resolve _83 };
    _90 <- err_2;
    _89 <- ([#"../result.rs" 28 12 28 28] UnwrapErr2.unwrap_err _90);
    goto BB51
  }
  BB51 {
    _88 <- ([#"../result.rs" 28 12 28 33] _89 = ([#"../result.rs" 28 32 28 33] (0 : int32)));
    _87 <- not _88;
    switch (_87)
      | False -> goto BB53
      | True -> goto BB52
      end
  }
  BB52 {
    absurd
  }
  BB53 {
    _86 <- ();
    _94 <- borrow_mut err_2;
    err_2 <-  ^ _94;
    _93 <- ([#"../result.rs" 29 5 29 17] AsMut0.as_mut _94);
    goto BB54
  }
  BB54 {
    _92 <- ([#"../result.rs" 29 5 29 30] UnwrapErr1.unwrap_err _93);
    goto BB55
  }
  BB55 {
    _92 <- { _92 with current = ([#"../result.rs" 29 33 29 35] (-1 : int32)) };
    assume { Resolve0.resolve _92 };
    _99 <- err_2;
    _98 <- ([#"../result.rs" 30 12 30 28] UnwrapErr2.unwrap_err _99);
    goto BB56
  }
  BB56 {
    _97 <- ([#"../result.rs" 30 12 30 34] _98 = ([#"../result.rs" 30 32 30 34] (-1 : int32)));
    _96 <- not _97;
    switch (_96)
      | False -> goto BB58
      | True -> goto BB57
      end
  }
  BB57 {
    absurd
  }
  BB58 {
    _95 <- ();
    _105 <- ok_1;
    _104 <- ([#"../result.rs" 33 12 33 23] Unwrap3.unwrap _105);
    goto BB59
  }
  BB59 {
    _103 <- ([#"../result.rs" 33 12 33 28] _104 = ([#"../result.rs" 33 27 33 28] (1 : int32)));
    _102 <- not _103;
    switch (_102)
      | False -> goto BB61
      | True -> goto BB60
      end
  }
  BB60 {
    absurd
  }
  BB61 {
    _101 <- ();
    _111 <- err_2;
    _110 <- ([#"../result.rs" 37 12 37 28] UnwrapErr2.unwrap_err _111);
    goto BB62
  }
  BB62 {
    _109 <- ([#"../result.rs" 37 12 37 34] _110 = ([#"../result.rs" 37 32 37 34] (-1 : int32)));
    _108 <- not _109;
    switch (_108)
      | False -> goto BB64
      | True -> goto BB63
      end
  }
  BB63 {
    absurd
  }
  BB64 {
    _107 <- ();
    _117 <- ok_1;
    _116 <- ([#"../result.rs" 40 12 40 27] UnwrapOr0.unwrap_or _117 ([#"../result.rs" 40 25 40 26] (0 : int32)));
    goto BB65
  }
  BB65 {
    _115 <- ([#"../result.rs" 40 12 40 32] _116 = ([#"../result.rs" 40 31 40 32] (1 : int32)));
    _114 <- not _115;
    switch (_114)
      | False -> goto BB67
      | True -> goto BB66
      end
  }
  BB66 {
    absurd
  }
  BB67 {
    _113 <- ();
    _123 <- err_2;
    _122 <- ([#"../result.rs" 41 12 41 28] UnwrapOr0.unwrap_or _123 ([#"../result.rs" 41 26 41 27] (0 : int32)));
    goto BB68
  }
  BB68 {
    _121 <- ([#"../result.rs" 41 12 41 33] _122 = ([#"../result.rs" 41 32 41 33] (0 : int32)));
    _120 <- not _121;
    switch (_120)
      | False -> goto BB70
      | True -> goto BB69
      end
  }
  BB69 {
    absurd
  }
  BB70 {
    _119 <- ();
    _129 <- ok_1;
    _128 <- ([#"../result.rs" 43 12 43 34] UnwrapOrDefault0.unwrap_or_default _129);
    goto BB71
  }
  BB71 {
    _127 <- ([#"../result.rs" 43 12 43 39] _128 = ([#"../result.rs" 43 38 43 39] (1 : int32)));
    _126 <- not _127;
    switch (_126)
      | False -> goto BB73
      | True -> goto BB72
      end
  }
  BB72 {
    absurd
  }
  BB73 {
    _125 <- ();
    _135 <- err_2;
    _134 <- ([#"../result.rs" 44 12 44 35] UnwrapOrDefault0.unwrap_or_default _135);
    goto BB74
  }
  BB74 {
    _133 <- ([#"../result.rs" 44 12 44 40] _134 = ([#"../result.rs" 44 39 44 40] (0 : int32)));
    _132 <- not _133;
    switch (_132)
      | False -> goto BB76
      | True -> goto BB75
      end
  }
  BB75 {
    absurd
  }
  BB76 {
    _131 <- ();
    _142 <- ok_1;
    _143 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 47 30 47 32] (-2 : int32));
    _141 <- ([#"../result.rs" 47 12 47 34] And0.and _142 _143);
    goto BB77
  }
  BB77 {
    _140 <- ([#"../result.rs" 47 12 47 47] UnwrapErr2.unwrap_err _141);
    goto BB78
  }
  BB78 {
    _139 <- ([#"../result.rs" 47 12 47 53] _140 = ([#"../result.rs" 47 51 47 53] (-2 : int32)));
    _138 <- not _139;
    switch (_138)
      | False -> goto BB80
      | True -> goto BB79
      end
  }
  BB79 {
    absurd
  }
  BB80 {
    _137 <- ();
    _150 <- ok_1;
    _151 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 48 22 48 23] (2 : int32));
    _149 <- ([#"../result.rs" 48 12 48 25] And0.and _150 _151);
    goto BB81
  }
  BB81 {
    _148 <- ([#"../result.rs" 48 12 48 34] Unwrap3.unwrap _149);
    goto BB82
  }
  BB82 {
    _147 <- ([#"../result.rs" 48 12 48 39] _148 = ([#"../result.rs" 48 38 48 39] (2 : int32)));
    _146 <- not _147;
    switch (_146)
      | False -> goto BB84
      | True -> goto BB83
      end
  }
  BB83 {
    absurd
  }
  BB84 {
    _145 <- ();
    _158 <- err_2;
    _159 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 49 31 49 33] (-2 : int32));
    _157 <- ([#"../result.rs" 49 12 49 35] And0.and _158 _159);
    goto BB85
  }
  BB85 {
    _156 <- ([#"../result.rs" 49 12 49 48] UnwrapErr2.unwrap_err _157);
    goto BB86
  }
  BB86 {
    _155 <- ([#"../result.rs" 49 12 49 54] _156 = ([#"../result.rs" 49 52 49 54] (-1 : int32)));
    _154 <- not _155;
    switch (_154)
      | False -> goto BB88
      | True -> goto BB87
      end
  }
  BB87 {
    absurd
  }
  BB88 {
    _153 <- ();
    _166 <- err_2;
    _167 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 50 23 50 24] (2 : int32));
    _165 <- ([#"../result.rs" 50 12 50 26] And0.and _166 _167);
    goto BB89
  }
  BB89 {
    _164 <- ([#"../result.rs" 50 12 50 39] UnwrapErr2.unwrap_err _165);
    goto BB90
  }
  BB90 {
    _163 <- ([#"../result.rs" 50 12 50 45] _164 = ([#"../result.rs" 50 43 50 45] (-1 : int32)));
    _162 <- not _163;
    switch (_162)
      | False -> goto BB92
      | True -> goto BB91
      end
  }
  BB91 {
    absurd
  }
  BB92 {
    _161 <- ();
    _174 <- ok_1;
    _175 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 53 22 53 24] (-2 : int32));
    _173 <- ([#"../result.rs" 53 12 53 26] Or0.or _174 _175);
    goto BB93
  }
  BB93 {
    _172 <- ([#"../result.rs" 53 12 53 35] Unwrap3.unwrap _173);
    goto BB94
  }
  BB94 {
    _171 <- ([#"../result.rs" 53 12 53 40] _172 = ([#"../result.rs" 53 39 53 40] (1 : int32)));
    _170 <- not _171;
    switch (_170)
      | False -> goto BB96
      | True -> goto BB95
      end
  }
  BB95 {
    absurd
  }
  BB96 {
    _169 <- ();
    _182 <- ok_1;
    _183 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 54 28 54 29] (2 : int32));
    _181 <- ([#"../result.rs" 54 12 54 31] Or0.or _182 _183);
    goto BB97
  }
  BB97 {
    _180 <- ([#"../result.rs" 54 12 54 40] Unwrap3.unwrap _181);
    goto BB98
  }
  BB98 {
    _179 <- ([#"../result.rs" 54 12 54 45] _180 = ([#"../result.rs" 54 44 54 45] (1 : int32)));
    _178 <- not _179;
    switch (_178)
      | False -> goto BB100
      | True -> goto BB99
      end
  }
  BB99 {
    absurd
  }
  BB100 {
    _177 <- ();
    _190 <- err_2;
    _191 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 55 23 55 25] (-2 : int32));
    _189 <- ([#"../result.rs" 55 12 55 27] Or0.or _190 _191);
    goto BB101
  }
  BB101 {
    _188 <- ([#"../result.rs" 55 12 55 40] UnwrapErr2.unwrap_err _189);
    goto BB102
  }
  BB102 {
    _187 <- ([#"../result.rs" 55 12 55 46] _188 = ([#"../result.rs" 55 44 55 46] (-2 : int32)));
    _186 <- not _187;
    switch (_186)
      | False -> goto BB104
      | True -> goto BB103
      end
  }
  BB103 {
    absurd
  }
  BB104 {
    _185 <- ();
    _198 <- err_2;
    _199 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 56 29 56 30] (2 : int32));
    _197 <- ([#"../result.rs" 56 12 56 32] Or0.or _198 _199);
    goto BB105
  }
  BB105 {
    _196 <- ([#"../result.rs" 56 12 56 41] Unwrap3.unwrap _197);
    goto BB106
  }
  BB106 {
    _195 <- ([#"../result.rs" 56 12 56 46] _196 = ([#"../result.rs" 56 45 56 46] (2 : int32)));
    _194 <- not _195;
    switch (_194)
      | False -> goto BB108
      | True -> goto BB107
      end
  }
  BB107 {
    absurd
  }
  BB108 {
    _193 <- ();
    _207 <- ok_1;
    _206 <- ([#"../result.rs" 59 12 59 23] AsRef0.as_ref _207);
    goto BB109
  }
  BB109 {
    _205 <- ([#"../result.rs" 59 12 59 32] Copied0.copied _206);
    goto BB110
  }
  BB110 {
    _204 <- ([#"../result.rs" 59 12 59 41] Unwrap4.unwrap _205);
    goto BB111
  }
  BB111 {
    _203 <- ([#"../result.rs" 59 12 59 46] _204 = ([#"../result.rs" 59 45 59 46] (1 : int32)));
    _202 <- not _203;
    switch (_202)
      | False -> goto BB113
      | True -> goto BB112
      end
  }
  BB112 {
    absurd
  }
  BB113 {
    _201 <- ();
    _216 <- err_2;
    _215 <- ([#"../result.rs" 60 13 60 25] AsRef0.as_ref _216);
    goto BB114
  }
  BB114 {
    _214 <- ([#"../result.rs" 60 13 60 34] Copied0.copied _215);
    goto BB115
  }
  BB115 {
    _213 <- ([#"../result.rs" 60 13 60 47] UnwrapErr3.unwrap_err _214);
    goto BB116
  }
  BB116 {
    _212 <- _213;
    _211 <- ([#"../result.rs" 60 12 60 53] _212 = ([#"../result.rs" 60 51 60 53] (-1 : int32)));
    _210 <- not _211;
    switch (_210)
      | False -> goto BB118
      | True -> goto BB117
      end
  }
  BB117 {
    absurd
  }
  BB118 {
    _209 <- ();
    _224 <- borrow_mut ok_1;
    ok_1 <-  ^ _224;
    _223 <- ([#"../result.rs" 61 12 61 23] AsMut0.as_mut _224);
    goto BB119
  }
  BB119 {
    _222 <- ([#"../result.rs" 61 12 61 32] Copied1.copied _223);
    goto BB120
  }
  BB120 {
    _221 <- ([#"../result.rs" 61 12 61 41] Unwrap5.unwrap _222);
    goto BB121
  }
  BB121 {
    _220 <- ([#"../result.rs" 61 12 61 46] _221 = ([#"../result.rs" 61 45 61 46] (1 : int32)));
    _219 <- not _220;
    switch (_219)
      | False -> goto BB123
      | True -> goto BB122
      end
  }
  BB122 {
    absurd
  }
  BB123 {
    _218 <- ();
    _233 <- borrow_mut err_2;
    err_2 <-  ^ _233;
    _232 <- ([#"../result.rs" 62 13 62 25] AsMut0.as_mut _233);
    goto BB124
  }
  BB124 {
    _231 <- ([#"../result.rs" 62 13 62 34] Copied1.copied _232);
    goto BB125
  }
  BB125 {
    _230 <- ([#"../result.rs" 62 13 62 47] UnwrapErr4.unwrap_err _231);
    goto BB126
  }
  BB126 {
    _229 <-  * _230;
    assume { Resolve0.resolve _230 };
    _228 <- ([#"../result.rs" 62 12 62 53] _229 = ([#"../result.rs" 62 51 62 53] (-1 : int32)));
    _227 <- not _228;
    switch (_227)
      | False -> goto BB128
      | True -> goto BB127
      end
  }
  BB127 {
    absurd
  }
  BB128 {
    _226 <- ();
    _241 <- ok_1;
    _240 <- ([#"../result.rs" 64 12 64 23] AsRef0.as_ref _241);
    goto BB129
  }
  BB129 {
    _239 <- ([#"../result.rs" 64 12 64 32] Cloned0.cloned _240);
    goto BB130
  }
  BB130 {
    _238 <- ([#"../result.rs" 64 12 64 41] Unwrap4.unwrap _239);
    goto BB131
  }
  BB131 {
    _237 <- ([#"../result.rs" 64 12 64 46] _238 = ([#"../result.rs" 64 45 64 46] (1 : int32)));
    _236 <- not _237;
    switch (_236)
      | False -> goto BB133
      | True -> goto BB132
      end
  }
  BB132 {
    absurd
  }
  BB133 {
    _235 <- ();
    _250 <- err_2;
    _249 <- ([#"../result.rs" 65 13 65 25] AsRef0.as_ref _250);
    goto BB134
  }
  BB134 {
    _248 <- ([#"../result.rs" 65 13 65 34] Cloned0.cloned _249);
    goto BB135
  }
  BB135 {
    _247 <- ([#"../result.rs" 65 13 65 47] UnwrapErr3.unwrap_err _248);
    goto BB136
  }
  BB136 {
    _246 <- _247;
    _245 <- ([#"../result.rs" 65 12 65 53] _246 = ([#"../result.rs" 65 51 65 53] (-1 : int32)));
    _244 <- not _245;
    switch (_244)
      | False -> goto BB138
      | True -> goto BB137
      end
  }
  BB137 {
    absurd
  }
  BB138 {
    _243 <- ();
    _258 <- borrow_mut ok_1;
    ok_1 <-  ^ _258;
    _257 <- ([#"../result.rs" 66 12 66 23] AsMut0.as_mut _258);
    goto BB139
  }
  BB139 {
    _256 <- ([#"../result.rs" 66 12 66 32] Cloned1.cloned _257);
    goto BB140
  }
  BB140 {
    _255 <- ([#"../result.rs" 66 12 66 41] Unwrap5.unwrap _256);
    goto BB141
  }
  BB141 {
    _254 <- ([#"../result.rs" 66 12 66 46] _255 = ([#"../result.rs" 66 45 66 46] (1 : int32)));
    _253 <- not _254;
    switch (_253)
      | False -> goto BB143
      | True -> goto BB142
      end
  }
  BB142 {
    absurd
  }
  BB143 {
    _252 <- ();
    _267 <- borrow_mut err_2;
    err_2 <-  ^ _267;
    _266 <- ([#"../result.rs" 67 13 67 25] AsMut0.as_mut _267);
    goto BB144
  }
  BB144 {
    _265 <- ([#"../result.rs" 67 13 67 34] Cloned1.cloned _266);
    goto BB145
  }
  BB145 {
    _264 <- ([#"../result.rs" 67 13 67 47] UnwrapErr4.unwrap_err _265);
    goto BB146
  }
  BB146 {
    _263 <-  * _264;
    assume { Resolve0.resolve _264 };
    _262 <- ([#"../result.rs" 67 12 67 53] _263 = ([#"../result.rs" 67 51 67 53] (-1 : int32)));
    _261 <- not _262;
    switch (_261)
      | False -> goto BB148
      | True -> goto BB147
      end
  }
  BB147 {
    absurd
  }
  BB148 {
    _260 <- ();
    _270 <- Core_Option_Option_Type.C_None;
    res_269 <- Core_Result_Result_Type.C_Ok _270;
    _276 <- res_269;
    _275 <- ([#"../result.rs" 71 12 71 27] Transpose0.transpose _276);
    goto BB149
  }
  BB149 {
    _274 <- _275;
    _273 <- ([#"../result.rs" 71 12 71 37] IsNone1.is_none _274);
    goto BB150
  }
  BB150 {
    _272 <- not _273;
    switch (_272)
      | False -> goto BB152
      | True -> goto BB151
      end
  }
  BB151 {
    absurd
  }
  BB152 {
    _271 <- ();
    _279 <- Core_Option_Option_Type.C_Some ([#"../result.rs" 72 48 72 49] (1 : int32));
    res_278 <- Core_Result_Result_Type.C_Ok _279;
    _286 <- res_278;
    _285 <- ([#"../result.rs" 73 12 73 27] Transpose0.transpose _286);
    goto BB153
  }
  BB153 {
    _284 <- ([#"../result.rs" 73 12 73 36] Unwrap6.unwrap _285);
    goto BB154
  }
  BB154 {
    _283 <- ([#"../result.rs" 73 12 73 45] Unwrap3.unwrap _284);
    goto BB155
  }
  BB155 {
    _282 <- ([#"../result.rs" 73 12 73 50] _283 = ([#"../result.rs" 73 49 73 50] (1 : int32)));
    _281 <- not _282;
    switch (_281)
      | False -> goto BB157
      | True -> goto BB156
      end
  }
  BB156 {
    absurd
  }
  BB157 {
    _280 <- ();
    res_288 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 74 44 74 46] (-1 : int32));
    _295 <- res_288;
    _294 <- ([#"../result.rs" 75 12 75 27] Transpose0.transpose _295);
    goto BB158
  }
  BB158 {
    _293 <- ([#"../result.rs" 75 12 75 36] Unwrap6.unwrap _294);
    goto BB159
  }
  BB159 {
    _292 <- ([#"../result.rs" 75 12 75 49] UnwrapErr2.unwrap_err _293);
    goto BB160
  }
  BB160 {
    _291 <- ([#"../result.rs" 75 12 75 55] _292 = ([#"../result.rs" 75 53 75 55] (-1 : int32)));
    _290 <- not _291;
    switch (_290)
      | False -> goto BB162
      | True -> goto BB161
      end
  }
  BB161 {
    absurd
  }
  BB162 {
    _289 <- ();
    _0 <- ();
    return _0
  }
  
end
