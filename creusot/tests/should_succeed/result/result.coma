
module Core_Result_Result_Type
  type t_result 't 'e =
    | C_Ok 't
    | C_Err 'e
    
  function any_l (_ : 'b) : 'a
  let rec ok < 't > < 'e > (input:t_result 't 'e) (ret  (field_0:'t))= any
    [ good (field_0:'t)-> {C_Ok field_0 = input} (! ret {field_0})
    | bad (field_0:'t)-> {C_Ok field_0 <> input} {false} any ]
    
  let rec err < 't > < 'e > (input:t_result 't 'e) (ret  (field_0:'e))= any
    [ good (field_0:'e)-> {C_Err field_0 = input} (! ret {field_0})
    | bad (field_0:'e)-> {C_Err field_0 <> input} {false} any ]
    
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
  function any_l (_ : 'b) : 'a
  let rec none < 't > (input:t_option 't) (ret  )= any
    [ good -> {C_None  = input} (! ret) | bad -> {C_None  <> input} {false} any ]
    
  let rec some < 't > (input:t_option 't) (ret  (field_0:'t))= any
    [ good (field_0:'t)-> {C_Some field_0 = input} (! ret {field_0})
    | bad (field_0:'t)-> {C_Some field_0 <> input} {false} any ]
    
end
module Result_TestResult
  use prelude.Int32
  use Core_Result_Result_Type as Core_Result_Result_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  predicate invariant'14 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'14 (self:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'14 self} (! return' {result}) ]
    
  predicate inv'14 (_x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32))
  let rec inv'14 (_x:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'14 _x} (! return' {result}) ]
    
  axiom inv'14 : forall x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) . inv'14 x
  = true
  predicate invariant'13 (self : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'13 (self:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'13 self} (! return' {result}) ]
    
  predicate inv'13 (_x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32))
  let rec inv'13 (_x:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'13 _x} (! return' {result}) ]
    
  axiom inv'13 : forall x : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) . inv'13 x
  = true
  predicate invariant'12 (self : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'12 (self:Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'12 self} (! return' {result}) ]
    
  predicate inv'12 (_x : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32)
  let rec inv'12 (_x:Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'12 _x} (! return' {result}) ]
    
  axiom inv'12 : forall x : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 . inv'12 x
  = true
  use prelude.Borrow
  predicate invariant'11 (self : Core_Result_Result_Type.t_result int32 (borrowed int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'11 (self:Core_Result_Result_Type.t_result int32 (borrowed int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'11 self} (! return' {result}) ]
    
  predicate inv'11 (_x : Core_Result_Result_Type.t_result int32 (borrowed int32))
  let rec inv'11 (_x:Core_Result_Result_Type.t_result int32 (borrowed int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'11 _x} (! return' {result}) ]
    
  axiom inv'11 : forall x : Core_Result_Result_Type.t_result int32 (borrowed int32) . inv'11 x = true
  predicate invariant'10 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'10 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'10 self} (! return' {result}) ]
    
  predicate inv'10 (_x : Core_Result_Result_Type.t_result int32 int32)
  let rec inv'10 (_x:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'10 _x} (! return' {result}) ]
    
  axiom inv'10 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv'10 x = true
  predicate invariant'9 (self : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'9 (self:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'9 self} (! return' {result}) ]
    
  predicate inv'9 (_x : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32))
  let rec inv'9 (_x:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'9 _x} (! return' {result}) ]
    
  axiom inv'9 : forall x : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) . inv'9 x = true
  predicate invariant'8 (self : borrowed int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'8 (self:borrowed int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'8 self} (! return' {result}) ]
    
  predicate inv'8 (_x : borrowed int32)
  let rec inv'8 (_x:borrowed int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'8 _x} (! return' {result}) ]
    
  axiom inv'8 : forall x : borrowed int32 . inv'8 x = true
  predicate invariant'7 (self : borrowed (Core_Result_Result_Type.t_result int32 int32)) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'7 (self:borrowed (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'7 self} (! return' {result}) ]
    
  predicate inv'7 (_x : borrowed (Core_Result_Result_Type.t_result int32 int32))
  let rec inv'7 (_x:borrowed (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'7 _x} (! return' {result}) ]
    
  axiom inv'7 : forall x : borrowed (Core_Result_Result_Type.t_result int32 int32) . inv'7 x = true
  predicate invariant'6 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'6 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'6 self} (! return' {result}) ]
    
  predicate inv'6 (_x : Core_Result_Result_Type.t_result int32 int32)
  let rec inv'6 (_x:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'6 _x} (! return' {result}) ]
    
  axiom inv'6 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv'6 x = true
  predicate invariant'5 (self : int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'5 (self:int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'5 self} (! return' {result}) ]
    
  predicate inv'5 (_x : int32)
  let rec inv'5 (_x:int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'5 _x} (! return' {result}) ]
    
  axiom inv'5 : forall x : int32 . inv'5 x = true
  predicate invariant'4 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'4 (self:Core_Option_Option_Type.t_option int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'4 self} (! return' {result}) ]
    
  predicate inv'4 (_x : Core_Option_Option_Type.t_option int32)
  let rec inv'4 (_x:Core_Option_Option_Type.t_option int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'4 _x} (! return' {result}) ]
    
  axiom inv'4 : forall x : Core_Option_Option_Type.t_option int32 . inv'4 x = true
  predicate invariant'3 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'3 (self:Core_Option_Option_Type.t_option int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'3 self} (! return' {result}) ]
    
  predicate inv'3 (_x : Core_Option_Option_Type.t_option int32)
  let rec inv'3 (_x:Core_Option_Option_Type.t_option int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'3 _x} (! return' {result}) ]
    
  axiom inv'3 : forall x : Core_Option_Option_Type.t_option int32 . inv'3 x = true
  predicate invariant'2 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'2 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'2 self} (! return' {result}) ]
    
  predicate inv'2 (_x : Core_Result_Result_Type.t_result int32 int32)
  let rec inv'2 (_x:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'2 _x} (! return' {result}) ]
    
  axiom inv'2 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv'2 x = true
  predicate invariant'1 (self : int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'1 (self:int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'1 self} (! return' {result}) ]
    
  predicate inv'1 (_x : int32)
  let rec inv'1 (_x:int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'1 _x} (! return' {result}) ]
    
  axiom inv'1 : forall x : int32 . inv'1 x = true
  predicate invariant'0 (self : Core_Result_Result_Type.t_result int32 int32) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  let rec invariant'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'0 self} (! return' {result}) ]
    
  predicate inv'0 (_x : Core_Result_Result_Type.t_result int32 int32)
  let rec inv'0 (_x:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'0 _x} (! return' {result}) ]
    
  axiom inv'0 : forall x : Core_Result_Result_Type.t_result int32 int32 . inv'0 x = true
  use prelude.Intrinsic
  let rec unwrap'6 (self:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:Core_Result_Result_Type.t_result int32 int32))= {[@expl:precondition] inv'13 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/option.rs" 29 0 140 1] self
    <> Core_Option_Option_Type.C_None}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 int32)-> {inv'2 result}
      {[#"../../../../../creusot-contracts/src/std/option.rs" 29 0 140 1] Core_Option_Option_Type.C_Some result = self}
      (! return' {result}) ]
    
  let rec is_none'1 (self:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:bool))= {[@expl:precondition] inv'14 self}
    any
    [ return' (result:bool)-> {[#"../../../../../creusot-contracts/src/std/option.rs" 38 26 38 51] result
      = (self = Core_Option_Option_Type.C_None)}
      (! return' {result}) ]
    
  let rec transpose'0 (self:Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32) (return'  (ret:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)))= {[@expl:precondition] inv'12 self}
    any
    [ return' (result:Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32))-> {inv'13 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 130 16 130 82] forall e : int32 . inv'1 e
       -> self = Core_Result_Result_Type.C_Err e
       -> result = Core_Option_Option_Type.C_Some (Core_Result_Result_Type.C_Err e)}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 129 16 129 86] forall t : int32 . inv'1 t
       -> self = Core_Result_Result_Type.C_Ok (Core_Option_Option_Type.C_Some t)
       -> result = Core_Option_Option_Type.C_Some (Core_Result_Result_Type.C_Ok t)}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 128 16 128 63] self
      = Core_Result_Result_Type.C_Ok (Core_Option_Option_Type.C_None)  -> result = Core_Option_Option_Type.C_None}
      (! return' {result}) ]
    
  predicate resolve'0 (self : borrowed int32) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  let rec resolve'0 (self:borrowed int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'0 self} (! return' {result}) ]
    
  let rec cloned'1 (self:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) (return'  (ret:Core_Result_Result_Type.t_result int32 (borrowed int32)))= {[@expl:precondition] inv'9 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 (borrowed int32))-> {inv'11 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 120 16 120 76] forall e : borrowed int32 . inv'8 e
       -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 119 16 119 95] forall t : borrowed int32 . inv'8 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok ( * t) /\ resolve'0 t}
      (! return' {result}) ]
    
  let rec cloned'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:Core_Result_Result_Type.t_result int32 int32))= {[@expl:precondition] inv'6 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 int32)-> {inv'10 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 105 16 105 76] forall e : int32 . inv'5 e
       -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 104 16 104 76] forall t : int32 . inv'5 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t}
      (! return' {result}) ]
    
  let rec unwrap_err'4 (self:Core_Result_Result_Type.t_result int32 (borrowed int32)) (return'  (ret:borrowed int32))= {[@expl:precondition] inv'11 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 67 16 67 56] exists e : borrowed int32 . inv'8 e
    /\ self = Core_Result_Result_Type.C_Err e}
    any
    [ return' (result:borrowed int32)-> {inv'8 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Err result = self}
      (! return' {result}) ]
    
  let rec unwrap'5 (self:Core_Result_Result_Type.t_result int32 (borrowed int32)) (return'  (ret:int32))= {[@expl:precondition] inv'11 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 53 16 53 55] exists t : int32 . inv'1 t
    /\ self = Core_Result_Result_Type.C_Ok t}
    any
    [ return' (result:int32)-> {inv'1 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Ok result = self}
      (! return' {result}) ]
    
  let rec copied'1 (self:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) (return'  (ret:Core_Result_Result_Type.t_result int32 (borrowed int32)))= {[@expl:precondition] inv'9 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 (borrowed int32))-> {inv'11 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 114 16 114 76] forall e : borrowed int32 . inv'8 e
       -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 113 16 113 95] forall t : borrowed int32 . inv'8 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok ( * t) /\ resolve'0 t}
      (! return' {result}) ]
    
  let rec unwrap_err'3 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:int32))= {[@expl:precondition] inv'10 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 67 16 67 56] exists e : int32 . inv'5 e
    /\ self = Core_Result_Result_Type.C_Err e}
    any
    [ return' (result:int32)-> {inv'5 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Err result = self}
      (! return' {result}) ]
    
  let rec unwrap'4 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:int32))= {[@expl:precondition] inv'10 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 53 16 53 55] exists t : int32 . inv'1 t
    /\ self = Core_Result_Result_Type.C_Ok t}
    any
    [ return' (result:int32)-> {inv'1 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Ok result = self}
      (! return' {result}) ]
    
  let rec copied'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:Core_Result_Result_Type.t_result int32 int32))= {[@expl:precondition] inv'6 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 int32)-> {inv'10 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 99 16 99 76] forall e : int32 . inv'5 e
       -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 98 16 98 76] forall t : int32 . inv'5 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t}
      (! return' {result}) ]
    
  let rec or'0 (self:Core_Result_Result_Type.t_result int32 int32) (res:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:Core_Result_Result_Type.t_result int32 int32))= {[@expl:precondition] inv'2 res}
    {[@expl:precondition] inv'2 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 int32)-> {inv'2 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 92 16 92 75] (exists e : int32 . inv'1 e
      /\ self = Core_Result_Result_Type.C_Err e)  -> result = res}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 91 16 91 74] forall t : int32 . inv'1 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t}
      (! return' {result}) ]
    
  let rec and'0 (self:Core_Result_Result_Type.t_result int32 int32) (res:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:Core_Result_Result_Type.t_result int32 int32))= {[@expl:precondition] inv'2 res}
    {[@expl:precondition] inv'2 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 int32)-> {inv'2 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 87 16 87 76] forall e : int32 . inv'1 e
       -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 86 16 86 74] (exists t : int32 . inv'1 t
      /\ self = Core_Result_Result_Type.C_Ok t)  -> result = res}
      (! return' {result}) ]
    
  use prelude.Int
  predicate is_default'0 (self : int32) =
    [#"../../../../../creusot-contracts/src/std/num.rs" 30 28 30 32] self = (0 : int32)
  let rec is_default'0 (self:int32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = is_default'0 self} (! return' {result}) ]
    
  let rec unwrap_or_default'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:int32))= {[@expl:precondition] inv'2 self}
    any
    [ return' (result:int32)-> {inv'1 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 80 16 80 81] (exists e : int32 . inv'1 e
      /\ self = Core_Result_Result_Type.C_Err e)  -> is_default'0 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 79 16 79 70] forall t : int32 . inv'1 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = t}
      (! return' {result}) ]
    
  let rec unwrap_or'0 (self:Core_Result_Result_Type.t_result int32 int32) (default:int32) (return'  (ret:int32))= {[@expl:precondition] inv'1 default}
    {[@expl:precondition] inv'2 self}
    any
    [ return' (result:int32)-> {inv'1 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 75 16 75 79] (exists e : int32 . inv'1 e
      /\ self = Core_Result_Result_Type.C_Err e)  -> result = default}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 74 16 74 70] forall t : int32 . inv'1 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = t}
      (! return' {result}) ]
    
  let rec unwrap_err'2 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:int32))= {[@expl:precondition] inv'2 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 67 16 67 56] exists e : int32 . inv'1 e
    /\ self = Core_Result_Result_Type.C_Err e}
    any
    [ return' (result:int32)-> {inv'1 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Err result = self}
      (! return' {result}) ]
    
  let rec unwrap_err'1 (self:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) (return'  (ret:borrowed int32))= {[@expl:precondition] inv'9 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 67 16 67 56] exists e : borrowed int32 . inv'8 e
    /\ self = Core_Result_Result_Type.C_Err e}
    any
    [ return' (result:borrowed int32)-> {inv'8 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Err result = self}
      (! return' {result}) ]
    
  let rec unwrap'3 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:int32))= {[@expl:precondition] inv'2 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 53 16 53 55] exists t : int32 . inv'1 t
    /\ self = Core_Result_Result_Type.C_Ok t}
    any
    [ return' (result:int32)-> {inv'1 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Ok result = self}
      (! return' {result}) ]
    
  let rec unwrap'2 (self:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) (return'  (ret:borrowed int32))= {[@expl:precondition] inv'9 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 53 16 53 55] exists t : borrowed int32 . inv'8 t
    /\ self = Core_Result_Result_Type.C_Ok t}
    any
    [ return' (result:borrowed int32)-> {inv'8 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Ok result = self}
      (! return' {result}) ]
    
  let rec as_mut'0 (self:borrowed (Core_Result_Result_Type.t_result int32 int32)) (return'  (ret:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)))= {[@expl:precondition] inv'7 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32))-> {inv'9 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 46 16 49 18] exists t : borrowed int32 . inv'8 t
      /\ ( * self = Core_Result_Result_Type.C_Ok ( * t)
      /\  ^ self = Core_Result_Result_Type.C_Ok ( ^ t) /\ result = Core_Result_Result_Type.C_Ok t
      \/ (exists e : borrowed int32 . inv'8 e
      /\  * self = Core_Result_Result_Type.C_Err ( * e)
      /\  ^ self = Core_Result_Result_Type.C_Err ( ^ e) /\ result = Core_Result_Result_Type.C_Err e))}
      (! return' {result}) ]
    
  let rec unwrap_err'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:int32))= {[@expl:precondition] inv'6 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 67 16 67 56] exists e : int32 . inv'5 e
    /\ self = Core_Result_Result_Type.C_Err e}
    any
    [ return' (result:int32)-> {inv'5 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Err result = self}
      (! return' {result}) ]
    
  let rec unwrap'1 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:int32))= {[@expl:precondition] inv'6 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/result.rs" 53 16 53 55] exists t : int32 . inv'5 t
    /\ self = Core_Result_Result_Type.C_Ok t}
    any
    [ return' (result:int32)-> {inv'5 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 18 0 135 1] Core_Result_Result_Type.C_Ok result = self}
      (! return' {result}) ]
    
  let rec as_ref'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:Core_Result_Result_Type.t_result int32 int32))= {[@expl:precondition] inv'0 self}
    any
    [ return' (result:Core_Result_Result_Type.t_result int32 int32)-> {inv'6 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 42 16 42 79] forall e : int32 . inv'5 e
       -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Result_Result_Type.C_Err e}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 41 16 41 77] forall t : int32 . inv'5 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Result_Result_Type.C_Ok t}
      (! return' {result}) ]
    
  let rec err'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:Core_Option_Option_Type.t_option int32))= {[@expl:precondition] inv'2 self}
    any
    [ return' (result:Core_Option_Option_Type.t_option int32)-> {inv'3 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 37 16 37 77] forall e : int32 . inv'1 e
       -> self = Core_Result_Result_Type.C_Err e  -> result = Core_Option_Option_Type.C_Some e}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 36 16 36 75] (exists t : int32 . inv'1 t
      /\ self = Core_Result_Result_Type.C_Ok t)  -> result = Core_Option_Option_Type.C_None}
      (! return' {result}) ]
    
  let rec is_none'0 (self:Core_Option_Option_Type.t_option int32) (return'  (ret:bool))= {[@expl:precondition] inv'4 self}
    any
    [ return' (result:bool)-> {[#"../../../../../creusot-contracts/src/std/option.rs" 38 26 38 51] result
      = (self = Core_Option_Option_Type.C_None)}
      (! return' {result}) ]
    
  let rec unwrap'0 (self:Core_Option_Option_Type.t_option int32) (return'  (ret:int32))= {[@expl:precondition] inv'3 self}
    {[@expl:precondition] [#"../../../../../creusot-contracts/src/std/option.rs" 29 0 140 1] self
    <> Core_Option_Option_Type.C_None}
    any
    [ return' (result:int32)-> {inv'1 result}
      {[#"../../../../../creusot-contracts/src/std/option.rs" 29 0 140 1] Core_Option_Option_Type.C_Some result = self}
      (! return' {result}) ]
    
  let rec ok'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:Core_Option_Option_Type.t_option int32))= {[@expl:precondition] inv'2 self}
    any
    [ return' (result:Core_Option_Option_Type.t_option int32)-> {inv'3 result}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 32 16 32 76] (exists e : int32 . inv'1 e
      /\ self = Core_Result_Result_Type.C_Err e)  -> result = Core_Option_Option_Type.C_None}
      {[#"../../../../../creusot-contracts/src/std/result.rs" 31 16 31 76] forall t : int32 . inv'1 t
       -> self = Core_Result_Result_Type.C_Ok t  -> result = Core_Option_Option_Type.C_Some t}
      (! return' {result}) ]
    
  let rec is_err'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= {[@expl:precondition] inv'0 self}
    any
    [ return' (result:bool)-> {[#"../../../../../creusot-contracts/src/std/result.rs" 27 26 27 64] result
      = (exists e : int32 . inv'1 e /\ self = Core_Result_Result_Type.C_Err e)}
      (! return' {result}) ]
    
  let rec is_ok'0 (self:Core_Result_Result_Type.t_result int32 int32) (return'  (ret:bool))= {[@expl:precondition] inv'0 self}
    any
    [ return' (result:bool)-> {[#"../../../../../creusot-contracts/src/std/result.rs" 23 26 23 63] result
      = (exists t : int32 . inv'1 t /\ self = Core_Result_Result_Type.C_Ok t)}
      (! return' {result}) ]
    
  let rec test_result (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 = 
        [ &ok <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 4 38 4 39] (1 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = 
        [ &err <- Core_Result_Result_Type.C_Err ([#"../result.rs" 5 40 5 42] (-1 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s2
      | s2 = is_ok'0 {ok} (fun (_ret':bool) ->  [ &_4 <- _ret' ] s3)
      | s3 = bb1 ]
      
    | bb1 = s0 [ s0 = any [ br0 -> {_4 = false} (! bb6) | br1 -> {_4} (! bb2) ]  ] 
    | bb2 = s0 [ s0 = is_ok'0 {err} (fun (_ret':bool) ->  [ &_6 <- _ret' ] s1) | s1 = bb3 ] 
    | bb3 = s0 [ s0 = any [ br0 -> {_6 = false} (! bb5) | br1 -> {_6} (! bb4) ]  ] 
    | bb4 = s0 [ s0 = bb7 ] 
    | bb5 = s0 [ s0 = is_err'0 {err} (fun (_ret':bool) ->  [ &_10 <- _ret' ] s1) | s1 = bb8 ] 
    | bb8 = s0 [ s0 = any [ br0 -> {_10 = false} (! bb13) | br1 -> {_10} (! bb9) ]  ] 
    | bb9 = s0 [ s0 = is_err'0 {ok} (fun (_ret':bool) ->  [ &_12 <- _ret' ] s1) | s1 = bb10 ] 
    | bb10 = s0 [ s0 = any [ br0 -> {_12 = false} (! bb12) | br1 -> {_12} (! bb11) ]  ] 
    | bb11 = s0 [ s0 = bb14 ] 
    | bb12 = s0
      [ s0 = ok'0 {ok} (fun (_ret':Core_Option_Option_Type.t_option int32) ->  [ &_18 <- _ret' ] s1) | s1 = bb15 ]
      
    | bb15 = s0 [ s0 = unwrap'0 {_18} (fun (_ret':int32) ->  [ &_17 <- _ret' ] s1) | s1 = bb16 ] 
    | bb16 = s0
      [ s0 = Int32.eq {_17} {[#"../result.rs" 13 32 13 33] (1 : int32)}
          (fun (_ret':bool) ->  [ &_16 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_17 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_16 = false} (! bb18) | br1 -> {_16} (! bb17) ]  ]
      
    | bb17 = s0
      [ s0 = ok'0 {err} (fun (_ret':Core_Option_Option_Type.t_option int32) ->  [ &_24 <- _ret' ] s1) | s1 = bb19 ]
      
    | bb19 = s0 [ s0 = is_none'0 {_24} (fun (_ret':bool) ->  [ &_22 <- _ret' ] s1) | s1 = bb20 ] 
    | bb20 = s0 [ s0 = any [ br0 -> {_22 = false} (! bb22) | br1 -> {_22} (! bb21) ]  ] 
    | bb21 = s0
      [ s0 = err'0 {ok} (fun (_ret':Core_Option_Option_Type.t_option int32) ->  [ &_30 <- _ret' ] s1) | s1 = bb23 ]
      
    | bb23 = s0 [ s0 = is_none'0 {_30} (fun (_ret':bool) ->  [ &_28 <- _ret' ] s1) | s1 = bb24 ] 
    | bb24 = s0 [ s0 = any [ br0 -> {_28 = false} (! bb26) | br1 -> {_28} (! bb25) ]  ] 
    | bb25 = s0
      [ s0 = err'0 {err} (fun (_ret':Core_Option_Option_Type.t_option int32) ->  [ &_36 <- _ret' ] s1) | s1 = bb27 ]
      
    | bb27 = s0 [ s0 = unwrap'0 {_36} (fun (_ret':int32) ->  [ &_35 <- _ret' ] s1) | s1 = bb28 ] 
    | bb28 = s0
      [ s0 = Int32.eq {_35} {[#"../result.rs" 17 34 17 36] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_34 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_35 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_34 = false} (! bb30) | br1 -> {_34} (! bb29) ]  ]
      
    | bb29 = s0
      [ s0 = as_ref'0 {ok} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_43 <- _ret' ] s1)
      | s1 = bb31 ]
      
    | bb31 = s0 [ s0 = unwrap'1 {_43} (fun (_ret':int32) ->  [ &_42 <- _ret' ] s1) | s1 = bb32 ] 
    | bb32 = s0
      [ s0 = Int32.eq {_42} {[#"../result.rs" 20 37 20 38] (1 : int32)} (fun (_ret':bool) ->  [ &_40 <- _ret' ] s1)
      | s1 = any [ br0 -> {_40 = false} (! bb34) | br1 -> {_40} (! bb33) ]  ]
      
    | bb33 = s0
      [ s0 = as_ref'0 {err} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_50 <- _ret' ] s1)
      | s1 = bb35 ]
      
    | bb35 = s0 [ s0 = unwrap_err'0 {_50} (fun (_ret':int32) ->  [ &_49 <- _ret' ] s1) | s1 = bb36 ] 
    | bb36 = s0
      [ s0 = Int32.eq {_49} {[#"../result.rs" 21 42 21 44] (-1 : int32)} (fun (_ret':bool) ->  [ &_47 <- _ret' ] s1)
      | s1 = any [ br0 -> {_47 = false} (! bb38) | br1 -> {_47} (! bb37) ]  ]
      
    | bb37 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {ok}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_55 <- _ret' ] 
             [ &ok <-  ^ _55 ] 
            s1)
      | s1 = as_mut'0 {_55}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_54 <- _ret' ] s2)
      | s2 = bb39 ]
      
    | bb39 = s0 [ s0 = unwrap'2 {_54} (fun (_ret':borrowed int32) ->  [ &_53 <- _ret' ] s1) | s1 = bb40 ] 
    | bb40 = s0
      [ s0 =  [ &_53 <- { _53 with current = ([#"../result.rs" 23 28 23 29] (0 : int32)) ; } ] s1
      | s1 = -{resolve'0 _53}- s2
      | s2 = unwrap'3 {ok} (fun (_ret':int32) ->  [ &_58 <- _ret' ] s3)
      | s3 = bb41 ]
      
    | bb41 = s0
      [ s0 = Int32.eq {_58} {[#"../result.rs" 24 27 24 28] (0 : int32)}
          (fun (_ret':bool) ->  [ &_57 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_58 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_57 = false} (! bb43) | br1 -> {_57} (! bb42) ]  ]
      
    | bb42 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {ok}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_63 <- _ret' ] 
             [ &ok <-  ^ _63 ] 
            s1)
      | s1 = as_mut'0 {_63}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_62 <- _ret' ] s2)
      | s2 = bb44 ]
      
    | bb44 = s0 [ s0 = unwrap'2 {_62} (fun (_ret':borrowed int32) ->  [ &_61 <- _ret' ] s1) | s1 = bb45 ] 
    | bb45 = s0
      [ s0 =  [ &_61 <- { _61 with current = ([#"../result.rs" 25 28 25 29] (1 : int32)) ; } ] s1
      | s1 = -{resolve'0 _61}- s2
      | s2 = unwrap'3 {ok} (fun (_ret':int32) ->  [ &_66 <- _ret' ] s3)
      | s3 = bb46 ]
      
    | bb46 = s0
      [ s0 = Int32.eq {_66} {[#"../result.rs" 26 27 26 28] (1 : int32)}
          (fun (_ret':bool) ->  [ &_65 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_66 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_65 = false} (! bb48) | br1 -> {_65} (! bb47) ]  ]
      
    | bb47 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {err}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_71 <- _ret' ] 
             [ &err <-  ^ _71 ] 
            s1)
      | s1 = as_mut'0 {_71}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_70 <- _ret' ] s2)
      | s2 = bb49 ]
      
    | bb49 = s0 [ s0 = unwrap_err'1 {_70} (fun (_ret':borrowed int32) ->  [ &_69 <- _ret' ] s1) | s1 = bb50 ] 
    | bb50 = s0
      [ s0 =  [ &_69 <- { _69 with current = ([#"../result.rs" 27 33 27 34] (0 : int32)) ; } ] s1
      | s1 = -{resolve'0 _69}- s2
      | s2 = unwrap_err'2 {err} (fun (_ret':int32) ->  [ &_74 <- _ret' ] s3)
      | s3 = bb51 ]
      
    | bb51 = s0
      [ s0 = Int32.eq {_74} {[#"../result.rs" 28 32 28 33] (0 : int32)}
          (fun (_ret':bool) ->  [ &_73 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_74 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_73 = false} (! bb53) | br1 -> {_73} (! bb52) ]  ]
      
    | bb52 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {err}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_79 <- _ret' ] 
             [ &err <-  ^ _79 ] 
            s1)
      | s1 = as_mut'0 {_79}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_78 <- _ret' ] s2)
      | s2 = bb54 ]
      
    | bb54 = s0 [ s0 = unwrap_err'1 {_78} (fun (_ret':borrowed int32) ->  [ &_77 <- _ret' ] s1) | s1 = bb55 ] 
    | bb55 = s0
      [ s0 =  [ &_77 <- { _77 with current = ([#"../result.rs" 29 33 29 35] (-1 : int32)) ; } ] s1
      | s1 = -{resolve'0 _77}- s2
      | s2 = unwrap_err'2 {err} (fun (_ret':int32) ->  [ &_82 <- _ret' ] s3)
      | s3 = bb56 ]
      
    | bb56 = s0
      [ s0 = Int32.eq {_82} {[#"../result.rs" 30 32 30 34] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_81 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_82 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_81 = false} (! bb58) | br1 -> {_81} (! bb57) ]  ]
      
    | bb57 = s0 [ s0 = unwrap'3 {ok} (fun (_ret':int32) ->  [ &_87 <- _ret' ] s1) | s1 = bb59 ] 
    | bb59 = s0
      [ s0 = Int32.eq {_87} {[#"../result.rs" 33 27 33 28] (1 : int32)}
          (fun (_ret':bool) ->  [ &_86 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_87 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_86 = false} (! bb61) | br1 -> {_86} (! bb60) ]  ]
      
    | bb60 = s0 [ s0 = unwrap_err'2 {err} (fun (_ret':int32) ->  [ &_92 <- _ret' ] s1) | s1 = bb62 ] 
    | bb62 = s0
      [ s0 = Int32.eq {_92} {[#"../result.rs" 37 32 37 34] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_91 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_92 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_91 = false} (! bb64) | br1 -> {_91} (! bb63) ]  ]
      
    | bb63 = s0
      [ s0 = unwrap_or'0 {ok} {[#"../result.rs" 40 25 40 26] (0 : int32)} (fun (_ret':int32) ->  [ &_97 <- _ret' ] s1)
      | s1 = bb65 ]
      
    | bb65 = s0
      [ s0 = Int32.eq {_97} {[#"../result.rs" 40 31 40 32] (1 : int32)}
          (fun (_ret':bool) ->  [ &_96 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_97 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_96 = false} (! bb67) | br1 -> {_96} (! bb66) ]  ]
      
    | bb66 = s0
      [ s0 = unwrap_or'0 {err} {[#"../result.rs" 41 26 41 27] (0 : int32)} (fun (_ret':int32) ->  [ &_102 <- _ret' ] s1)
      | s1 = bb68 ]
      
    | bb68 = s0
      [ s0 = Int32.eq {_102} {[#"../result.rs" 41 32 41 33] (0 : int32)}
          (fun (_ret':bool) ->  [ &_101 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_102 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_101 = false} (! bb70) | br1 -> {_101} (! bb69) ]  ]
      
    | bb69 = s0 [ s0 = unwrap_or_default'0 {ok} (fun (_ret':int32) ->  [ &_107 <- _ret' ] s1) | s1 = bb71 ] 
    | bb71 = s0
      [ s0 = Int32.eq {_107} {[#"../result.rs" 43 38 43 39] (1 : int32)}
          (fun (_ret':bool) ->  [ &_106 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_107 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_106 = false} (! bb73) | br1 -> {_106} (! bb72) ]  ]
      
    | bb72 = s0 [ s0 = unwrap_or_default'0 {err} (fun (_ret':int32) ->  [ &_112 <- _ret' ] s1) | s1 = bb74 ] 
    | bb74 = s0
      [ s0 = Int32.eq {_112} {[#"../result.rs" 44 39 44 40] (0 : int32)}
          (fun (_ret':bool) ->  [ &_111 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_112 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_111 = false} (! bb76) | br1 -> {_111} (! bb75) ]  ]
      
    | bb75 = s0
      [ s0 = 
        [ &_120 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 47 30 47 32] (-2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = and'0 {ok} {_120} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_118 <- _ret' ] s2)
      | s2 = bb77 ]
      
    | bb77 = s0 [ s0 = unwrap_err'2 {_118} (fun (_ret':int32) ->  [ &_117 <- _ret' ] s1) | s1 = bb78 ] 
    | bb78 = s0
      [ s0 = Int32.eq {_117} {[#"../result.rs" 47 51 47 53] (-2 : int32)}
          (fun (_ret':bool) ->  [ &_116 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_117 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_116 = false} (! bb80) | br1 -> {_116} (! bb79) ]  ]
      
    | bb79 = s0
      [ s0 = 
        [ &_127 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 48 22 48 23] (2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = and'0 {ok} {_127} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_125 <- _ret' ] s2)
      | s2 = bb81 ]
      
    | bb81 = s0 [ s0 = unwrap'3 {_125} (fun (_ret':int32) ->  [ &_124 <- _ret' ] s1) | s1 = bb82 ] 
    | bb82 = s0
      [ s0 = Int32.eq {_124} {[#"../result.rs" 48 38 48 39] (2 : int32)}
          (fun (_ret':bool) ->  [ &_123 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_124 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_123 = false} (! bb84) | br1 -> {_123} (! bb83) ]  ]
      
    | bb83 = s0
      [ s0 = 
        [ &_134 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 49 31 49 33] (-2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = and'0 {err} {_134} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_132 <- _ret' ] s2)
      | s2 = bb85 ]
      
    | bb85 = s0 [ s0 = unwrap_err'2 {_132} (fun (_ret':int32) ->  [ &_131 <- _ret' ] s1) | s1 = bb86 ] 
    | bb86 = s0
      [ s0 = Int32.eq {_131} {[#"../result.rs" 49 52 49 54] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_130 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_131 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_130 = false} (! bb88) | br1 -> {_130} (! bb87) ]  ]
      
    | bb87 = s0
      [ s0 = 
        [ &_141 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 50 23 50 24] (2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = and'0 {err} {_141} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_139 <- _ret' ] s2)
      | s2 = bb89 ]
      
    | bb89 = s0 [ s0 = unwrap_err'2 {_139} (fun (_ret':int32) ->  [ &_138 <- _ret' ] s1) | s1 = bb90 ] 
    | bb90 = s0
      [ s0 = Int32.eq {_138} {[#"../result.rs" 50 43 50 45] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_137 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_138 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_137 = false} (! bb92) | br1 -> {_137} (! bb91) ]  ]
      
    | bb91 = s0
      [ s0 = 
        [ &_148 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 53 22 53 24] (-2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = or'0 {ok} {_148} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_146 <- _ret' ] s2)
      | s2 = bb93 ]
      
    | bb93 = s0 [ s0 = unwrap'3 {_146} (fun (_ret':int32) ->  [ &_145 <- _ret' ] s1) | s1 = bb94 ] 
    | bb94 = s0
      [ s0 = Int32.eq {_145} {[#"../result.rs" 53 39 53 40] (1 : int32)}
          (fun (_ret':bool) ->  [ &_144 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_145 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_144 = false} (! bb96) | br1 -> {_144} (! bb95) ]  ]
      
    | bb95 = s0
      [ s0 = 
        [ &_155 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 54 28 54 29] (2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = or'0 {ok} {_155} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_153 <- _ret' ] s2)
      | s2 = bb97 ]
      
    | bb97 = s0 [ s0 = unwrap'3 {_153} (fun (_ret':int32) ->  [ &_152 <- _ret' ] s1) | s1 = bb98 ] 
    | bb98 = s0
      [ s0 = Int32.eq {_152} {[#"../result.rs" 54 44 54 45] (1 : int32)}
          (fun (_ret':bool) ->  [ &_151 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_152 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_151 = false} (! bb100) | br1 -> {_151} (! bb99) ]  ]
      
    | bb99 = s0
      [ s0 = 
        [ &_162 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 55 23 55 25] (-2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = or'0 {err} {_162} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_160 <- _ret' ] s2)
      | s2 = bb101 ]
      
    | bb101 = s0 [ s0 = unwrap_err'2 {_160} (fun (_ret':int32) ->  [ &_159 <- _ret' ] s1) | s1 = bb102 ] 
    | bb102 = s0
      [ s0 = Int32.eq {_159} {[#"../result.rs" 55 44 55 46] (-2 : int32)}
          (fun (_ret':bool) ->  [ &_158 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_159 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_158 = false} (! bb104) | br1 -> {_158} (! bb103) ]  ]
      
    | bb103 = s0
      [ s0 = 
        [ &_169 <- Core_Result_Result_Type.C_Ok ([#"../result.rs" 56 29 56 30] (2 : int32)) : Core_Result_Result_Type.t_result int32 int32 ]
        
        s1
      | s1 = or'0 {err} {_169} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_167 <- _ret' ] s2)
      | s2 = bb105 ]
      
    | bb105 = s0 [ s0 = unwrap'3 {_167} (fun (_ret':int32) ->  [ &_166 <- _ret' ] s1) | s1 = bb106 ] 
    | bb106 = s0
      [ s0 = Int32.eq {_166} {[#"../result.rs" 56 45 56 46] (2 : int32)}
          (fun (_ret':bool) ->  [ &_165 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_166 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_165 = false} (! bb108) | br1 -> {_165} (! bb107) ]  ]
      
    | bb107 = s0
      [ s0 = as_ref'0 {ok} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_175 <- _ret' ] s1)
      | s1 = bb109 ]
      
    | bb109 = s0
      [ s0 = copied'0 {_175} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_174 <- _ret' ] s1)
      | s1 = bb110 ]
      
    | bb110 = s0 [ s0 = unwrap'4 {_174} (fun (_ret':int32) ->  [ &_173 <- _ret' ] s1) | s1 = bb111 ] 
    | bb111 = s0
      [ s0 = Int32.eq {_173} {[#"../result.rs" 59 45 59 46] (1 : int32)}
          (fun (_ret':bool) ->  [ &_172 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_173 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_172 = false} (! bb113) | br1 -> {_172} (! bb112) ]  ]
      
    | bb112 = s0
      [ s0 = as_ref'0 {err} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_183 <- _ret' ] s1)
      | s1 = bb114 ]
      
    | bb114 = s0
      [ s0 = copied'0 {_183} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_182 <- _ret' ] s1)
      | s1 = bb115 ]
      
    | bb115 = s0 [ s0 = unwrap_err'3 {_182} (fun (_ret':int32) ->  [ &_181 <- _ret' ] s1) | s1 = bb116 ] 
    | bb116 = s0
      [ s0 = Int32.eq {_181} {[#"../result.rs" 60 51 60 53] (-1 : int32)} (fun (_ret':bool) ->  [ &_179 <- _ret' ] s1)
      | s1 = any [ br0 -> {_179 = false} (! bb118) | br1 -> {_179} (! bb117) ]  ]
      
    | bb117 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {ok}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_191 <- _ret' ] 
             [ &ok <-  ^ _191 ] 
            s1)
      | s1 = as_mut'0 {_191}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_190 <- _ret' ] s2)
      | s2 = bb119 ]
      
    | bb119 = s0
      [ s0 = copied'1 {_190}
          (fun (_ret':Core_Result_Result_Type.t_result int32 (borrowed int32)) ->  [ &_189 <- _ret' ] s1)
      | s1 = bb120 ]
      
    | bb120 = s0 [ s0 = unwrap'5 {_189} (fun (_ret':int32) ->  [ &_188 <- _ret' ] s1) | s1 = bb121 ] 
    | bb121 = s0
      [ s0 = Int32.eq {_188} {[#"../result.rs" 61 45 61 46] (1 : int32)}
          (fun (_ret':bool) ->  [ &_187 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_188 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_187 = false} (! bb123) | br1 -> {_187} (! bb122) ]  ]
      
    | bb122 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {err}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_199 <- _ret' ] 
             [ &err <-  ^ _199 ] 
            s1)
      | s1 = as_mut'0 {_199}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_198 <- _ret' ] s2)
      | s2 = bb124 ]
      
    | bb124 = s0
      [ s0 = copied'1 {_198}
          (fun (_ret':Core_Result_Result_Type.t_result int32 (borrowed int32)) ->  [ &_197 <- _ret' ] s1)
      | s1 = bb125 ]
      
    | bb125 = s0 [ s0 = unwrap_err'4 {_197} (fun (_ret':borrowed int32) ->  [ &_196 <- _ret' ] s1) | s1 = bb126 ] 
    | bb126 = s0
      [ s0 = -{resolve'0 _196}- s1
      | s1 = Int32.eq { * _196} {[#"../result.rs" 62 51 62 53] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_194 <- _ret' ] s2)
      | s2 = any [ br0 -> {_194 = false} (! bb128) | br1 -> {_194} (! bb127) ]  ]
      
    | bb127 = s0
      [ s0 = as_ref'0 {ok} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_205 <- _ret' ] s1)
      | s1 = bb129 ]
      
    | bb129 = s0
      [ s0 = cloned'0 {_205} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_204 <- _ret' ] s1)
      | s1 = bb130 ]
      
    | bb130 = s0 [ s0 = unwrap'4 {_204} (fun (_ret':int32) ->  [ &_203 <- _ret' ] s1) | s1 = bb131 ] 
    | bb131 = s0
      [ s0 = Int32.eq {_203} {[#"../result.rs" 64 45 64 46] (1 : int32)}
          (fun (_ret':bool) ->  [ &_202 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_203 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_202 = false} (! bb133) | br1 -> {_202} (! bb132) ]  ]
      
    | bb132 = s0
      [ s0 = as_ref'0 {err} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_213 <- _ret' ] s1)
      | s1 = bb134 ]
      
    | bb134 = s0
      [ s0 = cloned'0 {_213} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_212 <- _ret' ] s1)
      | s1 = bb135 ]
      
    | bb135 = s0 [ s0 = unwrap_err'3 {_212} (fun (_ret':int32) ->  [ &_211 <- _ret' ] s1) | s1 = bb136 ] 
    | bb136 = s0
      [ s0 = Int32.eq {_211} {[#"../result.rs" 65 51 65 53] (-1 : int32)} (fun (_ret':bool) ->  [ &_209 <- _ret' ] s1)
      | s1 = any [ br0 -> {_209 = false} (! bb138) | br1 -> {_209} (! bb137) ]  ]
      
    | bb137 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {ok}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_221 <- _ret' ] 
             [ &ok <-  ^ _221 ] 
            s1)
      | s1 = as_mut'0 {_221}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_220 <- _ret' ] s2)
      | s2 = bb139 ]
      
    | bb139 = s0
      [ s0 = cloned'1 {_220}
          (fun (_ret':Core_Result_Result_Type.t_result int32 (borrowed int32)) ->  [ &_219 <- _ret' ] s1)
      | s1 = bb140 ]
      
    | bb140 = s0 [ s0 = unwrap'5 {_219} (fun (_ret':int32) ->  [ &_218 <- _ret' ] s1) | s1 = bb141 ] 
    | bb141 = s0
      [ s0 = Int32.eq {_218} {[#"../result.rs" 66 45 66 46] (1 : int32)}
          (fun (_ret':bool) ->  [ &_217 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_218 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_217 = false} (! bb143) | br1 -> {_217} (! bb142) ]  ]
      
    | bb142 = s0
      [ s0 = Borrow.borrow_mut <Core_Result_Result_Type.t_result int32 int32> {err}
          (fun (_ret':borrowed (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_229 <- _ret' ] 
             [ &err <-  ^ _229 ] 
            s1)
      | s1 = as_mut'0 {_229}
          (fun (_ret':Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)) ->  [ &_228 <- _ret' ] s2)
      | s2 = bb144 ]
      
    | bb144 = s0
      [ s0 = cloned'1 {_228}
          (fun (_ret':Core_Result_Result_Type.t_result int32 (borrowed int32)) ->  [ &_227 <- _ret' ] s1)
      | s1 = bb145 ]
      
    | bb145 = s0 [ s0 = unwrap_err'4 {_227} (fun (_ret':borrowed int32) ->  [ &_226 <- _ret' ] s1) | s1 = bb146 ] 
    | bb146 = s0
      [ s0 = -{resolve'0 _226}- s1
      | s1 = Int32.eq { * _226} {[#"../result.rs" 67 51 67 53] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_224 <- _ret' ] s2)
      | s2 = any [ br0 -> {_224 = false} (! bb148) | br1 -> {_224} (! bb147) ]  ]
      
    | bb147 = s0
      [ s0 =  [ &_232 <- Core_Option_Option_Type.C_None : Core_Option_Option_Type.t_option int32 ] s1
      | s1 = 
        [ &res <- Core_Result_Result_Type.C_Ok _232 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 ]
        
        (any [ any_ (_any:Core_Option_Option_Type.t_option int32)-> (!  [ &_232 <- _any ] s2) ] )
      | s2 = transpose'0 {res}
          (fun (_ret':Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_236 <- _ret' ] 
            s3)
      | s3 = bb149 ]
      
    | bb149 = s0 [ s0 = is_none'1 {_236} (fun (_ret':bool) ->  [ &_234 <- _ret' ] s1) | s1 = bb150 ] 
    | bb150 = s0 [ s0 = any [ br0 -> {_234 = false} (! bb152) | br1 -> {_234} (! bb151) ]  ] 
    | bb151 = s0
      [ s0 = 
        [ &_240 <- Core_Option_Option_Type.C_Some ([#"../result.rs" 72 48 72 49] (1 : int32)) : Core_Option_Option_Type.t_option int32 ]
        
        s1
      | s1 = 
        [ &res1 <- Core_Result_Result_Type.C_Ok _240 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 ]
        
        (any [ any_ (_any:Core_Option_Option_Type.t_option int32)-> (!  [ &_240 <- _any ] s2) ] )
      | s2 = transpose'0 {res1}
          (fun (_ret':Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_245 <- _ret' ] 
            s3)
      | s3 = bb153 ]
      
    | bb153 = s0
      [ s0 = unwrap'6 {_245} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_244 <- _ret' ] s1)
      | s1 = bb154 ]
      
    | bb154 = s0 [ s0 = unwrap'3 {_244} (fun (_ret':int32) ->  [ &_243 <- _ret' ] s1) | s1 = bb155 ] 
    | bb155 = s0
      [ s0 = Int32.eq {_243} {[#"../result.rs" 73 49 73 50] (1 : int32)}
          (fun (_ret':bool) ->  [ &_242 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_243 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_242 = false} (! bb157) | br1 -> {_242} (! bb156) ]  ]
      
    | bb156 = s0
      [ s0 = 
        [ &res2 <- Core_Result_Result_Type.C_Err ([#"../result.rs" 74 44 74 46] (-1 : int32)) : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 ]
        
        s1
      | s1 = transpose'0 {res2}
          (fun (_ret':Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)) ->
             [ &_253 <- _ret' ] 
            s2)
      | s2 = bb158 ]
      
    | bb158 = s0
      [ s0 = unwrap'6 {_253} (fun (_ret':Core_Result_Result_Type.t_result int32 int32) ->  [ &_252 <- _ret' ] s1)
      | s1 = bb159 ]
      
    | bb159 = s0 [ s0 = unwrap_err'2 {_252} (fun (_ret':int32) ->  [ &_251 <- _ret' ] s1) | s1 = bb160 ] 
    | bb160 = s0
      [ s0 = Int32.eq {_251} {[#"../result.rs" 75 53 75 55] (-1 : int32)}
          (fun (_ret':bool) ->  [ &_250 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_251 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_250 = false} (! bb162) | br1 -> {_250} (! bb161) ]  ]
      
    | bb161 = s0 [ s0 =  [ &_0 <- [#"../result.rs" 3 21 76 1] () ] s1 | s1 = return' {_0} ] 
    | bb162 = s0 [ s0 = {[#"../result.rs" 75 4 75 56] false} any ] 
    | bb157 = s0 [ s0 = {[#"../result.rs" 73 4 73 51] false} any ] 
    | bb152 = s0 [ s0 = {[#"../result.rs" 71 4 71 38] false} any ] 
    | bb148 = s0 [ s0 = {[#"../result.rs" 67 4 67 54] false} any ] 
    | bb143 = s0 [ s0 = {[#"../result.rs" 66 4 66 47] false} any ] 
    | bb138 = s0 [ s0 = {[#"../result.rs" 65 4 65 54] false} any ] 
    | bb133 = s0 [ s0 = {[#"../result.rs" 64 4 64 47] false} any ] 
    | bb128 = s0 [ s0 = {[#"../result.rs" 62 4 62 54] false} any ] 
    | bb123 = s0 [ s0 = {[#"../result.rs" 61 4 61 47] false} any ] 
    | bb118 = s0 [ s0 = {[#"../result.rs" 60 4 60 54] false} any ] 
    | bb113 = s0 [ s0 = {[#"../result.rs" 59 4 59 47] false} any ] 
    | bb108 = s0 [ s0 = {[#"../result.rs" 56 4 56 47] false} any ] 
    | bb104 = s0 [ s0 = {[#"../result.rs" 55 4 55 47] false} any ] 
    | bb100 = s0 [ s0 = {[#"../result.rs" 54 4 54 46] false} any ] 
    | bb96 = s0 [ s0 = {[#"../result.rs" 53 4 53 41] false} any ] 
    | bb92 = s0 [ s0 = {[#"../result.rs" 50 4 50 46] false} any ] 
    | bb88 = s0 [ s0 = {[#"../result.rs" 49 4 49 55] false} any ] 
    | bb84 = s0 [ s0 = {[#"../result.rs" 48 4 48 40] false} any ] 
    | bb80 = s0 [ s0 = {[#"../result.rs" 47 4 47 54] false} any ] 
    | bb76 = s0 [ s0 = {[#"../result.rs" 44 4 44 41] false} any ] 
    | bb73 = s0 [ s0 = {[#"../result.rs" 43 4 43 40] false} any ] 
    | bb70 = s0 [ s0 = {[#"../result.rs" 41 4 41 34] false} any ] 
    | bb67 = s0 [ s0 = {[#"../result.rs" 40 4 40 33] false} any ] 
    | bb64 = s0 [ s0 = {[#"../result.rs" 37 4 37 35] false} any ] 
    | bb61 = s0 [ s0 = {[#"../result.rs" 33 4 33 29] false} any ] 
    | bb58 = s0 [ s0 = {[#"../result.rs" 30 4 30 35] false} any ] 
    | bb53 = s0 [ s0 = {[#"../result.rs" 28 4 28 34] false} any ] 
    | bb48 = s0 [ s0 = {[#"../result.rs" 26 4 26 29] false} any ] 
    | bb43 = s0 [ s0 = {[#"../result.rs" 24 4 24 29] false} any ] 
    | bb38 = s0 [ s0 = {[#"../result.rs" 21 4 21 45] false} any ] 
    | bb34 = s0 [ s0 = {[#"../result.rs" 20 4 20 39] false} any ] 
    | bb30 = s0 [ s0 = {[#"../result.rs" 17 4 17 37] false} any ] 
    | bb26 = s0 [ s0 = {[#"../result.rs" 16 4 16 31] false} any ] 
    | bb22 = s0 [ s0 = {[#"../result.rs" 14 4 14 31] false} any ] 
    | bb18 = s0 [ s0 = {[#"../result.rs" 13 4 13 34] false} any ] 
    | bb13 = s0 [ s0 = bb14 ] 
    | bb14 = s0 [ s0 = {[#"../result.rs" 10 4 10 41] false} any ] 
    | bb6 = s0 [ s0 = bb7 ] 
    | bb7 = s0 [ s0 = {[#"../result.rs" 8 4 8 39] false} any ]  ]
    )
    [ & _0 : () = any_l () : ()
    | & ok : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & err : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _4 : bool = any_l () : bool
    | & _6 : bool = any_l () : bool
    | & _10 : bool = any_l () : bool
    | & _12 : bool = any_l () : bool
    | & _16 : bool = any_l () : bool
    | & _17 : int32 = any_l () : int32
    | & _18 : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32
    | & _22 : bool = any_l () : bool
    | & _24 : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32
    | & _28 : bool = any_l () : bool
    | & _30 : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32
    | & _34 : bool = any_l () : bool
    | & _35 : int32 = any_l () : int32
    | & _36 : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32
    | & _40 : bool = any_l () : bool
    | & _42 : int32 = any_l () : int32
    | & _43 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _47 : bool = any_l () : bool
    | & _49 : int32 = any_l () : int32
    | & _50 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _53 : borrowed int32 = any_l () : borrowed int32
    | & _54 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _55 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & _57 : bool = any_l () : bool
    | & _58 : int32 = any_l () : int32
    | & _61 : borrowed int32 = any_l () : borrowed int32
    | & _62 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _63 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & _65 : bool = any_l () : bool
    | & _66 : int32 = any_l () : int32
    | & _69 : borrowed int32 = any_l () : borrowed int32
    | & _70 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _71 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & _73 : bool = any_l () : bool
    | & _74 : int32 = any_l () : int32
    | & _77 : borrowed int32 = any_l () : borrowed int32
    | & _78 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _79 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & _81 : bool = any_l () : bool
    | & _82 : int32 = any_l () : int32
    | & _86 : bool = any_l () : bool
    | & _87 : int32 = any_l () : int32
    | & _91 : bool = any_l () : bool
    | & _92 : int32 = any_l () : int32
    | & _96 : bool = any_l () : bool
    | & _97 : int32 = any_l () : int32
    | & _101 : bool = any_l () : bool
    | & _102 : int32 = any_l () : int32
    | & _106 : bool = any_l () : bool
    | & _107 : int32 = any_l () : int32
    | & _111 : bool = any_l () : bool
    | & _112 : int32 = any_l () : int32
    | & _116 : bool = any_l () : bool
    | & _117 : int32 = any_l () : int32
    | & _118 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _120 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _123 : bool = any_l () : bool
    | & _124 : int32 = any_l () : int32
    | & _125 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _127 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _130 : bool = any_l () : bool
    | & _131 : int32 = any_l () : int32
    | & _132 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _134 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _137 : bool = any_l () : bool
    | & _138 : int32 = any_l () : int32
    | & _139 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _141 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _144 : bool = any_l () : bool
    | & _145 : int32 = any_l () : int32
    | & _146 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _148 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _151 : bool = any_l () : bool
    | & _152 : int32 = any_l () : int32
    | & _153 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _155 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _158 : bool = any_l () : bool
    | & _159 : int32 = any_l () : int32
    | & _160 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _162 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _165 : bool = any_l () : bool
    | & _166 : int32 = any_l () : int32
    | & _167 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _169 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _172 : bool = any_l () : bool
    | & _173 : int32 = any_l () : int32
    | & _174 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _175 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _179 : bool = any_l () : bool
    | & _181 : int32 = any_l () : int32
    | & _182 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _183 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _187 : bool = any_l () : bool
    | & _188 : int32 = any_l () : int32
    | & _189 : Core_Result_Result_Type.t_result int32 (borrowed int32) = any_l () : Core_Result_Result_Type.t_result int32 (borrowed int32)
    | & _190 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _191 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & _194 : bool = any_l () : bool
    | & _196 : borrowed int32 = any_l () : borrowed int32
    | & _197 : Core_Result_Result_Type.t_result int32 (borrowed int32) = any_l () : Core_Result_Result_Type.t_result int32 (borrowed int32)
    | & _198 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _199 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & _202 : bool = any_l () : bool
    | & _203 : int32 = any_l () : int32
    | & _204 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _205 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _209 : bool = any_l () : bool
    | & _211 : int32 = any_l () : int32
    | & _212 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _213 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _217 : bool = any_l () : bool
    | & _218 : int32 = any_l () : int32
    | & _219 : Core_Result_Result_Type.t_result int32 (borrowed int32) = any_l () : Core_Result_Result_Type.t_result int32 (borrowed int32)
    | & _220 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _221 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & _224 : bool = any_l () : bool
    | & _226 : borrowed int32 = any_l () : borrowed int32
    | & _227 : Core_Result_Result_Type.t_result int32 (borrowed int32) = any_l () : Core_Result_Result_Type.t_result int32 (borrowed int32)
    | & _228 : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32) = any_l () : Core_Result_Result_Type.t_result (borrowed int32) (borrowed int32)
    | & _229 : borrowed (Core_Result_Result_Type.t_result int32 int32) = any_l () : borrowed (Core_Result_Result_Type.t_result int32 int32)
    | & res : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 = any_l () : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32
    | & _232 : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32
    | & _234 : bool = any_l () : bool
    | & _236 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) = any_l () : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)
    | & res1 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 = any_l () : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32
    | & _240 : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32
    | & _242 : bool = any_l () : bool
    | & _243 : int32 = any_l () : int32
    | & _244 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _245 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) = any_l () : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32)
    | & res2 : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32 = any_l () : Core_Result_Result_Type.t_result (Core_Option_Option_Type.t_option int32) int32
    | & _250 : bool = any_l () : bool
    | & _251 : int32 = any_l () : int32
    | & _252 : Core_Result_Result_Type.t_result int32 int32 = any_l () : Core_Result_Result_Type.t_result int32 int32
    | & _253 : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) = any_l () : Core_Option_Option_Type.t_option (Core_Result_Result_Type.t_result int32 int32) ]
     [ return' (result:())-> (! return' {result}) ] 
end
