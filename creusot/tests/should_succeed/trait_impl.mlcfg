
module TraitImpl_Impl0_X
  type b
  type t2
  type t1
  predicate invariant0 (self : (t1, t2))
  val invariant0 (self : (t1, t2)) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : (t1, t2))
  val inv0 (_x : (t1, t2)) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : (t1, t2) . inv0 x = true
  predicate resolve2 (self : t2)
  val resolve2 (self : t2) : bool
    ensures { result = resolve2 self }
    
  predicate resolve1 (self : t1)
  val resolve1 (self : t1) : bool
    ensures { result = resolve1 self }
    
  predicate resolve0 (self : (t1, t2)) =
    [#"../../../../creusot-contracts/src/resolve.rs" 17 8 17 60] resolve1 (let (a, _) = self in a)
    /\ resolve2 (let (_, a) = self in a)
  val resolve0 (self : (t1, t2)) : bool
    ensures { result = resolve0 self }
    
  let rec cfg x [#"../trait_impl.rs" 25 4 25 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : (t1, t2)) : ()
    requires {[#"../trait_impl.rs" 25 9 25 13] inv0 self}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self : (t1, t2) = self;
  {
    goto BB0
  }
  BB0 {
    [#"../trait_impl.rs" 25 15 25 17] _0 <- ([#"../trait_impl.rs" 25 15 25 17] ());
    assert { [@expl:type invariant] inv0 self };
    assume { resolve0 self };
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module TraitImpl_Impl1_X
  type b
  use prelude.UInt32
  use prelude.Int
  let rec cfg x [#"../trait_impl.rs" 29 4 29 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : uint32) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    [#"../trait_impl.rs" 29 15 29 17] _0 <- ([#"../trait_impl.rs" 29 15 29 17] ());
    return _0
  }
  
end
module TraitImpl_Impl0
  type b
  type t2
  type t1
  predicate invariant0 (self : (t1, t2))
  val invariant0 (self : (t1, t2)) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : (t1, t2))
  val inv0 (_x : (t1, t2)) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : (t1, t2) . inv0 x = true
  goal x_refn : [#"../trait_impl.rs" 25 4 25 14] forall self : (t1, t2) . inv0 self  -> inv0 self
end
module TraitImpl_Impl1
  type b
  goal x_refn : [#"../trait_impl.rs" 29 4 29 14] true
end
