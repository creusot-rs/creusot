
module Prophecy_F
  let%span sprophecy0 = "../prophecy.rs" 4 16 4 17
  
  let%span sprophecy1 = "../prophecy.rs" 9 9 9 10
  
  let%span span2 = "../../../../creusot-contracts/src/resolve.rs" 26 20 26 34
  
  use prelude.prelude.Intrinsic
  
  use prelude.prelude.Borrow
  
  use prelude.prelude.Int32
  
  predicate resolve'0 (self : borrowed int32) =
    [%#span2] self.final = self.current
  
  use prelude.prelude.Int
  
  let rec f (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 =  [ &x <- [%#sprophecy0] (0 : int32) ] s1
      | s1 = Borrow.borrow_mut <int32> {x} (fun (_ret':borrowed int32) ->  [ &y <- _ret' ]  [ &x <- y.final ] s2)
      | s2 =  [ &y <- { y with current = ([%#sprophecy1] (5 : int32)) ; } ] s3
      | s3 = -{resolve'0 y}- s4
      | s4 = return' {_0} ]
       ]
    ) [ & _0 : () = any_l () | & x : int32 = any_l () | & y : borrowed int32 = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
