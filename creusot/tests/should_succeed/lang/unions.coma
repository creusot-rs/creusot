module T_unions__DummyUnion [#"unions.rs" 6 0 6 20]
  use prelude.prelude.IntSize
  
  use prelude.prelude.UIntSize
  
  use prelude.prelude.Int
  
  type t_DummyUnion  =
    | C_DummyUnion usize isize
  
  let rec t_DummyUnion (input:t_DummyUnion) (ret  (_field1:usize) (_field2:isize))= any
    [ good (_field1:usize) (_field2:isize)-> {C_DummyUnion _field1 _field2 = input} (! ret {_field1} {_field2}) ]
    
end
module M_unions__x [#"unions.rs" 11 0 11 23]
  use T_unions__DummyUnion as DummyUnion'0
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec x (_1:DummyUnion'0.t_DummyUnion) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] )
    [ & _0 : () = any_l () ]
     [ return' (result:())-> (! return' {result}) ] 
end
