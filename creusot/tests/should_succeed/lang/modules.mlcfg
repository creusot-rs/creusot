
module Modules_Nested_Nested_Type
  type t_nested  =
    | C_Test
    
end
module Modules_Nested_InnerFunc
  use Modules_Nested_Nested_Type as Modules_Nested_Nested_Type
  predicate resolve0 [#"../modules.rs" 7 13 7 20] (self : Modules_Nested_Nested_Type.t_nested) =
    [#"../modules.rs" 7 13 7 20] match self with
      | Modules_Nested_Nested_Type.C_Test -> true
      end
  val resolve0 [#"../modules.rs" 7 13 7 20] (self : Modules_Nested_Nested_Type.t_nested) : bool
    ensures { result = resolve0 self }
    
  let rec cfg inner_func [#"../modules.rs" 13 4 13 31] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : bool
    ensures { [#"../modules.rs" 12 14 12 28] result = true }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var _2 : Modules_Nested_Nested_Type.t_nested;
  {
    goto BB0
  }
  BB0 {
    [#"../modules.rs" 14 16 14 28] _2 <- ([#"../modules.rs" 14 16 14 28] Modules_Nested_Nested_Type.C_Test);
    assume { resolve0 _2 };
    [#"../modules.rs" 15 8 15 12] _0 <- ([#"../modules.rs" 15 8 15 12] [#"../modules.rs" 15 8 15 12] true);
    return _0
  }
  
end
module Modules_Nested_Further_Another
  let rec cfg another [#"../modules.rs" 19 8 19 32] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : bool
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  {
    goto BB0
  }
  BB0 {
    [#"../modules.rs" 20 12 20 17] _0 <- ([#"../modules.rs" 20 12 20 17] [#"../modules.rs" 20 12 20 17] false);
    return _0
  }
  
end
module Modules_F
  val another0 [#"../modules.rs" 19 8 19 32] (_1 : ()) : bool
  val inner_func0 [#"../modules.rs" 13 4 13 31] (_1 : ()) : bool
    ensures { [#"../modules.rs" 12 14 12 28] result = true }
    
  let rec cfg f [#"../modules.rs" 25 0 25 10] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _1 : bool;
  var _2 : bool;
  {
    goto BB0
  }
  BB0 {
    [#"../modules.rs" 26 4 26 24] _1 <- ([#"../modules.rs" 26 4 26 24] inner_func0 ());
    goto BB1
  }
  BB1 {
    [#"../modules.rs" 28 4 28 13] _2 <- ([#"../modules.rs" 28 4 28 13] another0 ());
    goto BB2
  }
  BB2 {
    [#"../modules.rs" 25 11 29 1] _0 <- ([#"../modules.rs" 25 11 29 1] ());
    return _0
  }
  
end
module Modules_Nested_Impl0
  
end
