
module MultipleScopes_MultipleScopes
  use prelude.Intrinsic
  use prelude.Int32
  use prelude.Int
  let rec multiple_scopes (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 =  [ &_x <- [#"../multiple_scopes.rs" 5 17 5 18] (1 : int32) ] s1
      | s1 =  [ &_y <- [#"../multiple_scopes.rs" 6 13 6 14] (2 : int32) ] s2
      | s2 =  [ &_y1 <- [#"../multiple_scopes.rs" 8 17 8 18] (3 : int32) ] s3
      | s3 =  [ &_x <- _y1 ] s4
      | s4 =  [ &_0 <- [#"../multiple_scopes.rs" 7 4 10 5] () ] s5
      | s5 = return' {_0} ]
       ]
    )
    [ & _0 : () = any_l () : ()
    | & _x : int32 = any_l () : int32
    | & _y : int32 = any_l () : int32
    | & _y1 : int32 = any_l () : int32 ]
     [ return' (result:())-> (! return' {result}) ] 
end
