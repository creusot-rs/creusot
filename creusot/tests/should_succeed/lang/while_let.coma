
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
  function any_l (_ : 'b) : 'a
  let rec none < 't > (input:t_option 't) (ret  )= any
    [ good -> {C_None  = input} (! ret) | bad -> {C_None  <> input} {false} any ]
    
  let rec some < 't > (input:t_option 't) (ret  (field_0:'t))= any
    [ good (field_0:'t)-> {C_Some field_0 = input} (! ret {field_0})
    | bad (field_0:'t)-> {C_Some field_0 <> input} {false} any ]
    
end
module WhileLet_F
  use prelude.Intrinsic
  use prelude.Borrow
  use prelude.Int32
  use Core_Option_Option_Type as Core_Option_Option_Type
  predicate resolve'0 (self : borrowed (Core_Option_Option_Type.t_option int32)) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  let rec resolve'0 (self:borrowed (Core_Option_Option_Type.t_option int32)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'0 self} (! return' {result}) ]
    
  use prelude.Int
  let rec f (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 = 
        [ &a <- Core_Option_Option_Type.C_Some ([#"../while_let.rs" 5 21 5 23] (10 : int32)) : Core_Option_Option_Type.t_option int32 ]
        
        s1
      | s1 = Borrow.borrow_mut <Core_Option_Option_Type.t_option int32> {a}
          (fun (_ret':borrowed (Core_Option_Option_Type.t_option int32)) ->  [ &b <- _ret' ]  [ &a <-  ^ b ] s2)
      | s2 = bb1 ]
      
    | bb1 = bb1
      [ bb1 = {[@expl:loop invariant] [#"../while_let.rs" 8 16 8 20] true}
        (! s0) [ s0 = bb2 ] 
        [ bb2 = s0
          [ s0 = any
            [ br0 -> { * b = Core_Option_Option_Type.C_None } (! bb5)
            | br1 (a:int32)-> { * b = Core_Option_Option_Type.C_Some a} (! bb3) ]
             ]
          
        | bb3 = s0 [ s0 = bb4 ] 
        | bb4 = s0
          [ s0 =  [ &_6 <- Core_Option_Option_Type.C_None : Core_Option_Option_Type.t_option int32 ] s1
          | s1 =  [ &b <- { b with current = _6 ; } ] 
            (any [ any_ (_any:Core_Option_Option_Type.t_option int32)-> (!  [ &_6 <- _any ] s2) ] )
          | s2 = bb1 ]
           ]
         ]
      
    | bb5 = s0 [ s0 = -{resolve'0 b}- s1 | s1 =  [ &_0 <- [#"../while_let.rs" 9 4 11 5] () ] s2 | s2 = return' {_0} ]  ]
    )
    [ & _0 : () = any_l () : ()
    | & a : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32
    | & b : borrowed (Core_Option_Option_Type.t_option int32) = any_l () : borrowed (Core_Option_Option_Type.t_option int32)
    | & _6 : Core_Option_Option_Type.t_option int32 = any_l () : Core_Option_Option_Type.t_option int32 ]
     [ return' (result:())-> (! return' {result}) ] 
end
