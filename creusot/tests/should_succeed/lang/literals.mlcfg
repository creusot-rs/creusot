
module Literals_FloatOperation_Interface
  use prelude.Float32
  val float_operation [#"../literals.rs" 3 0 3 31] (_1 : ()) : Float32.t
end
module Literals_FloatOperation
  use prelude.Float32
  let rec cfg float_operation [#"../literals.rs" 3 0 3 31] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : Float32.t
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Float32.t;
  var x : Float32.t;
  {
    goto BB0
  }
  BB0 {
    x <- ([#"../literals.rs" 4 17 4 20] [#"../literals.rs" 4 17 4 20] (0.0 : Float32.t));
    switch ([#"../literals.rs" 6 7 6 24] ([#"../literals.rs" 6 7 6 17] x .+ ([#"../literals.rs" 6 11 6 17] [#"../literals.rs" 6 11 6 17] (0x1.020c40000000p0 : Float32.t))) .= ([#"../literals.rs" 6 21 6 24] [#"../literals.rs" 6 21 6 24] (2.0 : Float32.t)))
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    _0 <- ([#"../literals.rs" 7 8 7 17] ([#"../literals.rs" 7 8 7 11] [#"../literals.rs" 7 8 7 11] (3.0 : Float32.t)) .- ([#"../literals.rs" 7 14 7 17] [#"../literals.rs" 7 14 7 17] (1.0 : Float32.t)));
    goto BB3
  }
  BB2 {
    _0 <- ([#"../literals.rs" 9 8 9 11] [#"../literals.rs" 9 8 9 11] (0.0 : Float32.t));
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
