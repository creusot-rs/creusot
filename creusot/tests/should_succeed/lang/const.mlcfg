
module Const_Foo_Stub
  use prelude.Int
  use prelude.UIntSize
  val constant fOO' [#"../const.rs" 5 0 5 16]  : usize
end
module Const_Foo
  use prelude.Int
  use prelude.UIntSize
  let constant fOO' [#"../const.rs" 5 0 5 16]  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../const.rs" 5 0 5 16] (42 : usize)
end
module Const_Foo_Interface
  use prelude.Int
  use prelude.UIntSize
  val foo [#"../const.rs" 8 0 8 21] (_1' : ()) : usize
    ensures { [#"../const.rs" 7 10 7 27] result = (42 : usize) }
    
end
module Const_Foo
  use prelude.Int
  use prelude.UIntSize
  let rec cfg foo [#"../const.rs" 8 0 8 21] [@cfg:stackify] [@cfg:subregion_analysis] (_1' : ()) : usize
    ensures { [#"../const.rs" 7 10 7 27] result = (42 : usize) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  {
    goto BB0
  }
  BB0 {
    _0 <- ([#"../const.rs" 9 4 9 7] (42 : usize));
    return _0
  }
  
end
