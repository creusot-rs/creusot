
module AssociatedTypes_Assoc_Type
  type t_assoc 't 'assoc0 =
    | C_Assoc 'assoc0
    
  let function assoc_item (self : t_assoc 't) : 'assoc0 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Assoc a -> a
      end
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module AssociatedTypes_Uses_Interface
  type t
  use AssociatedTypes_Assoc_Type as AssociatedTypes_Assoc_Type
  val uses [@cfg:stackify] (_1' : AssociatedTypes_Assoc_Type.t_assoc t) : ()
end
module AssociatedTypes_Uses
  type t
  use AssociatedTypes_Assoc_Type as AssociatedTypes_Assoc_Type
  clone CreusotContracts_Logic_Resolve_Resolve_Resolve as Resolve0 with type self = AssociatedTypes_Assoc_Type.t_assoc t
  let rec cfg uses [@cfg:stackify] [#"../associated_types.rs" 11 0 11 31] (_1' : AssociatedTypes_Assoc_Type.t_assoc t) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _1 : AssociatedTypes_Assoc_Type.t_assoc t;
  {
    _1 <- _1';
    goto BB0
  }
  BB0 {
    _0 <- ();
    goto BB1
  }
  BB1 {
    assume { Resolve0.resolve _1 };
    return _0
  }
  
end
module AssociatedTypes_UsesInstance_Interface
  use AssociatedTypes_Assoc_Type as AssociatedTypes_Assoc_Type
  val uses_instance [@cfg:stackify] (x : AssociatedTypes_Assoc_Type.t_assoc ()) : bool
end
module AssociatedTypes_UsesInstance
  use AssociatedTypes_Assoc_Type as AssociatedTypes_Assoc_Type
  let rec cfg uses_instance [@cfg:stackify] [#"../associated_types.rs" 18 0 18 42] (x : AssociatedTypes_Assoc_Type.t_assoc ()) : bool
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var x_1 : AssociatedTypes_Assoc_Type.t_assoc ();
  {
    x_1 <- x;
    goto BB0
  }
  BB0 {
    _0 <- AssociatedTypes_Assoc_Type.assoc_item x_1;
    return _0
  }
  
end
module AssociatedTypes_Impl0_A_Type
  type a  =
    bool
end
module AssociatedTypes_Tr_A_Type
  type self
  type a
end
module AssociatedTypes_Impl0
  clone AssociatedTypes_Impl0_A_Type as A0
  clone AssociatedTypes_Tr_A_Type as A1 with type self = (), type a = A0.a
end
