
module MovePath_F
  use prelude.Borrow
  use prelude.Int32
  predicate resolve0 (self : borrowed int32) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve0 (self : borrowed int32) : bool
    ensures { result = resolve0 self }
    
  use prelude.Int
  let rec cfg f [#"../move_path.rs" 3 0 3 10] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x : int32;
  var y : borrowed int32;
  var d : borrowed int32;
  var z : borrowed int32;
  {
    goto BB0
  }
  BB0 {
    [#"../move_path.rs" 4 16 4 17] x <- ([#"../move_path.rs" 4 16 4 17] (1 : int32));
    [#"../move_path.rs" 6 12 6 18] y <- Borrow.borrow_mut x;
    [#"../move_path.rs" 6 12 6 18] x <-  ^ y;
    [#"../move_path.rs" 7 12 7 13] d <- y;
    y <- any borrowed int32;
    [#"../move_path.rs" 8 12 8 13] z <- d;
    d <- any borrowed int32;
    [#"../move_path.rs" 10 12 10 18] z <- { z with current = ([#"../move_path.rs" 10 17 10 18] (2 : int32)) ; };
    assume { resolve0 z };
    [#"../move_path.rs" 3 11 15 1] _0 <- ([#"../move_path.rs" 3 11 15 1] ());
    return _0
  }
  
end
