
module OneSideUpdate_MyInt_Type
  use prelude.UIntSize
  use prelude.Int
  type t_myint  =
    | C_MyInt usize
    
  function any_l (_ : 'b) : 'a
  let rec t_myint (input:t_myint) (ret  (field_0:usize))= any
    [ good (field_0:usize)-> {C_MyInt field_0 = input} (! ret {field_0})
    | bad (field_0:usize)-> {C_MyInt field_0 <> input} {false} any ]
    
end
module OneSideUpdate_F
  use prelude.Intrinsic
  use prelude.Borrow
  use OneSideUpdate_MyInt_Type as OneSideUpdate_MyInt_Type
  predicate resolve'0 (self : borrowed (OneSideUpdate_MyInt_Type.t_myint)) =
    [#"../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  let rec resolve'0 (self:borrowed (OneSideUpdate_MyInt_Type.t_myint)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'0 self} (! return' {result}) ]
    
  use prelude.UIntSize
  use prelude.Int
  let rec f (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 =  [ &a <- OneSideUpdate_MyInt_Type.C_MyInt ([#"../one_side_update.rs" 6 22 6 24] (10 : usize)) ] s1
      | s1 = Borrow.borrow_mut <OneSideUpdate_MyInt_Type.t_myint> {a}
          (fun (_ret':borrowed (OneSideUpdate_MyInt_Type.t_myint)) ->  [ &b <- _ret' ]  [ &a <-  ^ b ] s2)
      | s2 = any [ br0 -> {false} (! bb2) | br1 -> {true} (! bb1) ]  ]
      
    | bb1 = s0 [ s0 = -{resolve'0 b}- s1 | s1 =  [ &_0 <- [#"../one_side_update.rs" 8 12 10 5] () ] s2 | s2 = bb3 ] 
    | bb2 = s0
      [ s0 =  [ &_6 <- OneSideUpdate_MyInt_Type.C_MyInt ([#"../one_side_update.rs" 11 19 11 20] (5 : usize)) ] s1
      | s1 =  [ &b <- { b with current = _6 ; } ] 
        (any [ any_ (_any:OneSideUpdate_MyInt_Type.t_myint)-> (!  [ &_6 <- _any ] s2) ] )
      | s2 = -{resolve'0 b}- s3
      | s3 =  [ &_0 <- [#"../one_side_update.rs" 10 11 12 5] () ] s4
      | s4 = bb3 ]
      
    | bb3 = s0 [ s0 = return' {_0} ]  ]
    )
    [ & _0 : () = any_l () : ()
    | & a : OneSideUpdate_MyInt_Type.t_myint = any_l () : OneSideUpdate_MyInt_Type.t_myint
    | & b : borrowed (OneSideUpdate_MyInt_Type.t_myint) = any_l () : borrowed (OneSideUpdate_MyInt_Type.t_myint)
    | & _6 : OneSideUpdate_MyInt_Type.t_myint = any_l () : OneSideUpdate_MyInt_Type.t_myint ]
     [ return' (result:())-> (! return' {result}) ] 
end
