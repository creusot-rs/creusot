
module CreusotContracts_Resolve_Resolve_Resolve_Stub
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module C05Annotations_Assertion_Interface
  type t
  val assertion [#"../05_annotations.rs" 5 0 5 25] (x : t) : ()
end
module C05Annotations_Assertion
  type t
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve0 with
    type self = t
  let rec cfg assertion [#"../05_annotations.rs" 5 0 5 25] [@cfg:stackify] [@cfg:subregion_analysis] (x : t) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x_1 : t;
  var _2 : ();
  {
    x_1 <- x;
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve x_1 };
    assert { [@expl:assertion] [#"../05_annotations.rs" 6 20 6 26] x_1 = x_1 };
    goto BB1
  }
  BB1 {
    _2 <- ();
    _0 <- ();
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
