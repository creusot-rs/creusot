
module C05Annotations_Assertion
  type t
  predicate invariant0 (self : t)
  val invariant0 (self : t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : t)
  val inv0 (_x : t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : t . inv0 x = true
  predicate resolve0 (self : t)
  val resolve0 (self : t) : bool
    ensures { result = resolve0 self }
    
  let rec cfg assertion [#"../05_annotations.rs" 5 0 5 25] [@cfg:stackify] [@cfg:subregion_analysis] (x : t) : ()
    requires {[#"../05_annotations.rs" 5 20 5 21] inv0 x}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x : t = x;
  {
    goto BB0
  }
  BB0 {
    assert { [@expl:type invariant] inv0 x };
    assume { resolve0 x };
    assert { [@expl:assertion] [#"../05_annotations.rs" 6 20 6 26] x = x };
    goto BB1
  }
  BB1 {
    [#"../05_annotations.rs" 5 26 7 1] _0 <- ([#"../05_annotations.rs" 5 26 7 1] ());
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
