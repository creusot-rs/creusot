module M_01_idents__clone [#"01_idents.rs" 3 0 3 14]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec clone'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_01_idents__function [#"01_idents.rs" 5 0 5 17]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec function'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_01_idents__import [#"01_idents.rs" 7 0 7 15]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec import'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_01_idents__export [#"01_idents.rs" 9 0 9 15]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec export'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_01_idents__result [#"01_idents.rs" 11 0 11 15]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec result'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_01_idents__qy95zaqy95z [#"01_idents.rs" 13 0 13 12]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec qy95zaqy95z'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_01_idents__qy95z_a_qy113zyqy95z_bqy95zqy95zqy95z_cqy95zqy95z [#"01_idents.rs" 16 0 16 25]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec qy95z_a_qy113zyqy95z_bqy95zqy95zqy95z_cqy95zqy95z'0 (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = return' {_0} ]
    ) [ & _0 : () = any_l () ]  [ return' (result:())-> (! return' {result}) ] 
end
module M_01_idents__F [#"01_idents.rs" 19 0 19 10]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec v_F'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_01_idents__v_F [#"01_idents.rs" 22 0 22 12]
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec v_v_F'0 (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
