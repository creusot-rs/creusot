
module C01Idents_Clone
  use prelude.prelude.Intrinsic
  
  let rec clone' (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module C01Idents_Function
  use prelude.prelude.Intrinsic
  
  let rec function' (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module C01Idents_Import
  use prelude.prelude.Intrinsic
  
  let rec import' (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module C01Idents_Export
  use prelude.prelude.Intrinsic
  
  let rec export' (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module C01Idents_Result
  use prelude.prelude.Intrinsic
  
  let rec result (_1:()) (return'  (ret:()))= (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
