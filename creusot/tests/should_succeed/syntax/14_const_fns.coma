
module C14ConstFns_Omg
  use prelude.Int32
  use prelude.Intrinsic
  use prelude.Int
  use prelude.Int32
  let rec omg (x:int32) (return'  (ret:int32))= {[#"../14_const_fns.rs" 4 11 4 18] Int32.to_int x = 3}
    (! bb0
    [ bb0 = s0
      [ s0 = Int32.sub {x} {[#"../14_const_fns.rs" 6 8 6 9] (1 : int32)} (fun (_ret':int32) ->  [ &_0 <- _ret' ] s1)
      | s1 = return' {_0} ]
       ]
    ) [ & _0 : int32 = any_l () : int32 | & x : int32 = x ]  [ return' (result:int32)-> (! return' {result}) ] 
end
