module M_14_const_fns__omg [#"14_const_fns.rs" 5 0 5 31]
  let%span s14_const_fns0 = "14_const_fns.rs" 6 8 6 9
  let%span s14_const_fns1 = "14_const_fns.rs" 4 11 4 18
  
  use prelude.prelude.Int32
  
  use prelude.prelude.Intrinsic
  
  use prelude.prelude.Int
  
  use prelude.prelude.Int32
  
  meta "compute_max_steps" 1000000
  
  let rec omg (x:int32) (return'  (ret:int32))= {[%#s14_const_fns1] Int32.to_int x = 3}
    (! bb0
    [ bb0 = s0
      [ s0 = Int32.sub {x} {[%#s14_const_fns0] (1 : int32)} (fun (_ret':int32) ->  [ &_0 <- _ret' ] s1)
      | s1 = return' {_0} ]
       ]
    ) [ & _0 : int32 = any_l () | & x : int32 = x ]  [ return' (result:int32)-> (! return' {result}) ] 
end
