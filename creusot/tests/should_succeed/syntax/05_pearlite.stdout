module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
  type c05pearlite_a  = 
    | C05Pearlite_A bool
    
  function c05pearlite_a_A_a (self : c05pearlite_a) : bool
  val c05pearlite_a_A_a (self : c05pearlite_a) : bool
    ensures { result = c05pearlite_a_A_a self }
    
  axiom c05pearlite_a_A_a_acc : forall a : bool . c05pearlite_a_A_a (C05Pearlite_A a : c05pearlite_a) = a
end
module C05Pearlite_Solver_Interface
  use Type
  val solver (x : Type.c05pearlite_a) : ()
    ensures { Type.c05pearlite_a_A_a x = Type.c05pearlite_a_A_a x }
    
end
module C05Pearlite_Solver
  use Type
  val solver (x : Type.c05pearlite_a) : ()
    ensures { Type.c05pearlite_a_A_a x = Type.c05pearlite_a_A_a x }
    
end
