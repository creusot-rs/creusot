module M_06_logic_function_contracts__sum [#"06_logic_function_contracts.rs" 10 0 10 32]
  let%span s06_logic_function_contracts0 = "06_logic_function_contracts.rs" 9 10 9 19
  let%span s06_logic_function_contracts1 = "06_logic_function_contracts.rs" 11 4 16 5
  
  use seq.Seq
  
  use seq.Seq
  
  use prelude.prelude.Int
  
  use seq.Seq
  
  use seq.Seq
  
  constant seq  : Seq.seq int
  
  function sum [#"06_logic_function_contracts.rs" 10 0 10 32] (seq : Seq.seq int) : int
  
  goal vc_sum : if Seq.length seq = 0 then
    true
  else
    0 <= ([%#s06_logic_function_contracts0] Seq.length seq)
    /\ ([%#s06_logic_function_contracts0] Seq.length (Seq.([..]) seq 0 (Seq.length seq - 1)))
    < ([%#s06_logic_function_contracts0] Seq.length seq)
  
end
module M_06_logic_function_contracts__all_zero [#"06_logic_function_contracts.rs" 22 0 22 38]
  let%span s06_logic_function_contracts0 = "06_logic_function_contracts.rs" 21 10 21 19
  let%span s06_logic_function_contracts1 = "06_logic_function_contracts.rs" 23 4 28 5
  
  use seq.Seq
  
  use seq.Seq
  
  use prelude.prelude.Int
  
  use seq.Seq
  
  use seq.Seq
  
  constant seq  : Seq.seq int
  
  predicate all_zero [#"06_logic_function_contracts.rs" 22 0 22 38] (seq : Seq.seq int)
  
  goal vc_all_zero : if Seq.length seq = 0 then
    true
  else
    if Seq.get seq (Seq.length seq - 1) = 0 then
      0 <= ([%#s06_logic_function_contracts0] Seq.length seq)
      /\ ([%#s06_logic_function_contracts0] Seq.length (Seq.([..]) seq 0 (Seq.length seq - 1)))
      < ([%#s06_logic_function_contracts0] Seq.length seq)
    else
      true
    
  
end
module M_06_logic_function_contracts__stupid [#"06_logic_function_contracts.rs" 34 0 34 38]
  type t
  
  let%span s06_logic_function_contracts0 = "06_logic_function_contracts.rs" 33 10 33 11
  let%span s06_logic_function_contracts1 = "06_logic_function_contracts.rs" 35 4 43 5
  
  use prelude.prelude.Int
  
  constant x  : t
  
  constant i  : int
  
  predicate stupid [#"06_logic_function_contracts.rs" 34 0 34 38] (x : t) (i : int)
  
  goal vc_stupid : if i <= 0 then
    true
  else
    if x = x then
      0 <= ([%#s06_logic_function_contracts0] i)
      /\ ([%#s06_logic_function_contracts0] 0) < ([%#s06_logic_function_contracts0] i)
    else
      true
    
  
end
