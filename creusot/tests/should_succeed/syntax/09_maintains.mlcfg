
module C09Maintains_A_Type
  type t_a  =
    | C_A
    
end
module C09Maintains_Impl0_Invariant_Stub
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate invariant' [#"../09_maintains.rs" 12 4 12 47] (self : C09Maintains_A_Type.t_a) (b : bool) (c : uint64)
end
module C09Maintains_Impl0_Invariant_Interface
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate invariant' [#"../09_maintains.rs" 12 4 12 47] (self : C09Maintains_A_Type.t_a) (b : bool) (c : uint64)
  val invariant' [#"../09_maintains.rs" 12 4 12 47] (self : C09Maintains_A_Type.t_a) (b : bool) (c : uint64) : bool
    ensures { result = invariant' self b c }
    
end
module C09Maintains_Impl0_Invariant
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate invariant' [#"../09_maintains.rs" 12 4 12 47] (self : C09Maintains_A_Type.t_a) (b : bool) (c : uint64) =
    [#"../09_maintains.rs" 13 8 13 12] true
  val invariant' [#"../09_maintains.rs" 12 4 12 47] (self : C09Maintains_A_Type.t_a) (b : bool) (c : uint64) : bool
    ensures { result = invariant' self b c }
    
end
module C09Maintains_Impl0_Inv2_Stub
  use prelude.Int
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate inv2 [#"../09_maintains.rs" 17 4 17 33] (self : C09Maintains_A_Type.t_a) (b : int)
end
module C09Maintains_Impl0_Inv2_Interface
  use prelude.Int
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate inv2 [#"../09_maintains.rs" 17 4 17 33] (self : C09Maintains_A_Type.t_a) (b : int)
  val inv2 [#"../09_maintains.rs" 17 4 17 33] (self : C09Maintains_A_Type.t_a) (b : int) : bool
    ensures { result = inv2 self b }
    
end
module C09Maintains_Impl0_Inv2
  use prelude.Int
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate inv2 [#"../09_maintains.rs" 17 4 17 33] (self : C09Maintains_A_Type.t_a) (b : int) =
    [#"../09_maintains.rs" 18 8 18 12] true
  val inv2 [#"../09_maintains.rs" 17 4 17 33] (self : C09Maintains_A_Type.t_a) (b : int) : bool
    ensures { result = inv2 self b }
    
end
module C09Maintains_OtherInv_Stub
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate other_inv [#"../09_maintains.rs" 23 0 23 35] (a : C09Maintains_A_Type.t_a) (b : bool)
end
module C09Maintains_OtherInv_Interface
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate other_inv [#"../09_maintains.rs" 23 0 23 35] (a : C09Maintains_A_Type.t_a) (b : bool)
  val other_inv [#"../09_maintains.rs" 23 0 23 35] (a : C09Maintains_A_Type.t_a) (b : bool) : bool
    ensures { result = other_inv a b }
    
end
module C09Maintains_OtherInv
  use C09Maintains_A_Type as C09Maintains_A_Type
  predicate other_inv [#"../09_maintains.rs" 23 0 23 35] (a : C09Maintains_A_Type.t_a) (b : bool) =
    [#"../09_maintains.rs" 24 4 24 8] true
  val other_inv [#"../09_maintains.rs" 23 0 23 35] (a : C09Maintains_A_Type.t_a) (b : bool) : bool
    ensures { result = other_inv a b }
    
end
module C09Maintains_Test1_Interface
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Invariant_Stub as Invariant0
  val test_1 [#"../09_maintains.rs" 28 0 28 36] (a : C09Maintains_A_Type.t_a) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 27 0 27 31] Invariant0.invariant' a b c}
    ensures { [#"../09_maintains.rs" 27 0 27 31] Invariant0.invariant' a b c }
    
end
module C09Maintains_Test1
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Invariant as Invariant0
  let rec cfg test_1 [#"../09_maintains.rs" 28 0 28 36] [@cfg:stackify] [@cfg:subregion_analysis] (a : C09Maintains_A_Type.t_a) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 27 0 27 31] Invariant0.invariant' a b c}
    ensures { [#"../09_maintains.rs" 27 0 27 31] Invariant0.invariant' a b c }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module CreusotContracts_Resolve_Impl1_Resolve_Stub
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module C09Maintains_Test2_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Invariant_Stub as Invariant0
  val test_2 [#"../09_maintains.rs" 31 0 31 41] (a : borrowed (C09Maintains_A_Type.t_a)) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 30 0 30 37] Invariant0.invariant' ( * a) b c}
    ensures { [#"../09_maintains.rs" 30 0 30 37] Invariant0.invariant' ( ^ a) b c }
    
end
module C09Maintains_Test2
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Invariant as Invariant0
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = C09Maintains_A_Type.t_a
  let rec cfg test_2 [#"../09_maintains.rs" 31 0 31 41] [@cfg:stackify] [@cfg:subregion_analysis] (a : borrowed (C09Maintains_A_Type.t_a)) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 30 0 30 37] Invariant0.invariant' ( * a) b c}
    ensures { [#"../09_maintains.rs" 30 0 30 37] Invariant0.invariant' ( ^ a) b c }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var a : borrowed (C09Maintains_A_Type.t_a) = a;
  {
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve a };
    _0 <- ();
    return _0
  }
  
end
module C09Maintains_Test3_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Invariant_Stub as Invariant0
  val test_3 [#"../09_maintains.rs" 34 0 34 46] (a : borrowed (C09Maintains_A_Type.t_a)) (b : borrowed bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 33 0 33 41] Invariant0.invariant' ( * a) ( * b) c}
    ensures { [#"../09_maintains.rs" 33 0 33 41] Invariant0.invariant' ( ^ a) ( ^ b) c }
    
end
module C09Maintains_Test3
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt64
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Invariant as Invariant0
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = bool
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = C09Maintains_A_Type.t_a
  let rec cfg test_3 [#"../09_maintains.rs" 34 0 34 46] [@cfg:stackify] [@cfg:subregion_analysis] (a : borrowed (C09Maintains_A_Type.t_a)) (b : borrowed bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 33 0 33 41] Invariant0.invariant' ( * a) ( * b) c}
    ensures { [#"../09_maintains.rs" 33 0 33 41] Invariant0.invariant' ( ^ a) ( ^ b) c }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var a : borrowed (C09Maintains_A_Type.t_a) = a;
  var b : borrowed bool = b;
  {
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve a };
    assume { Resolve1.resolve b };
    _0 <- ();
    return _0
  }
  
end
module C09Maintains_Test5_Interface
  use prelude.UIntSize
  use prelude.Int
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Inv2_Stub as Inv20
  val test_5 [#"../09_maintains.rs" 37 0 37 29] (a : C09Maintains_A_Type.t_a) (b : usize) : ()
    requires {[#"../09_maintains.rs" 36 0 36 28] Inv20.inv2 a (UIntSize.to_int b + 0)}
    ensures { [#"../09_maintains.rs" 36 0 36 28] Inv20.inv2 a (UIntSize.to_int b + 0) }
    
end
module C09Maintains_Test5
  use prelude.UIntSize
  use prelude.Int
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_Impl0_Inv2 as Inv20
  let rec cfg test_5 [#"../09_maintains.rs" 37 0 37 29] [@cfg:stackify] [@cfg:subregion_analysis] (a : C09Maintains_A_Type.t_a) (b : usize) : ()
    requires {[#"../09_maintains.rs" 36 0 36 28] Inv20.inv2 a (UIntSize.to_int b + 0)}
    ensures { [#"../09_maintains.rs" 36 0 36 28] Inv20.inv2 a (UIntSize.to_int b + 0) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module C09Maintains_Test6_Interface
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_OtherInv_Stub as OtherInv0
  val test_6 [#"../09_maintains.rs" 40 0 40 28] (a : C09Maintains_A_Type.t_a) (b : bool) : ()
    requires {[#"../09_maintains.rs" 39 0 39 29] OtherInv0.other_inv a b}
    ensures { [#"../09_maintains.rs" 39 0 39 29] OtherInv0.other_inv a b }
    
end
module C09Maintains_Test6
  use C09Maintains_A_Type as C09Maintains_A_Type
  clone C09Maintains_OtherInv as OtherInv0
  let rec cfg test_6 [#"../09_maintains.rs" 40 0 40 28] [@cfg:stackify] [@cfg:subregion_analysis] (a : C09Maintains_A_Type.t_a) (b : bool) : ()
    requires {[#"../09_maintains.rs" 39 0 39 29] OtherInv0.other_inv a b}
    ensures { [#"../09_maintains.rs" 39 0 39 29] OtherInv0.other_inv a b }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
