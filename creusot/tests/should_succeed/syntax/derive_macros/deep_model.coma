
module T_deep_model__UnitStruct
  type t_UnitStruct  =
    | C_UnitStruct
  
  function any_l (_ : 'b) : 'a
  
  let rec t_UnitStruct (input:t_UnitStruct) (ret  )= any
    [ good -> {C_UnitStruct  = input} (! ret) | bad -> {C_UnitStruct  <> input} {false} any ]
    
end
module T_deep_model__UnitStructDeepModel
  type t_UnitStructDeepModel  =
    | C_UnitStructDeepModel
  
  function any_l (_ : 'b) : 'a
  
  let rec t_UnitStructDeepModel (input:t_UnitStructDeepModel) (ret  )= any
    [ good -> {C_UnitStructDeepModel  = input} (! ret) | bad -> {C_UnitStructDeepModel  <> input} {false} any ]
    
end
module T_deep_model__TupleStruct
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  type t_TupleStruct  =
    | C_TupleStruct int32 bool
  
  function any_l (_ : 'b) : 'a
  
  let rec t_TupleStruct (input:t_TupleStruct) (ret  (field_0:int32) (field_1:bool))= any
    [ good (field_0:int32) (field_1:bool)-> {C_TupleStruct field_0 field_1 = input} (! ret {field_0} {field_1})
    | bad (field_0:int32) (field_1:bool)-> {C_TupleStruct field_0 field_1 <> input} {false} any ]
    
  
  function t_TupleStruct__0 (self : t_TupleStruct) : int32 =
    match self with
      | C_TupleStruct a _ -> a
      end
  
  function t_TupleStruct__1 (self : t_TupleStruct) : bool =
    match self with
      | C_TupleStruct _ a -> a
      end
end
module T_deep_model__TupleStructDeepModel
  use prelude.prelude.Int
  
  type t_TupleStructDeepModel  =
    | C_TupleStructDeepModel int bool
  
  function any_l (_ : 'b) : 'a
  
  let rec t_TupleStructDeepModel (input:t_TupleStructDeepModel) (ret  (field_0:int) (field_1:bool))= any
    [ good (field_0:int) (field_1:bool)-> {C_TupleStructDeepModel field_0 field_1 = input} (! ret {field_0} {field_1})
    | bad (field_0:int) (field_1:bool)-> {C_TupleStructDeepModel field_0 field_1 <> input} {false} any ]
    
end
module T_deep_model__Struct
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  type t_Struct  =
    | C_Struct int32 bool
  
  function any_l (_ : 'b) : 'a
  
  let rec t_Struct (input:t_Struct) (ret  (x:int32) (b:bool))= any
    [ good (x:int32) (b:bool)-> {C_Struct x b = input} (! ret {x} {b})
    | bad (x:int32) (b:bool)-> {C_Struct x b <> input} {false} any ]
    
  
  function t_Struct__x (self : t_Struct) : int32 =
    match self with
      | C_Struct a _ -> a
      end
  
  function t_Struct__b (self : t_Struct) : bool =
    match self with
      | C_Struct _ a -> a
      end
end
module T_deep_model__StructDeepModel
  use prelude.prelude.Int
  
  type t_StructDeepModel  =
    | C_StructDeepModel int bool
  
  function any_l (_ : 'b) : 'a
  
  let rec t_StructDeepModel (input:t_StructDeepModel) (ret  (x:int) (b:bool))= any
    [ good (x:int) (b:bool)-> {C_StructDeepModel x b = input} (! ret {x} {b})
    | bad (x:int) (b:bool)-> {C_StructDeepModel x b <> input} {false} any ]
    
end
module T_deep_model__TupleStructGenerics
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  type t_TupleStructGenerics 't 'u =
    | C_TupleStructGenerics int32 't 'u
  
  function any_l (_ : 'b) : 'a
  
  let rec t_TupleStructGenerics < 't > < 'u > (input:t_TupleStructGenerics 't 'u) (ret  (field_0:int32) (field_1:'t) (field_2:'u))= any
    [ good (field_0:int32) (field_1:'t) (field_2:'u)-> {C_TupleStructGenerics field_0 field_1 field_2 = input}
      (! ret {field_0} {field_1} {field_2})
    | bad (field_0:int32) (field_1:'t) (field_2:'u)-> {C_TupleStructGenerics field_0 field_1 field_2 <> input}
      {false}
      any ]
    
  
  function t_TupleStructGenerics__0 (self : t_TupleStructGenerics 't 'u) : int32 =
    match self with
      | C_TupleStructGenerics a _ _ -> a
      end
  
  function t_TupleStructGenerics__1 (self : t_TupleStructGenerics 't 'u) : 't =
    match self with
      | C_TupleStructGenerics _ a _ -> a
      end
  
  function t_TupleStructGenerics__2 (self : t_TupleStructGenerics 't 'u) : 'u =
    match self with
      | C_TupleStructGenerics _ _ a -> a
      end
end
module T_deep_model__TupleStructGenericsDeepModel
  type t_DeepModelTy'1
  
  type t_DeepModelTy'0
  
  use prelude.prelude.Int
  
  type t_TupleStructGenericsDeepModel 't 'u 'proj0 'proj1 =
    | C_TupleStructGenericsDeepModel int 'proj0 'proj1
  
  function any_l (_ : 'b) : 'a
  
  let rec t_TupleStructGenericsDeepModel < 't > < 'u > < 'proj0 > < 'proj1 > (input:t_TupleStructGenericsDeepModel 't 'u 'proj0 'proj1) (ret  (field_0:int) (field_1:'proj0) (field_2:'proj1))= any
    [ good (field_0:int) (field_1:'proj0) (field_2:'proj1)-> {C_TupleStructGenericsDeepModel field_0 field_1 field_2
      = input}
      (! ret {field_0} {field_1} {field_2})
    | bad (field_0:int) (field_1:'proj0) (field_2:'proj1)-> {C_TupleStructGenericsDeepModel field_0 field_1 field_2
      <> input}
      {false}
      any ]
    
end
module T_deep_model__StructGenerics
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  type t_StructGenerics 't 'u =
    | C_StructGenerics int32 't 'u
  
  function any_l (_ : 'b) : 'a
  
  let rec t_StructGenerics < 't > < 'u > (input:t_StructGenerics 't 'u) (ret  (x:int32) (t:'t) (u:'u))= any
    [ good (x:int32) (t:'t) (u:'u)-> {C_StructGenerics x t u = input} (! ret {x} {t} {u})
    | bad (x:int32) (t:'t) (u:'u)-> {C_StructGenerics x t u <> input} {false} any ]
    
  
  function t_StructGenerics__x (self : t_StructGenerics 't 'u) : int32 =
    match self with
      | C_StructGenerics a _ _ -> a
      end
  
  function t_StructGenerics__t (self : t_StructGenerics 't 'u) : 't =
    match self with
      | C_StructGenerics _ a _ -> a
      end
  
  function t_StructGenerics__u (self : t_StructGenerics 't 'u) : 'u =
    match self with
      | C_StructGenerics _ _ a -> a
      end
end
module T_deep_model__StructGenericsDeepModel
  type t_DeepModelTy'1
  
  type t_DeepModelTy'0
  
  use prelude.prelude.Int
  
  type t_StructGenericsDeepModel 't 'u 'proj0 'proj1 =
    | C_StructGenericsDeepModel int 'proj0 'proj1
  
  function any_l (_ : 'b) : 'a
  
  let rec t_StructGenericsDeepModel < 't > < 'u > < 'proj0 > < 'proj1 > (input:t_StructGenericsDeepModel 't 'u 'proj0 'proj1) (ret  (x:int) (t:'proj0) (u:'proj1))= any
    [ good (x:int) (t:'proj0) (u:'proj1)-> {C_StructGenericsDeepModel x t u = input} (! ret {x} {t} {u})
    | bad (x:int) (t:'proj0) (u:'proj1)-> {C_StructGenericsDeepModel x t u <> input} {false} any ]
    
end
module T_deep_model__UnitEnum
  type t_UnitEnum  =
    | C_A
    | C_B
  
  function any_l (_ : 'b) : 'a
  
  let rec v_A (input:t_UnitEnum) (ret  )= any [ good -> {C_A  = input} (! ret) | bad -> {C_A  <> input} {false} any ] 
  
  let rec v_B (input:t_UnitEnum) (ret  )= any [ good -> {C_B  = input} (! ret) | bad -> {C_B  <> input} {false} any ] 
end
module T_deep_model__UnitEnumDeepModel
  type t_UnitEnumDeepModel  =
    | C_A
    | C_B
  
  function any_l (_ : 'b) : 'a
  
  let rec v_A (input:t_UnitEnumDeepModel) (ret  )= any
    [ good -> {C_A  = input} (! ret) | bad -> {C_A  <> input} {false} any ]
    
  
  let rec v_B (input:t_UnitEnumDeepModel) (ret  )= any
    [ good -> {C_B  = input} (! ret) | bad -> {C_B  <> input} {false} any ]
    
end
module T_deep_model__Enum
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  type t_Enum  =
    | C_A
    | C_Int int32
    | C_Bool bool
  
  function any_l (_ : 'b) : 'a
  
  let rec v_A (input:t_Enum) (ret  )= any [ good -> {C_A  = input} (! ret) | bad -> {C_A  <> input} {false} any ] 
  
  let rec v_Int (input:t_Enum) (ret  (field_0:int32))= any
    [ good (field_0:int32)-> {C_Int field_0 = input} (! ret {field_0})
    | bad (field_0:int32)-> {C_Int field_0 <> input} {false} any ]
    
  
  let rec v_Bool (input:t_Enum) (ret  (b:bool))= any
    [ good (b:bool)-> {C_Bool b = input} (! ret {b}) | bad (b:bool)-> {C_Bool b <> input} {false} any ]
    
end
module T_deep_model__EnumDeepModel
  use prelude.prelude.Int
  
  type t_EnumDeepModel  =
    | C_A
    | C_Int int
    | C_Bool bool
  
  function any_l (_ : 'b) : 'a
  
  let rec v_A (input:t_EnumDeepModel) (ret  )= any
    [ good -> {C_A  = input} (! ret) | bad -> {C_A  <> input} {false} any ]
    
  
  let rec v_Int (input:t_EnumDeepModel) (ret  (field_0:int))= any
    [ good (field_0:int)-> {C_Int field_0 = input} (! ret {field_0})
    | bad (field_0:int)-> {C_Int field_0 <> input} {false} any ]
    
  
  let rec v_Bool (input:t_EnumDeepModel) (ret  (b:bool))= any
    [ good (b:bool)-> {C_Bool b = input} (! ret {b}) | bad (b:bool)-> {C_Bool b <> input} {false} any ]
    
end
module T_deep_model__EnumGenerics
  use prelude.prelude.Int32
  
  use prelude.prelude.Int
  
  type t_EnumGenerics 't 'u =
    | C_A
    | C_Int int32
    | C_T 't
    | C_U 'u
  
  function any_l (_ : 'b) : 'a
  
  let rec v_A < 't > < 'u > (input:t_EnumGenerics 't 'u) (ret  )= any
    [ good -> {C_A  = input} (! ret) | bad -> {C_A  <> input} {false} any ]
    
  
  let rec v_Int < 't > < 'u > (input:t_EnumGenerics 't 'u) (ret  (field_0:int32))= any
    [ good (field_0:int32)-> {C_Int field_0 = input} (! ret {field_0})
    | bad (field_0:int32)-> {C_Int field_0 <> input} {false} any ]
    
  
  let rec v_T < 't > < 'u > (input:t_EnumGenerics 't 'u) (ret  (field_0:'t))= any
    [ good (field_0:'t)-> {C_T field_0 = input} (! ret {field_0})
    | bad (field_0:'t)-> {C_T field_0 <> input} {false} any ]
    
  
  let rec v_U < 't > < 'u > (input:t_EnumGenerics 't 'u) (ret  (u:'u))= any
    [ good (u:'u)-> {C_U u = input} (! ret {u}) | bad (u:'u)-> {C_U u <> input} {false} any ]
    
end
module T_deep_model__EnumGenericsDeepModel
  type t_DeepModelTy'1
  
  type t_DeepModelTy'0
  
  use prelude.prelude.Int
  
  type t_EnumGenericsDeepModel 't 'u 'proj0 'proj1 =
    | C_A
    | C_Int int
    | C_T 'proj0
    | C_U 'proj1
  
  function any_l (_ : 'b) : 'a
  
  let rec v_A < 't > < 'u > < 'proj0 > < 'proj1 > (input:t_EnumGenericsDeepModel 't 'u 'proj0 'proj1) (ret  )= any
    [ good -> {C_A  = input} (! ret) | bad -> {C_A  <> input} {false} any ]
    
  
  let rec v_Int < 't > < 'u > < 'proj0 > < 'proj1 > (input:t_EnumGenericsDeepModel 't 'u 'proj0 'proj1) (ret  (field_0:int))= any
    [ good (field_0:int)-> {C_Int field_0 = input} (! ret {field_0})
    | bad (field_0:int)-> {C_Int field_0 <> input} {false} any ]
    
  
  let rec v_T < 't > < 'u > < 'proj0 > < 'proj1 > (input:t_EnumGenericsDeepModel 't 'u 'proj0 'proj1) (ret  (field_0:'proj0))= any
    [ good (field_0:'proj0)-> {C_T field_0 = input} (! ret {field_0})
    | bad (field_0:'proj0)-> {C_T field_0 <> input} {false} any ]
    
  
  let rec v_U < 't > < 'u > < 'proj0 > < 'proj1 > (input:t_EnumGenericsDeepModel 't 'u 'proj0 'proj1) (ret  (u:'proj1))= any
    [ good (u:'proj1)-> {C_U u = input} (! ret {u}) | bad (u:'proj1)-> {C_U u <> input} {false} any ]
    
end
module M_deep_model__qy123zimplqy35z0qy125z
  
end
module M_deep_model__qy123zimplqy35z1qy125z
  
end
module M_deep_model__qy123zimplqy35z2qy125z
  
end
module M_deep_model__qy123zimplqy35z3qy125z
  type t
  
  type u
end
module M_deep_model__qy123zimplqy35z4qy125z
  type t
  
  type u
end
module M_deep_model__qy123zimplqy35z5qy125z
  
end
module M_deep_model__qy123zimplqy35z6qy125z
  
end
module M_deep_model__qy123zimplqy35z7qy125z
  type t
  
  type u
end
