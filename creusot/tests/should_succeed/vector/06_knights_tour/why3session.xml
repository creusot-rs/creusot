<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_knights_tour.coma"/>
<theory name="M_06_knights_tour__qy123zimplqy35z3qy125z__clone" proved="true">
 <goal name="vc_clone&#39;" proved="true">
 <proof prover="0"><result status="valid" time="0.007358" steps="8"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qy123zimplqy35z0qy125z__mov" proved="true">
 <goal name="vc_mov" proved="true">
 <proof prover="0"><result status="valid" time="0.027338" steps="635"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qy123zimplqy35z1qy125z__new__qy123zclosureqy35z3qy125z" proved="true">
 <goal name="vc_c06knightstour_impl1_new_closure3" proved="true">
 <proof prover="0"><result status="valid" time="0.017609" steps="45"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qy123zimplqy35z1qy125z__new" proved="true">
 <goal name="vc_new" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_new.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.022748" steps="5"/></proof>
  </goal>
  <goal name="vc_new.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017173" steps="13"/></proof>
  </goal>
  <goal name="vc_new.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020583" steps="47"/></proof>
  </goal>
  <goal name="vc_new.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.029865" steps="176"/></proof>
  </goal>
  <goal name="vc_new.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.022329" steps="22"/></proof>
  </goal>
  <goal name="vc_new.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020334" steps="11"/></proof>
  </goal>
  <goal name="vc_new.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.156481" steps="375505"/></proof>
  </goal>
  <goal name="vc_new.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.035396" steps="55"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__qy123zimplqy35z1qy125z__available" proved="true">
 <goal name="vc_available" proved="true">
 <proof prover="0"><result status="valid" time="0.678846" steps="6615"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qy123zimplqy35z1qy125z__count_degree" proved="true">
 <goal name="vc_count_degree" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_count_degree.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013460" steps="11"/></proof>
  </goal>
  <goal name="vc_count_degree.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013080" steps="8"/></proof>
  </goal>
  <goal name="vc_count_degree.2" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_count_degree.2.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.034585" steps="13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.3" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.033387" steps="13087"/></proof>
  </goal>
  <goal name="vc_count_degree.4" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016815" steps="14"/></proof>
  </goal>
  <goal name="vc_count_degree.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013479" steps="25"/></proof>
  </goal>
  <goal name="vc_count_degree.6" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_count_degree.6.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_count_degree.6.0.0" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.6.0.0.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.6.0.0.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.6.0.0.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.155256" steps="1215"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="vc_count_degree.6.0.1" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.6.0.1.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.6.0.1.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.6.0.1.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.158709" steps="1215"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.7" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_count_degree.7.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_count_degree.7.0.0" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.7.0.0.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.7.0.0.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.7.0.0.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.182294" steps="1300"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="vc_count_degree.7.0.1" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.7.0.1.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.7.0.1.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.7.0.1.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.140445" steps="1300"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.025839" steps="76"/></proof>
  </goal>
  <goal name="vc_count_degree.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.023150" steps="85"/></proof>
  </goal>
  <goal name="vc_count_degree.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.019615" steps="36"/></proof>
  </goal>
  <goal name="vc_count_degree.11" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_count_degree.11.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.079623" steps="72"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.12" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.076768" steps="13945"/></proof>
  </goal>
  <goal name="vc_count_degree.13" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017593" steps="70"/></proof>
  </goal>
  <goal name="vc_count_degree.14" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.090568" steps="463"/></proof>
  </goal>
  <goal name="vc_count_degree.15" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020861" steps="81"/></proof>
  </goal>
  <goal name="vc_count_degree.16" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.075614" steps="13974"/></proof>
  </goal>
  <goal name="vc_count_degree.17" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.022473" steps="77"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__qy123zimplqy35z1qy125z__set" proved="true">
 <goal name="vc_set" proved="true">
 <proof prover="0"><result status="valid" time="0.159808" steps="863"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__min" proved="true">
 <goal name="vc_min" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_min.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_min.0.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.024712" steps="3"/></proof>
   </goal>
   <goal name="vc_min.0.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.012637" steps="2"/></proof>
   </goal>
   <goal name="vc_min.0.2" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.028150" steps="8378"/></proof>
   </goal>
   <goal name="vc_min.0.3" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.133446" steps="8328"/></proof>
   </goal>
   <goal name="vc_min.0.4" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.025971" steps="67"/></proof>
   </goal>
   <goal name="vc_min.0.5" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.044756" steps="1712"/></proof>
   </goal>
   <goal name="vc_min.0.6" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.059118" steps="12992"/></proof>
   </goal>
   <goal name="vc_min.0.7" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.016609" steps="39"/></proof>
   </goal>
   <goal name="vc_min.0.8" expl="loop invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_min.0.8.0" expl="loop invariant" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_min.0.8.0.0" expl="loop invariant" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_min.0.8.0.0.0" expl="loop invariant" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_min.0.8.0.0.0.0" expl="loop invariant" proved="true">
       <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.026611" steps="140"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_min.0.9" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.135505" steps="15996"/></proof>
   </goal>
   <goal name="vc_min.0.10" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.016803" steps="41"/></proof>
   </goal>
   <goal name="vc_min.0.11" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.314167" steps="2892"/></proof>
   </goal>
   <goal name="vc_min.0.12" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.078365" steps="15962"/></proof>
   </goal>
   <goal name="vc_min.0.13" expl="loop invariant" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.020000" steps="105194"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__dumb_nonlinear_arith__Impl" proved="true">
 <goal name="vc_dumb_nonlinear_arith" proved="true">
 <proof prover="0"><result status="valid" time="0.007049" steps="4"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__knights_tour" proved="true">
 <goal name="vc_knights_tour" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_knights_tour.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020255" steps="8"/></proof>
  </goal>
  <goal name="vc_knights_tour.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.016786" steps="27"/></proof>
  </goal>
  <goal name="vc_knights_tour.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.019765" steps="33"/></proof>
  </goal>
  <goal name="vc_knights_tour.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.021640" steps="318"/></proof>
  </goal>
  <goal name="vc_knights_tour.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020942" steps="26"/></proof>
  </goal>
  <goal name="vc_knights_tour.5" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.025367" steps="51"/></proof>
  </goal>
  <goal name="vc_knights_tour.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030545" steps="144"/></proof>
  </goal>
  <goal name="vc_knights_tour.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017405" steps="49"/></proof>
  </goal>
  <goal name="vc_knights_tour.8" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_knights_tour.8.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.052907" steps="1157"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.9" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.054622" steps="9214"/></proof>
  </goal>
  <goal name="vc_knights_tour.10" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.130000" steps="9612"/></proof>
  </goal>
  <goal name="vc_knights_tour.11" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.012789" steps="221"/></proof>
  </goal>
  <goal name="vc_knights_tour.12" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.019997" steps="66"/></proof>
  </goal>
  <goal name="vc_knights_tour.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.033314" steps="233"/></proof>
  </goal>
  <goal name="vc_knights_tour.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.025413" steps="303"/></proof>
  </goal>
  <goal name="vc_knights_tour.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.012759" steps="144"/></proof>
  </goal>
  <goal name="vc_knights_tour.16" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_knights_tour.16.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.026006" steps="151"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.17" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.176502" steps="22637"/></proof>
  </goal>
  <goal name="vc_knights_tour.18" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.021623" steps="155"/></proof>
  </goal>
  <goal name="vc_knights_tour.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.031817" steps="342"/></proof>
  </goal>
  <goal name="vc_knights_tour.20" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_knights_tour.20.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_knights_tour.20.0.0" proved="true">
    <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.571140" steps="6569"/></proof>
    </goal>
    <goal name="vc_knights_tour.20.0.1" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="0.550261" steps="6568"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.21" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_knights_tour.21.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_knights_tour.21.0.0" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="0.672435" steps="6739"/></proof>
    </goal>
    <goal name="vc_knights_tour.21.0.1" proved="true">
    <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.637254" steps="6738"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.22" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_knights_tour.22.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.054955" steps="673"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.161000" steps="705"/></proof>
  </goal>
  <goal name="vc_knights_tour.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.027311" steps="218"/></proof>
  </goal>
  <goal name="vc_knights_tour.25" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.263549" steps="28485"/></proof>
  </goal>
  <goal name="vc_knights_tour.26" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.120406" steps="23566"/></proof>
  </goal>
  <goal name="vc_knights_tour.27" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.033684" steps="595"/></proof>
  </goal>
  <goal name="vc_knights_tour.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.064023" steps="229"/></proof>
  </goal>
  <goal name="vc_knights_tour.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.018927" steps="229"/></proof>
  </goal>
  <goal name="vc_knights_tour.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.141854" steps="599"/></proof>
  </goal>
  <goal name="vc_knights_tour.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030440" steps="611"/></proof>
  </goal>
  <goal name="vc_knights_tour.32" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.402574" steps="55563"/></proof>
  </goal>
  <goal name="vc_knights_tour.33" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.200799" steps="2572"/></proof>
  </goal>
  <goal name="vc_knights_tour.34" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.142641" steps="640"/></proof>
  </goal>
  <goal name="vc_knights_tour.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.207282" steps="1635"/></proof>
  </goal>
  <goal name="vc_knights_tour.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020171" steps="274"/></proof>
  </goal>
  <goal name="vc_knights_tour.37" expl="loop invariant" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.469239" steps="7877"/></proof>
  </goal>
  <goal name="vc_knights_tour.38" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017689" steps="290"/></proof>
  </goal>
  <goal name="vc_knights_tour.39" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.185958" steps="17744"/></proof>
  </goal>
  <goal name="vc_knights_tour.40" expl="loop invariant" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.398529" steps="6883"/></proof>
  </goal>
  <goal name="vc_knights_tour.41" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.146429" steps="557"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__qy123zimplqy35z3qy125z" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.006577" steps="6"/></proof>
 </goal>
</theory>
</file>
</why3session>
