<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_knights_tour.coma"/>
<theory name="C06KnightsTour_Impl3_Clone" proved="true">
 <goal name="vc_clone&#39;" proved="true">
 <proof prover="0"><result status="valid" time="0.007358" steps="8"/></proof>
 </goal>
</theory>
<theory name="C06KnightsTour_Impl0_Mov" proved="true">
 <goal name="vc_mov" proved="true">
 <proof prover="0"><result status="valid" time="0.027338" steps="636"/></proof>
 </goal>
</theory>
<theory name="C06KnightsTour_Impl1_New_Closure3" proved="true">
 <goal name="vc_c06knightstour_impl1_new_closure3" proved="true">
 <proof prover="0"><result status="valid" time="0.017609" steps="47"/></proof>
 </goal>
</theory>
<theory name="C06KnightsTour_Impl1_New" proved="true">
 <goal name="vc_new" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_new.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020334" steps="5"/></proof>
  </goal>
  <goal name="vc_new.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.022748" steps="13"/></proof>
  </goal>
  <goal name="vc_new.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020583" steps="56"/></proof>
  </goal>
  <goal name="vc_new.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.029865" steps="198"/></proof>
  </goal>
  <goal name="vc_new.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.022329" steps="24"/></proof>
  </goal>
  <goal name="vc_new.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017173" steps="11"/></proof>
  </goal>
  <goal name="vc_new.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.100977" steps="421617"/></proof>
  </goal>
  <goal name="vc_new.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.035396" steps="57"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06KnightsTour_Impl1_Available" proved="true">
 <goal name="vc_available" proved="true">
 <proof prover="0"><result status="valid" time="0.182798" steps="5218"/></proof>
 </goal>
</theory>
<theory name="C06KnightsTour_Impl1_CountDegree" proved="true">
 <goal name="vc_count_degree" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_count_degree.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013460" steps="11"/></proof>
  </goal>
  <goal name="vc_count_degree.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013080" steps="8"/></proof>
  </goal>
  <goal name="vc_count_degree.2" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_count_degree.2.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.034585" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.3" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.033387" steps="13202"/></proof>
  </goal>
  <goal name="vc_count_degree.4" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016815" steps="14"/></proof>
  </goal>
  <goal name="vc_count_degree.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013479" steps="25"/></proof>
  </goal>
  <goal name="vc_count_degree.6" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_count_degree.6.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_count_degree.6.0.0" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.6.0.0.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.6.0.0.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.6.0.0.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.459746" steps="12563"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="vc_count_degree.6.0.1" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.6.0.1.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.6.0.1.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.6.0.1.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.465504" steps="12570"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.7" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_count_degree.7.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_count_degree.7.0.0" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.7.0.0.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.7.0.0.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.7.0.0.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.501474" steps="12940"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="vc_count_degree.7.0.1" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="vc_count_degree.7.0.1.0" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="vc_count_degree.7.0.1.0.0" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="vc_count_degree.7.0.1.0.0.0" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.484435" steps="12942"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.025839" steps="82"/></proof>
  </goal>
  <goal name="vc_count_degree.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.023150" steps="91"/></proof>
  </goal>
  <goal name="vc_count_degree.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.019615" steps="36"/></proof>
  </goal>
  <goal name="vc_count_degree.11" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_count_degree.11.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.079623" steps="74"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_count_degree.12" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.054433" steps="16056"/></proof>
  </goal>
  <goal name="vc_count_degree.13" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017593" steps="71"/></proof>
  </goal>
  <goal name="vc_count_degree.14" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.090568" steps="599"/></proof>
  </goal>
  <goal name="vc_count_degree.15" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020861" steps="83"/></proof>
  </goal>
  <goal name="vc_count_degree.16" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.052281" steps="16380"/></proof>
  </goal>
  <goal name="vc_count_degree.17" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.022473" steps="78"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06KnightsTour_Impl1_Set" proved="true">
 <goal name="vc_set" proved="true">
 <proof prover="0"><result status="valid" time="0.072158" steps="1101"/></proof>
 </goal>
</theory>
<theory name="C06KnightsTour_Min" proved="true">
 <goal name="vc_min" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_min.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_min.0.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.024712" steps="3"/></proof>
   </goal>
   <goal name="vc_min.0.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.012637" steps="2"/></proof>
   </goal>
   <goal name="vc_min.0.2" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.022090" steps="8389"/></proof>
   </goal>
   <goal name="vc_min.0.3" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.022112" steps="8339"/></proof>
   </goal>
   <goal name="vc_min.0.4" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.025971" steps="65"/></proof>
   </goal>
   <goal name="vc_min.0.5" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.116728" steps="2314"/></proof>
   </goal>
   <goal name="vc_min.0.6" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.052933" steps="13872"/></proof>
   </goal>
   <goal name="vc_min.0.7" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.016803" steps="39"/></proof>
   </goal>
   <goal name="vc_min.0.8" expl="loop invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_min.0.8.0" expl="loop invariant" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_min.0.8.0.0" expl="loop invariant" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_min.0.8.0.0.0" expl="loop invariant" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_min.0.8.0.0.0.0" expl="loop invariant" proved="true">
       <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.016551" steps="126"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_min.0.9" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.052041" steps="17345"/></proof>
   </goal>
   <goal name="vc_min.0.10" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.016609" steps="41"/></proof>
   </goal>
   <goal name="vc_min.0.11" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.172994" steps="3946"/></proof>
   </goal>
   <goal name="vc_min.0.12" expl="loop invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.042490" steps="17342"/></proof>
   </goal>
   <goal name="vc_min.0.13" expl="loop invariant" proved="true">
   <proof prover="2"><result status="valid" time="0.020000" steps="106333"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06KnightsTour_DumbNonlinearArith_Impl" proved="true">
 <goal name="vc_dumb_nonlinear_arith" proved="true">
 <proof prover="0"><result status="valid" time="0.007049" steps="4"/></proof>
 </goal>
</theory>
<theory name="C06KnightsTour_KnightsTour" proved="true">
 <goal name="vc_knights_tour" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_knights_tour.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020255" steps="8"/></proof>
  </goal>
  <goal name="vc_knights_tour.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.016786" steps="28"/></proof>
  </goal>
  <goal name="vc_knights_tour.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.019765" steps="33"/></proof>
  </goal>
  <goal name="vc_knights_tour.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.021640" steps="326"/></proof>
  </goal>
  <goal name="vc_knights_tour.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020942" steps="26"/></proof>
  </goal>
  <goal name="vc_knights_tour.5" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.025367" steps="52"/></proof>
  </goal>
  <goal name="vc_knights_tour.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030545" steps="144"/></proof>
  </goal>
  <goal name="vc_knights_tour.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017405" steps="49"/></proof>
  </goal>
  <goal name="vc_knights_tour.8" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_knights_tour.8.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.052907" steps="1137"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.9" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.054622" steps="9399"/></proof>
  </goal>
  <goal name="vc_knights_tour.10" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.130000" steps="9798"/></proof>
  </goal>
  <goal name="vc_knights_tour.11" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.012789" steps="222"/></proof>
  </goal>
  <goal name="vc_knights_tour.12" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.019997" steps="66"/></proof>
  </goal>
  <goal name="vc_knights_tour.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.033314" steps="234"/></proof>
  </goal>
  <goal name="vc_knights_tour.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.025413" steps="307"/></proof>
  </goal>
  <goal name="vc_knights_tour.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.012759" steps="144"/></proof>
  </goal>
  <goal name="vc_knights_tour.16" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_knights_tour.16.0" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.042207" steps="151"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.17" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.056943" steps="22739"/></proof>
  </goal>
  <goal name="vc_knights_tour.18" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.021623" steps="155"/></proof>
  </goal>
  <goal name="vc_knights_tour.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030440" steps="353"/></proof>
  </goal>
  <goal name="vc_knights_tour.20" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_knights_tour.20.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_knights_tour.20.0.0" proved="true">
    <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.149848" steps="27690"/></proof>
    </goal>
    <goal name="vc_knights_tour.20.0.1" proved="true">
    <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.159271" steps="27691"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.21" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_knights_tour.21.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_knights_tour.21.0.0" proved="true">
    <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.198279" steps="28134"/></proof>
    </goal>
    <goal name="vc_knights_tour.21.0.1" proved="true">
    <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.180800" steps="28138"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.22" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_knights_tour.22.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.054955" steps="701"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_knights_tour.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.047777" steps="733"/></proof>
  </goal>
  <goal name="vc_knights_tour.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.027311" steps="222"/></proof>
  </goal>
  <goal name="vc_knights_tour.25" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.094166" steps="28797"/></proof>
  </goal>
  <goal name="vc_knights_tour.26" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.279293" steps="4078"/></proof>
  </goal>
  <goal name="vc_knights_tour.27" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.023032" steps="613"/></proof>
  </goal>
  <goal name="vc_knights_tour.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.064023" steps="234"/></proof>
  </goal>
  <goal name="vc_knights_tour.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.018927" steps="234"/></proof>
  </goal>
  <goal name="vc_knights_tour.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039488" steps="615"/></proof>
  </goal>
  <goal name="vc_knights_tour.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.026911" steps="627"/></proof>
  </goal>
  <goal name="vc_knights_tour.32" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.161484" steps="41602"/></proof>
  </goal>
  <goal name="vc_knights_tour.33" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.187602" steps="5808"/></proof>
  </goal>
  <goal name="vc_knights_tour.34" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.035759" steps="663"/></proof>
  </goal>
  <goal name="vc_knights_tour.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.124954" steps="1721"/></proof>
  </goal>
  <goal name="vc_knights_tour.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020171" steps="279"/></proof>
  </goal>
  <goal name="vc_knights_tour.37" expl="loop invariant" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.372787" steps="8835"/></proof>
  </goal>
  <goal name="vc_knights_tour.38" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.017689" steps="295"/></proof>
  </goal>
  <goal name="vc_knights_tour.39" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.024959" steps="18131"/></proof>
  </goal>
  <goal name="vc_knights_tour.40" expl="loop invariant" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.364270" steps="8101"/></proof>
  </goal>
  <goal name="vc_knights_tour.41" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.027411" steps="576"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C06KnightsTour_Impl3" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.006577" steps="6"/></proof>
 </goal>
</theory>
</file>
</why3session>
