
module Model_Seven_Type
  type t_seven  =
    | C_Seven
    
end
module Model_Impl0_ShallowModel_Stub
  use prelude.Int
  use Model_Seven_Type as Model_Seven_Type
  function shallow_model [#"../model.rs" 12 4 12 50] (self : Model_Seven_Type.t_seven) : int
end
module Model_Impl0_ShallowModel_Interface
  use prelude.Int
  use Model_Seven_Type as Model_Seven_Type
  function shallow_model [#"../model.rs" 12 4 12 50] (self : Model_Seven_Type.t_seven) : int
  val shallow_model [#"../model.rs" 12 4 12 50] (self : Model_Seven_Type.t_seven) : int
    ensures { result = shallow_model self }
    
end
module Model_Impl0_ShallowModel
  use prelude.Int
  use Model_Seven_Type as Model_Seven_Type
  function shallow_model [#"../model.rs" 12 4 12 50] (self : Model_Seven_Type.t_seven) : int
  val shallow_model [#"../model.rs" 12 4 12 50] (self : Model_Seven_Type.t_seven) : int
    ensures { result = shallow_model self }
    
end
module Model_Seven_Interface
  use Model_Seven_Type as Model_Seven_Type
  clone Model_Impl0_ShallowModel_Stub as ShallowModel0
  val seven [#"../model.rs" 19 0 19 23] (_1 : ()) : Model_Seven_Type.t_seven
    ensures { [#"../model.rs" 18 10 18 22] ShallowModel0.shallow_model result = 7 }
    
end
module Model_Pair_Type
  type t_pair 't 'u =
    | C_Pair 't 'u
    
end
module Model_Impl1_ShallowModel_Stub
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  function shallow_model [#"../model.rs" 31 4 31 50] (self : Model_Pair_Type.t_pair t u) : (t, u)
end
module Model_Impl1_ShallowModel_Interface
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  function shallow_model [#"../model.rs" 31 4 31 50] (self : Model_Pair_Type.t_pair t u) : (t, u)
  val shallow_model [#"../model.rs" 31 4 31 50] (self : Model_Pair_Type.t_pair t u) : (t, u)
    ensures { result = shallow_model self }
    
end
module Model_Impl1_ShallowModel
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  function shallow_model [#"../model.rs" 31 4 31 50] (self : Model_Pair_Type.t_pair t u) : (t, u)
  val shallow_model [#"../model.rs" 31 4 31 50] (self : Model_Pair_Type.t_pair t u) : (t, u)
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Invariant_Inv_Stub
  type t
  predicate inv (_x : t)
end
module CreusotContracts_Invariant_Inv_Interface
  type t
  predicate inv (_x : t)
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CreusotContracts_Invariant_Inv
  type t
  predicate inv (_x : t) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 27 4 27 8] true
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module Model_Pair_Interface
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = Model_Pair_Type.t_pair t u
  clone Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type u = u
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = u
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = t
  val pair [#"../model.rs" 38 0 38 43] (a : t) (b : u) : Model_Pair_Type.t_pair t u
    requires {[#"../model.rs" 38 18 38 19] Inv0.inv a}
    requires {[#"../model.rs" 38 24 38 25] Inv1.inv b}
    ensures { [#"../model.rs" 37 10 37 27] ShallowModel0.shallow_model result = (a, b) }
    ensures { [#"../model.rs" 38 33 38 43] Inv2.inv result }
    
end
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
end
module Core_Cell_UnsafeCell_Type
  type t_unsafecell 't =
    | C_UnsafeCell 't
    
end
module Core_Sync_Atomic_AtomicUsize_Type
  use prelude.Int
  use prelude.UIntSize
  use Core_Cell_UnsafeCell_Type as Core_Cell_UnsafeCell_Type
  type t_atomicusize  =
    | C_AtomicUsize (Core_Cell_UnsafeCell_Type.t_unsafecell usize)
    
end
module Alloc_Sync_ArcInner_Type
  use Core_Sync_Atomic_AtomicUsize_Type as Core_Sync_Atomic_AtomicUsize_Type
  type t_arcinner 't =
    | C_ArcInner (Core_Sync_Atomic_AtomicUsize_Type.t_atomicusize) (Core_Sync_Atomic_AtomicUsize_Type.t_atomicusize) 't
    
end
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
end
module Alloc_Sync_Arc_Type
  use Alloc_Sync_ArcInner_Type as Alloc_Sync_ArcInner_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_arc 't =
    | C_Arc (Core_Ptr_NonNull_NonNull_Type.t_nonnull (Alloc_Sync_ArcInner_Type.t_arcinner 't)) (Core_Marker_PhantomData_Type.t_phantomdata (Alloc_Sync_ArcInner_Type.t_arcinner 't))
    
end
module CreusotContracts_Model_Impl3_ShallowModel_Stub
  type t
  use Alloc_Sync_Arc_Type as Alloc_Sync_Arc_Type
  function shallow_model (self : Alloc_Sync_Arc_Type.t_arc t) : t
end
module CreusotContracts_Model_Impl3_ShallowModel_Interface
  type t
  use Alloc_Sync_Arc_Type as Alloc_Sync_Arc_Type
  function shallow_model (self : Alloc_Sync_Arc_Type.t_arc t) : t
  val shallow_model (self : Alloc_Sync_Arc_Type.t_arc t) : t
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl3_ShallowModel
  type t
  use Alloc_Sync_Arc_Type as Alloc_Sync_Arc_Type
  function shallow_model (self : Alloc_Sync_Arc_Type.t_arc t) : t
  val shallow_model (self : Alloc_Sync_Arc_Type.t_arc t) : t
    ensures { result = shallow_model self }
    
end
module Model_TestArc_Interface
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Sync_Arc_Type as Alloc_Sync_Arc_Type
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = usize
  val test_arc [#"../model.rs" 43 0 43 41] (a : Alloc_Sync_Arc_Type.t_arc usize) : ()
    requires {[#"../model.rs" 42 11 42 19] UIntSize.to_int (ShallowModel0.shallow_model a) = 0}
    
end
module Model_TestArc
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Sync_Arc_Type as Alloc_Sync_Arc_Type
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = usize
  let rec cfg test_arc [#"../model.rs" 43 0 43 41] [@cfg:stackify] [@cfg:subregion_analysis] (a : Alloc_Sync_Arc_Type.t_arc usize) : ()
    requires {[#"../model.rs" 42 11 42 19] UIntSize.to_int (ShallowModel0.shallow_model a) = 0}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _0 <- ();
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
module Core_Cell_Cell_Type
  use Core_Cell_UnsafeCell_Type as Core_Cell_UnsafeCell_Type
  type t_cell 't =
    | C_Cell (Core_Cell_UnsafeCell_Type.t_unsafecell 't)
    
end
module Alloc_Rc_RcBox_Type
  use prelude.Int
  use prelude.UIntSize
  use Core_Cell_Cell_Type as Core_Cell_Cell_Type
  type t_rcbox 't =
    | C_RcBox (Core_Cell_Cell_Type.t_cell usize) (Core_Cell_Cell_Type.t_cell usize) 't
    
end
module Alloc_Rc_Rc_Type
  use Alloc_Rc_RcBox_Type as Alloc_Rc_RcBox_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_rc 't =
    | C_Rc (Core_Ptr_NonNull_NonNull_Type.t_nonnull (Alloc_Rc_RcBox_Type.t_rcbox 't)) (Core_Marker_PhantomData_Type.t_phantomdata (Alloc_Rc_RcBox_Type.t_rcbox 't))
    
end
module CreusotContracts_Model_Impl1_ShallowModel_Stub
  type t
  use Alloc_Rc_Rc_Type as Alloc_Rc_Rc_Type
  function shallow_model (self : Alloc_Rc_Rc_Type.t_rc t) : t
end
module CreusotContracts_Model_Impl1_ShallowModel_Interface
  type t
  use Alloc_Rc_Rc_Type as Alloc_Rc_Rc_Type
  function shallow_model (self : Alloc_Rc_Rc_Type.t_rc t) : t
  val shallow_model (self : Alloc_Rc_Rc_Type.t_rc t) : t
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl1_ShallowModel
  type t
  use Alloc_Rc_Rc_Type as Alloc_Rc_Rc_Type
  function shallow_model (self : Alloc_Rc_Rc_Type.t_rc t) : t
  val shallow_model (self : Alloc_Rc_Rc_Type.t_rc t) : t
    ensures { result = shallow_model self }
    
end
module Model_TestRc_Interface
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Rc_Rc_Type as Alloc_Rc_Rc_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = usize
  val test_rc [#"../model.rs" 46 0 46 37] (v : Alloc_Rc_Rc_Type.t_rc usize) : ()
    requires {[#"../model.rs" 45 11 45 19] UIntSize.to_int (ShallowModel0.shallow_model v) = 0}
    
end
module Model_TestRc
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Rc_Rc_Type as Alloc_Rc_Rc_Type
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = usize
  let rec cfg test_rc [#"../model.rs" 46 0 46 37] [@cfg:stackify] [@cfg:subregion_analysis] (v : Alloc_Rc_Rc_Type.t_rc usize) : ()
    requires {[#"../model.rs" 45 11 45 19] UIntSize.to_int (ShallowModel0.shallow_model v) = 0}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _0 <- ();
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
module Model_Impl0
  
end
module Model_Impl1
  type t
  type u
end
