
module Opaque_Test
  predicate transparent_crate0 [#"../opaque.rs" 15 4 15 38] (_1 : ()) =
    [#"../opaque.rs" 16 8 16 12] true
  val transparent_crate0 [#"../opaque.rs" 15 4 15 38] (_1 : ()) : bool
    ensures { result = transparent_crate0 _1 }
    
  predicate transparent0 [#"../opaque.rs" 9 4 9 32] (_1 : ()) =
    [#"../opaque.rs" 10 8 10 12] true
  val transparent0 [#"../opaque.rs" 9 4 9 32] (_1 : ()) : bool
    ensures { result = transparent0 _1 }
    
  let rec cfg test [#"../opaque.rs" 20 0 20 13] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    assert { [@expl:assertion] [#"../opaque.rs" 21 18 21 34] transparent0 () };
    assert { [@expl:assertion] [#"../opaque.rs" 22 18 22 40] transparent_crate0 () };
    [#"../opaque.rs" 20 14 23 1] _0 <- ([#"../opaque.rs" 20 14 23 1] ());
    return _0
  }
  
end
