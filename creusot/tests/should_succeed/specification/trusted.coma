
module Trusted_VictimOfLie
  use prelude.Intrinsic
  use prelude.UInt32
  use prelude.Int
  let rec lie'0 (_1:()) (return'  (ret:uint32))= any
    [ return' (result:uint32)-> {[#"../trusted.rs" 12 10 12 25] result = (10 : uint32)} (! return' {result}) ]
    
  let rec victim_of_lie (_1:()) (return'  (ret:uint32))= (! bb0
    [ bb0 = s0 [ s0 = lie'0 {[#"../trusted.rs" 19 4 19 9] ()} (fun (_ret':uint32) ->  [ &_0 <- _ret' ] s1) | s1 = bb1 ] 
    | bb1 = s0 [ s0 = return' {_0} ]  ]
    ) [ & _0 : uint32 = any_l () : uint32 ] 
    [ return' (result:uint32)-> {[@expl:postcondition] [#"../trusted.rs" 17 10 17 25] result = (10 : uint32)}
      (! return' {result}) ]
    
end
