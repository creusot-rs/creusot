module M_model__test_arc [#"model.rs" 41 0 41 41]
  let%span smodel0 = "model.rs" 40 11 40 19
  
  use prelude.prelude.Intrinsic
  
  use prelude.prelude.Opaque
  
  type t_NonNull'0  =
    { t_NonNull__pointer'0: opaque_ptr }
  
  type t_Arc'0  =
    { t_Arc__ptr'0: t_NonNull'0; t_Arc__phantom'0: (); t_Arc__alloc'0: () }
  
  use prelude.prelude.UIntSize
  
  function view'0 (self : t_Arc'0) : usize
  
  use prelude.prelude.UIntSize
  
  meta "compute_max_steps" 1000000
  
  let rec test_arc'0 (a:t_Arc'0) (return'  (ret:()))= {[@expl:test_arc requires] [%#smodel0] UIntSize.to_int (view'0 a)
    = 0}
    (! bb0 [ bb0 = bb1 | bb1 = bb2 | bb2 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
module M_model__test_rc [#"model.rs" 44 0 44 37]
  let%span smodel0 = "model.rs" 43 11 43 19
  
  use prelude.prelude.Intrinsic
  
  use prelude.prelude.Opaque
  
  type t_NonNull'0  =
    { t_NonNull__pointer'0: opaque_ptr }
  
  type t_Rc'0  =
    { t_Rc__ptr'0: t_NonNull'0; t_Rc__phantom'0: (); t_Rc__alloc'0: () }
  
  use prelude.prelude.UIntSize
  
  function view'0 (self : t_Rc'0) : usize
  
  use prelude.prelude.UIntSize
  
  meta "compute_max_steps" 1000000
  
  let rec test_rc'0 (v:t_Rc'0) (return'  (ret:()))= {[@expl:test_rc requires] [%#smodel0] UIntSize.to_int (view'0 v)
    = 0}
    (! bb0 [ bb0 = bb1 | bb1 = bb2 | bb2 = return' {_0} ] ) [ & _0 : () = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
