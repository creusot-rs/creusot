
module M_loops__while_loop_variant
  use prelude.prelude.Intrinsic
  
  let rec while_loop_variant (x:bool) (return'  (ret:()))= (! bb0
    [ bb0 = bb1
    | bb1 = bb1 [ bb1 = (! bb2) [ bb2 = any [ br0 -> {x = false} (! bb4) | br1 -> {x} (! bb3) ]  | bb3 = bb1 ]  ] 
    | bb4 = return' {_0} ]
    ) [ & _0 : () = any_l () | & x : bool = x ]  [ return' (result:())-> (! return' {result}) ] 
end
