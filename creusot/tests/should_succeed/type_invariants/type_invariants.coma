module M_type_invariants__id [#"type_invariants.rs" 14 0 14 44]
  let%span stype_invariants0 = "type_invariants.rs" 14 10 14 11
  let%span stype_invariants1 = "type_invariants.rs" 14 31 14 44
  let%span stype_invariants2 = "type_invariants.rs" 10 8 10 12
  
  use prelude.prelude.Intrinsic
  
  predicate invariant'0 [#"type_invariants.rs" 9 4 9 30] (self : ()) =
    [%#stype_invariants2] true
  
  predicate inv'0 (_1 : ())
  
  axiom inv_axiom'0 [@rewrite] : forall x : () [inv'0 x] . inv'0 x
  = (invariant'0 x
  /\ match x with
    | () -> true
    end)
  
  meta "compute_max_steps" 1000000
  
  let rec id'0 (x:()) (return'  (ret:()))= {[@expl:id 'x' type invariant] [%#stype_invariants0] inv'0 x}
    (! bb0 [ bb0 = s0 [ s0 =  [ &_0 <- x ] s1 | s1 = return' {_0} ]  ] ) [ & _0 : () = any_l () | & x : () = x ] 
    [ return' (result:())-> {[@expl:id result type invariant] [%#stype_invariants1] inv'0 result} (! return' {result}) ]
    
end
