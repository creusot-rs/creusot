
module TypeInvariants_WithInvariant_Type
  type t_withinvariant  =
    | C_WithInvariant
    
end
module TypeInvariants_Id
  use TypeInvariants_WithInvariant_Type as TypeInvariants_WithInvariant_Type
  predicate invariant0 [#"../type_invariants.rs" 9 4 9 30] (self : TypeInvariants_WithInvariant_Type.t_withinvariant) =
    [#"../type_invariants.rs" 10 8 10 12] true
  val invariant0 [#"../type_invariants.rs" 9 4 9 30] (self : TypeInvariants_WithInvariant_Type.t_withinvariant) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : TypeInvariants_WithInvariant_Type.t_withinvariant)
  val inv0 (_x : TypeInvariants_WithInvariant_Type.t_withinvariant) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : TypeInvariants_WithInvariant_Type.t_withinvariant . inv0 x = (invariant0 x /\ match x with
    | TypeInvariants_WithInvariant_Type.C_WithInvariant -> true
    end)
  let rec cfg id [#"../type_invariants.rs" 14 0 14 44] [@cfg:stackify] [@cfg:subregion_analysis] (x : TypeInvariants_WithInvariant_Type.t_withinvariant) : TypeInvariants_WithInvariant_Type.t_withinvariant
    requires {[#"../type_invariants.rs" 14 10 14 11] inv0 x}
    ensures { [#"../type_invariants.rs" 14 31 14 44] inv0 result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : TypeInvariants_WithInvariant_Type.t_withinvariant;
  var x : TypeInvariants_WithInvariant_Type.t_withinvariant = x;
  {
    goto BB0
  }
  BB0 {
    [#"../type_invariants.rs" 15 4 15 5] _0 <- ([#"../type_invariants.rs" 15 4 15 5] x);
    [#"../type_invariants.rs" 15 4 15 5] x <- any TypeInvariants_WithInvariant_Type.t_withinvariant;
    return _0
  }
  
end
module TypeInvariants_Impl0
  
end
