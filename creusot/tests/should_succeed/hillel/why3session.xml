<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hillel.mlcfg"/>
<theory name="Hillel_RightPad" proved="true">
 <goal name="right_pad&#39;vc" expl="VC for right_pad" proved="true">
 <proof prover="4"><result status="valid" time="0.130000" steps="1002"/></proof>
 </goal>
</theory>
<theory name="Hillel_LeftPad" proved="true">
 <goal name="left_pad&#39;vc" expl="VC for left_pad" proved="true">
 <proof prover="4"><result status="valid" time="0.217587" steps="3962"/></proof>
 </goal>
</theory>
<theory name="Hillel_SubsetPush_Impl" proved="true">
 <goal name="subset_push&#39;vc" expl="VC for subset_push" proved="true">
 <proof prover="4"><result status="valid" time="0.195997" steps="8295"/></proof>
 </goal>
</theory>
<theory name="Hillel_InsertUnique" proved="true">
 <goal name="insert_unique&#39;vc" expl="VC for insert_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_unique&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="38"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.017002" steps="14"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.012497" steps="16"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.000000" steps="20"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010465" steps="22"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="68"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="40"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.012934" steps="50"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.10" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.060000" steps="724"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.016713" steps="62"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.019755" steps="62"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.010016" steps="50"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.016424" steps="69"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.15" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.090000" steps="1538"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.16" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.021165" steps="77"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020540" steps="79"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.016765" steps="79"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.019742" steps="78"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="87"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="160"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.129146" steps="717"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.018021" steps="86"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.24" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.060000" steps="1325"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.303451" steps="1245647"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.111400" steps="535478"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.982762" steps="99670"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.140545" steps="22896"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,min_unsigned,in_bounds,singleton,cons,snoc,(++),mAX&#39;,index_logic,is_inhabited,resolve2,new,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,zero_unsigned_is_zero,length_nonnegative,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,new&#39;spec,slice&#39;invariant,shallow_model_spec,produces_trans_spec,produces_refl_spec,is_inhabited_spec">
  <goal name="unique&#39;vc.0" expl="VC for unique" proved="true">
  <proof prover="4"><result status="valid" time="0.302128" steps="4069"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_SumRange_Impl" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="4"><result status="valid" time="0.010000" steps="43"/></proof>
 </goal>
</theory>
<theory name="Hillel_SumRangeSplit_Impl" proved="true">
 <goal name="sum_range_split&#39;vc" expl="VC for sum_range_split" proved="true">
 <proof prover="4"><result status="valid" time="0.010000" steps="99"/></proof>
 </goal>
</theory>
<theory name="Hillel_Score_Impl" proved="true">
 <goal name="score&#39;vc" expl="VC for score" proved="true">
 <proof prover="0"><result status="valid" time="0.080000" steps="9062"/></proof>
 </goal>
</theory>
<theory name="Hillel_Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.015936" steps="18"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="80"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="74"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="40"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="338"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.023869" steps="57"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="52"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.101620" steps="100723"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="60"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="80"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="167"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="88"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="102"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="110"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="130"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020505" steps="109"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="114"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.050000" steps="484"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="145"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="index in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.190000" steps="28392"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="94"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.474051" steps="49204"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.047097" steps="140509"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="18403"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.187180" steps="1234840"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.474035" steps="68404"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.347044" steps="31108"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.132289" steps="886169"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.895839" steps="59916"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.443512" steps="63691"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="74"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="221"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.34" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="singleton,snoc">
   <goal name="fulcrum&#39;vc.34.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.680576" steps="95351"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.200000" steps="22854"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
