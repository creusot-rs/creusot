<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="hillel.coma"/>
<theory name="M_hillel__right_pad" proved="true">
 <goal name="vc_right_pad&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.453782" steps="2881"/></proof>
 </goal>
</theory>
<theory name="M_hillel__left_pad" proved="true">
 <goal name="vc_left_pad&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.462596" steps="2795"/></proof>
 </goal>
</theory>
<theory name="M_hillel__subset_push" proved="true">
 <goal name="vc_subset_push&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.021457" steps="54"/></proof>
 </goal>
</theory>
<theory name="M_hillel__insert_unique" proved="true">
 <goal name="vc_insert_unique&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_insert_unique&#39;0.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.044678" steps="33"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.1" expl="deref &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.063493" steps="64"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.2" expl="iter &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.032519" steps="26"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.3" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.043500" steps="38"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.4" expl="into_iter requires" proved="true">
  <proof prover="2"><result status="valid" time="0.021109" steps="30"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.5" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.020108" steps="116"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.6" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024856" steps="34"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.7" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.088562" steps="102"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.8" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018734" steps="58"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.022031" steps="309"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.10" expl="eq &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.041088" steps="161"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.11" expl="eq &#39;other&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.016922" steps="166"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.12" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.055906" steps="389"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.13" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.019998" steps="65"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.14" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022036" steps="183"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.15" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.030891" steps="351"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.16" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.044526" steps="52"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.17" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018341" steps="54"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.016593" steps="443"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.19" expl="insert_unique ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.041452" steps="72"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.20" expl="insert_unique ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.078935" steps="354"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.21" expl="insert_unique ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.029941" steps="75"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.22" expl="insert_unique ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.050170" steps="75"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.23" proved="true">
  <proof prover="2"><result status="valid" time="0.019103" steps="52"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.24" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.044896" steps="64"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.023575" steps="301"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.26" proved="true">
  <proof prover="2"><result status="valid" time="0.023265" steps="138"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.27" expl="push &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.019071" steps="75"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.28" expl="push &#39;value&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.037124" steps="68"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.29" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.026880" steps="200"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.30" expl="insert_unique ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.022141" steps="482"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.31" expl="insert_unique ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.056741" steps="434"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.32" expl="insert_unique ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.018827" steps="453"/></proof>
  </goal>
  <goal name="vc_insert_unique&#39;0.33" expl="insert_unique ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.032602" steps="349"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_hillel__unique" proved="true">
 <goal name="vc_unique&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_unique&#39;0.0" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.037253" steps="22"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.1" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.037411" steps="43"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.2" expl="into_iter requires" proved="true">
  <proof prover="2"><result status="valid" time="0.035725" steps="26"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.3" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024337" steps="45"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.4" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.077666" steps="29"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.5" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.046283" steps="60"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.6" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.035618" steps="30"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.7" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.021832" steps="100"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.8" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.017427" steps="104"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.9" expl="loop invariant #3" proved="true">
  <proof prover="2"><result status="valid" time="0.018542" steps="117"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.10" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018156" steps="64"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.047863" steps="138"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.075232" steps="386"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.13" expl="unique result type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.017384" steps="52"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.14" expl="unique ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.019214" steps="52"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.15" expl="unique ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.039336" steps="52"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.16" expl="unique ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.021654" steps="83"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.17" expl="index in bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.032219" steps="496"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.18" proved="true">
  <proof prover="2"><result status="valid" time="0.021457" steps="105"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.19" proved="true">
  <proof prover="2"><result status="valid" time="0.018477" steps="56"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.20" proved="true">
  <proof prover="2"><result status="valid" time="0.018977" steps="58"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.21" expl="insert_unique &#39;vec&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.039624" steps="94"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.22" expl="insert_unique &#39;elem&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.069645" steps="406"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.23" expl="insert_unique requires" proved="true">
  <proof prover="2"><result status="valid" time="0.016473" steps="99"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.24" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022220" steps="107"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.25" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.053065" steps="111"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.26" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018958" steps="113"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.27" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018566" steps="357"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.28" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.023071" steps="78"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.29" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.023256" steps="130"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.30" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.114288" steps="669"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.31" expl="loop invariant #3" proved="true">
  <proof prover="2"><result status="valid" time="0.118753" steps="715"/></proof>
  </goal>
  <goal name="vc_unique&#39;0.32" proved="true">
  <proof prover="2"><result status="valid" time="0.019471" steps="66"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_hillel__sum_range" proved="true">
 <goal name="vc_sum_range&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.015233" steps="30"/></proof>
 </goal>
</theory>
<theory name="M_hillel__sum_range_split" proved="true">
 <goal name="vc_sum_range_split&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.053020" steps="151"/></proof>
 </goal>
</theory>
<theory name="M_hillel__score" proved="true">
 <goal name="vc_score&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.023886" steps="156"/></proof>
 </goal>
</theory>
<theory name="M_hillel__fulcrum" proved="true">
 <goal name="vc_fulcrum&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_fulcrum&#39;0.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.037270" steps="55"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.1" expl="into_iter requires" proved="true">
  <proof prover="2"><result status="valid" time="0.017855" steps="29"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.2" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.040821" steps="56"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.3" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022690" steps="57"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.4" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.021616" steps="128"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.5" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.042490" steps="114"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.6" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.036368" steps="73"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.7" expl="arithmetic overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.046909" steps="143"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.8" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024047" steps="105"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.9" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.050356" steps="107"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.10" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.081433" steps="341"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.11" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.360111" steps="2322"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.12" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.290276" steps="1780"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.13" proved="true">
  <proof prover="2"><result status="valid" time="0.023483" steps="84"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.023684" steps="312"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.15" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024137" steps="96"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.16" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.020187" steps="104"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.17" expl="into_iter requires" proved="true">
  <proof prover="2"><result status="valid" time="0.043393" steps="65"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.18" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.031784" steps="106"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.19" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.030970" steps="66"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.20" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.052307" steps="122"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.21" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.051138" steps="198"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.22" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.049901" steps="134"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.23" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.046144" steps="139"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.24" expl="loop invariant #3" proved="true">
  <proof prover="2"><result status="valid" time="0.045229" steps="144"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.25" expl="loop invariant #4" proved="true">
  <proof prover="2"><result status="valid" time="0.044216" steps="168"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.26" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.056368" steps="153"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.27" expl="fulcrum ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.011868" steps="163"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.28" expl="fulcrum ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.017430" steps="218"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.29" expl="arithmetic overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.024343" steps="166"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.30" proved="true">
  <proof prover="2"><result status="valid" time="0.019807" steps="156"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.31" expl="index in bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.248480" steps="1810"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.32" proved="true">
  <proof prover="2"><result status="valid" time="0.028453" steps="300"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.33" expl="arithmetic overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.080874" steps="332"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.34" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.075316" steps="259"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.35" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018700" steps="260"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.36" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.171429" steps="990"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.37" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.308189" steps="1961"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.38" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.673955" steps="3909"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.39" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.756667" steps="3766"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.40" expl="loop invariant #3" proved="true">
  <proof prover="2"><result status="valid" time="0.965203" steps="5993"/></proof>
  </goal>
  <goal name="vc_fulcrum&#39;0.41" expl="loop invariant #4" proved="true">
  <proof prover="2"><result status="valid" time="0.660044" steps="3616"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
