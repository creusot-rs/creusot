<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.15" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hillel.mlcfg"/>
<theory name="Hillel_RightPad" proved="true">
 <goal name="right_pad&#39;vc" expl="VC for right_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.18" steps="1427"/></proof>
 </goal>
</theory>
<theory name="Hillel_LeftPad" proved="true">
 <goal name="left_pad&#39;vc" expl="VC for left_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.18" steps="3410"/></proof>
 </goal>
</theory>
<theory name="Hillel_SubsetPush_Impl" proved="true">
 <goal name="subset_push&#39;vc" expl="VC for subset_push" proved="true">
 <proof prover="1"><result status="valid" time="0.42" steps="8051"/></proof>
 </goal>
</theory>
<theory name="Hillel_InsertUnique" proved="true">
 <goal name="insert_unique&#39;vc" expl="VC for insert_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_unique&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="40"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="662"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="958"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="83"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="89"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="277"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.11" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="724"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="1769"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.12.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.12" steps="94"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.13.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="168833"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.13.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="125233"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="799"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="101"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.15.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="348"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="102"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unique&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="77"/></proof>
  </goal>
  <goal name="unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="80"/></proof>
  </goal>
  <goal name="unique&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="101"/></proof>
  </goal>
  <goal name="unique&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="unique&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="255"/></proof>
  </goal>
  <goal name="unique&#39;vc.8" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="472"/></proof>
  </goal>
  <goal name="unique&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="56"/></proof>
  </goal>
  <goal name="unique&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="57"/></proof>
  </goal>
  <goal name="unique&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="83"/></proof>
  </goal>
  <goal name="unique&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.01" steps="80"/></proof>
  </goal>
  <goal name="unique&#39;vc.13" expl="assertion" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.03" steps="543"/></proof>
  </goal>
  <goal name="unique&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="101"/></proof>
  </goal>
  <goal name="unique&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="102"/></proof>
  </goal>
  <goal name="unique&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.02" steps="130"/></proof>
  </goal>
  <goal name="unique&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="134"/></proof>
  </goal>
  <goal name="unique&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="6571"/></proof>
  </goal>
  <goal name="unique&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="0.39" steps="1163599"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_SumRange_Impl" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="43"/></proof>
 </goal>
</theory>
<theory name="Hillel_SumRangeSplit_Impl" proved="true">
 <goal name="sum_range_split&#39;vc" expl="VC for sum_range_split" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="99"/></proof>
 </goal>
</theory>
<theory name="Hillel_Score_Impl" proved="true">
 <goal name="score&#39;vc" expl="VC for score" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="75834"/></proof>
 </goal>
</theory>
<theory name="Hillel_Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="57"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="41"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="184"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="70"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="73"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="105"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="210"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="121"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="135"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="155"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="176"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="90"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="151"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="618"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="196"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="151"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.20.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.20" steps="2878"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="integer overflow" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.21.0" expl="integer overflow" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="209919"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.23.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="358"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,uint32&#39;maxInt,uint32&#39;minInt,max_uint32,length,radix,min_unsigned,in_bounds1,int64&#39;maxInt,int64&#39;minInt,min_int64,max_int64,to_int,in_bounds,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length2,radix1,min_unsigned1,in_bounds2,( *_),(^_),singleton,cons,snoc,(++),range_end,shallow_model2,mAX&#39;,resolve1,completed1,invariant&#39;1,produces_trans1,produces_refl1,into_iter_pre1,resolve,completed,produces,produces_trans,produces_refl,into_iter_post,into_iter_pre,abs_diff,invariant&#39;,score,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds1,extensionality1,zero_unsigned_is_zero,to_int_in_bounds,extensionality,to_int_in_bounds2,extensionality2,zero_unsigned_is_zero1,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,produces_trans_spec1,produces_refl_spec1,to_ref_seq_spec,produces_trans_spec,produces_refl_spec,sum_range_spec,def,score_spec,Requires1,Requires,H33,H32,H31,Ensures21,Ensures20,H30,H29,type_invariant2,structural2,total,total_bound,Ensures19,H28,Ensures18,H27,Ensures17,Ensures16,Assume1,H26,Assert1,H25,H24,H23,H22,Ensures15,Ensures13,H19,type_invariant1,sum_bound,H18,H17,min_dist,min_i_min,H16,H15,Ensures10,Assume,type_invariant,structural,Ensures5,Ensures4,H9,H8,H7,Ensures3,Ensures2,H6,H5,H4,H3">
    <goal name="fulcrum&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="2"><result status="valid" time="0.02" steps="66934"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="390237"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fulcrum&#39;vc.26.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.12" steps="1394"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="fulcrum&#39;vc.26.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fulcrum&#39;vc.26.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="450"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="854623"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.28.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.38" steps="3896406"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="202924"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="97"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.32.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="268087"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="239417"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
