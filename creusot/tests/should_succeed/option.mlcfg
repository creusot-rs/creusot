
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module CreusotContracts_Resolve_Impl1_Resolve_Stub
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
    [#"../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module Core_Option_Impl0_IsSome_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_some (self : Core_Option_Option_Type.t_option t) : bool
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 21 26 21 51] result = (self <> Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsNone_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_none (self : Core_Option_Option_Type.t_option t) : bool
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 24 26 24 51] result = (self = Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_Unwrap_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap (self : Core_Option_Option_Type.t_option t) : t
    requires {[#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self <> Core_Option_Option_Type.C_None}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] Core_Option_Option_Type.C_Some result = self }
    
end
module Core_Option_Impl0_UnwrapOr_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap_or (self : Core_Option_Option_Type.t_option t) (default : t) : t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 35 16 35 62] self = Core_Option_Option_Type.C_None -> result = default }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module Core_Option_Impl0_AsMut_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val as_mut (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option (borrowed t)
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 39 16 39 77]  * self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None /\  ^ self = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 40 16 43 18]  * self = Core_Option_Option_Type.C_None \/ (exists r : borrowed t . result = Core_Option_Option_Type.C_Some r /\  * self = Core_Option_Option_Type.C_Some ( * r) /\  ^ self = Core_Option_Option_Type.C_Some ( ^ r)) }
    
end
module Core_Option_Impl0_AsRef_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val as_ref (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 46 16 46 60] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 47 16 49 18] self = Core_Option_Option_Type.C_None \/ (exists r : t . result = Core_Option_Option_Type.C_Some r /\ self = Core_Option_Option_Type.C_Some r) }
    
end
module Core_Option_Impl0_And_Interface
  type t
  type u
  use Core_Option_Option_Type as Core_Option_Option_Type
  val and (self : Core_Option_Option_Type.t_option t) (optb : Core_Option_Option_Type.t_option u) : Core_Option_Option_Type.t_option u
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 52 16 52 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ result = optb }
    
end
module Core_Option_Impl0_Or_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val or (self : Core_Option_Option_Type.t_option t) (optb : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 56 16 56 59] self = Core_Option_Option_Type.C_None -> result = optb }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ result = self }
    
end
module Core_Option_Impl0_Take_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val take (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] result =  * self /\  ^ self = Core_Option_Option_Type.C_None }
    
end
module Core_Option_Impl0_Replace_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val replace (self : borrowed (Core_Option_Option_Type.t_option t)) (value : t) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] result =  * self /\  ^ self = Core_Option_Option_Type.C_Some value }
    
end
module CreusotContracts_Std1_Default_Default_IsDefault_Stub
  type self
  predicate is_default (self : self)
end
module CreusotContracts_Std1_Default_Default_IsDefault_Interface
  type self
  predicate is_default (self : self)
  val is_default (self : self) : bool
    ensures { result = is_default self }
    
end
module CreusotContracts_Std1_Default_Default_IsDefault
  type self
  predicate is_default (self : self)
  val is_default (self : self) : bool
    ensures { result = is_default self }
    
end
module Core_Option_Impl0_UnwrapOrDefault_Interface
  type t
  clone CreusotContracts_Std1_Default_Default_IsDefault_Stub as IsDefault0 with
    type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap_or_default (self : Core_Option_Option_Type.t_option t) : t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 66 16 66 64] self = Core_Option_Option_Type.C_None -> IsDefault0.is_default result }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module Core_Option_Impl2_Copied_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val copied (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 74 16 74 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    
end
module Core_Option_Impl3_Copied_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Resolve_Impl1_Resolve_Stub as Resolve0 with
    type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val copied (self : Core_Option_Option_Type.t_option (borrowed t)) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 88 16 88 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : borrowed t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ Resolve0.resolve t) }
    
end
module Core_Option_Impl2_Cloned_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val cloned (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 80 16 80 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    
end
module Core_Option_Impl3_Cloned_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Resolve_Impl1_Resolve_Stub as Resolve0 with
    type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val cloned (self : Core_Option_Option_Type.t_option (borrowed t)) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 97 16 97 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : borrowed t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ Resolve0.resolve t) }
    
end
module Core_Option_Impl44_Flatten_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val flatten (self : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 108 16 108 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module CreusotContracts_Std1_Num_Impl26_IsDefault_Stub
  use prelude.Int
  use prelude.Int32
  predicate is_default (self : int32)
end
module CreusotContracts_Std1_Num_Impl26_IsDefault_Interface
  use prelude.Int
  use prelude.Int32
  predicate is_default (self : int32)
  val is_default (self : int32) : bool
    ensures { result = is_default self }
    
end
module CreusotContracts_Std1_Num_Impl26_IsDefault
  use prelude.Int
  use prelude.Int32
  predicate is_default (self : int32) =
    [#"../../../../creusot-contracts/src/std/num.rs" 30 28 30 32] self = (0 : int32)
  val is_default (self : int32) : bool
    ensures { result = is_default self }
    
end
module Option_TestOption_Interface
  val test_option [#"../option.rs" 4 0 4 20] (_1' : ()) : ()
end
module Option_TestOption
  use prelude.Int
  use prelude.Int32
  use prelude.Borrow
  clone CreusotContracts_Std1_Num_Impl26_IsDefault as IsDefault0
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Core_Option_Impl44_Flatten_Interface as Flatten0 with
    type t = int32
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = int32
  clone Core_Option_Impl3_Cloned_Interface as Cloned1 with
    type t = int32,
    predicate Resolve0.resolve = Resolve0.resolve
  clone Core_Option_Impl2_Cloned_Interface as Cloned0 with
    type t = int32
  clone Core_Option_Impl3_Copied_Interface as Copied1 with
    type t = int32,
    predicate Resolve0.resolve = Resolve0.resolve
  clone Core_Option_Impl2_Copied_Interface as Copied0 with
    type t = int32
  clone Core_Option_Impl0_UnwrapOrDefault_Interface as UnwrapOrDefault0 with
    type t = int32,
    predicate IsDefault0.is_default = IsDefault0.is_default
  clone Core_Option_Impl0_Replace_Interface as Replace0 with
    type t = int32
  clone Core_Option_Impl0_Take_Interface as Take0 with
    type t = int32
  clone Core_Option_Impl0_Or_Interface as Or0 with
    type t = int32
  clone Core_Option_Impl0_And_Interface as And0 with
    type t = int32,
    type u = int32
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap2 with
    type t = int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone2 with
    type t = int32
  clone Core_Option_Impl0_AsRef_Interface as AsRef0 with
    type t = int32
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap1 with
    type t = borrowed int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone1 with
    type t = borrowed int32
  clone Core_Option_Impl0_AsMut_Interface as AsMut0 with
    type t = int32
  clone Core_Option_Impl0_UnwrapOr_Interface as UnwrapOr0 with
    type t = int32
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap0 with
    type t = int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone0 with
    type t = int32
  clone Core_Option_Impl0_IsSome_Interface as IsSome0 with
    type t = int32
  let rec cfg test_option [#"../option.rs" 4 0 4 20] [@cfg:stackify] [@cfg:subregion_analysis] (_1' : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var none_1 : Core_Option_Option_Type.t_option int32;
  var some_2 : Core_Option_Option_Type.t_option int32;
  var _3 : ();
  var _4 : bool;
  var _5 : bool;
  var _6 : bool;
  var _7 : Core_Option_Option_Type.t_option int32;
  var _8 : bool;
  var _9 : bool;
  var _10 : Core_Option_Option_Type.t_option int32;
  var _11 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : bool;
  var _15 : bool;
  var _16 : Core_Option_Option_Type.t_option int32;
  var _17 : bool;
  var _18 : bool;
  var _19 : Core_Option_Option_Type.t_option int32;
  var _20 : ();
  var _21 : ();
  var _22 : bool;
  var _23 : bool;
  var _24 : int32;
  var _25 : Core_Option_Option_Type.t_option int32;
  var _26 : ();
  var _27 : ();
  var _28 : bool;
  var _29 : bool;
  var _30 : int32;
  var _31 : Core_Option_Option_Type.t_option int32;
  var _32 : ();
  var _33 : ();
  var _34 : bool;
  var _35 : bool;
  var _36 : int32;
  var _37 : Core_Option_Option_Type.t_option int32;
  var _38 : ();
  var _39 : ();
  var _40 : bool;
  var _41 : bool;
  var _42 : Core_Option_Option_Type.t_option (borrowed int32);
  var _43 : Core_Option_Option_Type.t_option (borrowed int32);
  var _44 : borrowed (Core_Option_Option_Type.t_option int32);
  var _45 : ();
  var _46 : borrowed int32;
  var _47 : Core_Option_Option_Type.t_option (borrowed int32);
  var _48 : borrowed (Core_Option_Option_Type.t_option int32);
  var _49 : ();
  var _50 : bool;
  var _51 : bool;
  var _52 : int32;
  var _53 : Core_Option_Option_Type.t_option int32;
  var _54 : ();
  var _55 : borrowed int32;
  var _56 : Core_Option_Option_Type.t_option (borrowed int32);
  var _57 : borrowed (Core_Option_Option_Type.t_option int32);
  var _58 : ();
  var _59 : bool;
  var _60 : bool;
  var _61 : int32;
  var _62 : Core_Option_Option_Type.t_option int32;
  var _63 : ();
  var _64 : ();
  var _65 : bool;
  var _66 : bool;
  var _67 : Core_Option_Option_Type.t_option int32;
  var _68 : Core_Option_Option_Type.t_option int32;
  var _69 : Core_Option_Option_Type.t_option int32;
  var _70 : ();
  var _71 : ();
  var _72 : bool;
  var _73 : bool;
  var _74 : int32;
  var _75 : int32;
  var _76 : Core_Option_Option_Type.t_option int32;
  var _77 : Core_Option_Option_Type.t_option int32;
  var _78 : ();
  var _79 : ();
  var _80 : bool;
  var _81 : bool;
  var _82 : Core_Option_Option_Type.t_option int32;
  var _83 : Core_Option_Option_Type.t_option int32;
  var _84 : Core_Option_Option_Type.t_option int32;
  var _85 : Core_Option_Option_Type.t_option int32;
  var _86 : ();
  var _87 : ();
  var _88 : bool;
  var _89 : bool;
  var _90 : Core_Option_Option_Type.t_option int32;
  var _91 : Core_Option_Option_Type.t_option int32;
  var _92 : Core_Option_Option_Type.t_option int32;
  var _93 : Core_Option_Option_Type.t_option int32;
  var _94 : ();
  var _95 : ();
  var _96 : bool;
  var _97 : bool;
  var _98 : Core_Option_Option_Type.t_option int32;
  var _99 : Core_Option_Option_Type.t_option int32;
  var _100 : Core_Option_Option_Type.t_option int32;
  var _101 : Core_Option_Option_Type.t_option int32;
  var _102 : ();
  var _103 : ();
  var _104 : bool;
  var _105 : bool;
  var _106 : int32;
  var _107 : Core_Option_Option_Type.t_option int32;
  var _108 : Core_Option_Option_Type.t_option int32;
  var _109 : Core_Option_Option_Type.t_option int32;
  var _110 : ();
  var _111 : ();
  var _112 : bool;
  var _113 : bool;
  var _114 : Core_Option_Option_Type.t_option int32;
  var _115 : Core_Option_Option_Type.t_option int32;
  var _116 : Core_Option_Option_Type.t_option int32;
  var _117 : Core_Option_Option_Type.t_option int32;
  var _118 : ();
  var _119 : ();
  var _120 : bool;
  var _121 : bool;
  var _122 : int32;
  var _123 : Core_Option_Option_Type.t_option int32;
  var _124 : Core_Option_Option_Type.t_option int32;
  var _125 : Core_Option_Option_Type.t_option int32;
  var _126 : ();
  var _127 : ();
  var _128 : bool;
  var _129 : bool;
  var _130 : int32;
  var _131 : Core_Option_Option_Type.t_option int32;
  var _132 : Core_Option_Option_Type.t_option int32;
  var _133 : Core_Option_Option_Type.t_option int32;
  var _134 : ();
  var _135 : ();
  var _136 : bool;
  var _137 : bool;
  var _138 : int32;
  var _139 : Core_Option_Option_Type.t_option int32;
  var _140 : Core_Option_Option_Type.t_option int32;
  var _141 : Core_Option_Option_Type.t_option int32;
  var _142 : ();
  var _143 : ();
  var _144 : bool;
  var _145 : bool;
  var _146 : Core_Option_Option_Type.t_option int32;
  var _147 : Core_Option_Option_Type.t_option int32;
  var _148 : borrowed (Core_Option_Option_Type.t_option int32);
  var _149 : ();
  var _150 : ();
  var _151 : bool;
  var _152 : bool;
  var _153 : Core_Option_Option_Type.t_option int32;
  var _154 : ();
  var _155 : ();
  var _156 : bool;
  var _157 : bool;
  var _158 : int32;
  var _159 : Core_Option_Option_Type.t_option int32;
  var _160 : borrowed (Core_Option_Option_Type.t_option int32);
  var _161 : ();
  var _162 : ();
  var _163 : bool;
  var _164 : bool;
  var _165 : Core_Option_Option_Type.t_option int32;
  var _166 : ();
  var _167 : Core_Option_Option_Type.t_option int32;
  var _168 : ();
  var _169 : bool;
  var _170 : bool;
  var _171 : Core_Option_Option_Type.t_option int32;
  var _172 : Core_Option_Option_Type.t_option int32;
  var _173 : borrowed (Core_Option_Option_Type.t_option int32);
  var _174 : ();
  var _175 : ();
  var _176 : bool;
  var _177 : bool;
  var _178 : int32;
  var _179 : Core_Option_Option_Type.t_option int32;
  var _180 : ();
  var _181 : Core_Option_Option_Type.t_option int32;
  var _182 : ();
  var _183 : bool;
  var _184 : bool;
  var _185 : int32;
  var _186 : Core_Option_Option_Type.t_option int32;
  var _187 : borrowed (Core_Option_Option_Type.t_option int32);
  var _188 : ();
  var _189 : ();
  var _190 : bool;
  var _191 : bool;
  var _192 : int32;
  var _193 : Core_Option_Option_Type.t_option int32;
  var _194 : ();
  var _195 : ();
  var _196 : bool;
  var _197 : bool;
  var _198 : int32;
  var _199 : Core_Option_Option_Type.t_option int32;
  var _200 : borrowed (Core_Option_Option_Type.t_option int32);
  var _201 : ();
  var _202 : ();
  var _203 : bool;
  var _204 : bool;
  var _205 : int32;
  var _206 : Core_Option_Option_Type.t_option int32;
  var _207 : ();
  var _208 : ();
  var _209 : bool;
  var _210 : bool;
  var _211 : int32;
  var _212 : Core_Option_Option_Type.t_option int32;
  var _213 : ();
  var _214 : ();
  var _215 : bool;
  var _216 : bool;
  var _217 : int32;
  var _218 : Core_Option_Option_Type.t_option int32;
  var _219 : ();
  var _220 : ();
  var _221 : bool;
  var _222 : bool;
  var _223 : Core_Option_Option_Type.t_option int32;
  var _224 : Core_Option_Option_Type.t_option int32;
  var _225 : Core_Option_Option_Type.t_option int32;
  var _226 : Core_Option_Option_Type.t_option int32;
  var _227 : ();
  var _228 : ();
  var _229 : bool;
  var _230 : bool;
  var _231 : int32;
  var _232 : Core_Option_Option_Type.t_option int32;
  var _233 : Core_Option_Option_Type.t_option int32;
  var _234 : Core_Option_Option_Type.t_option int32;
  var _235 : ();
  var _236 : ();
  var _237 : bool;
  var _238 : bool;
  var _239 : Core_Option_Option_Type.t_option int32;
  var _240 : Core_Option_Option_Type.t_option int32;
  var _241 : Core_Option_Option_Type.t_option (borrowed int32);
  var _242 : borrowed (Core_Option_Option_Type.t_option int32);
  var _243 : ();
  var _244 : ();
  var _245 : bool;
  var _246 : bool;
  var _247 : int32;
  var _248 : Core_Option_Option_Type.t_option int32;
  var _249 : Core_Option_Option_Type.t_option (borrowed int32);
  var _250 : borrowed (Core_Option_Option_Type.t_option int32);
  var _251 : ();
  var _252 : ();
  var _253 : bool;
  var _254 : bool;
  var _255 : Core_Option_Option_Type.t_option int32;
  var _256 : Core_Option_Option_Type.t_option int32;
  var _257 : Core_Option_Option_Type.t_option int32;
  var _258 : Core_Option_Option_Type.t_option int32;
  var _259 : ();
  var _260 : ();
  var _261 : bool;
  var _262 : bool;
  var _263 : int32;
  var _264 : Core_Option_Option_Type.t_option int32;
  var _265 : Core_Option_Option_Type.t_option int32;
  var _266 : Core_Option_Option_Type.t_option int32;
  var _267 : ();
  var _268 : ();
  var _269 : bool;
  var _270 : bool;
  var _271 : Core_Option_Option_Type.t_option int32;
  var _272 : Core_Option_Option_Type.t_option int32;
  var _273 : Core_Option_Option_Type.t_option (borrowed int32);
  var _274 : borrowed (Core_Option_Option_Type.t_option int32);
  var _275 : ();
  var _276 : ();
  var _277 : bool;
  var _278 : bool;
  var _279 : int32;
  var _280 : Core_Option_Option_Type.t_option int32;
  var _281 : Core_Option_Option_Type.t_option (borrowed int32);
  var _282 : borrowed (Core_Option_Option_Type.t_option int32);
  var _283 : ();
  var opt_284 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _285 : ();
  var _286 : bool;
  var _287 : bool;
  var _288 : Core_Option_Option_Type.t_option int32;
  var _289 : Core_Option_Option_Type.t_option int32;
  var _290 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _291 : ();
  var opt_292 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _293 : Core_Option_Option_Type.t_option int32;
  var _294 : ();
  var _295 : bool;
  var _296 : bool;
  var _297 : Core_Option_Option_Type.t_option int32;
  var _298 : Core_Option_Option_Type.t_option int32;
  var _299 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _300 : ();
  var opt_301 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _302 : Core_Option_Option_Type.t_option int32;
  var _303 : ();
  var _304 : bool;
  var _305 : bool;
  var _306 : int32;
  var _307 : Core_Option_Option_Type.t_option int32;
  var _308 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _309 : ();
  {
    goto BB0
  }
  BB0 {
    none_1 <- Core_Option_Option_Type.C_None;
    some_2 <- Core_Option_Option_Type.C_Some ([#"../option.rs" 6 37 6 38] (1 : int32));
    _7 <- some_2;
    _6 <- ([#"../option.rs" 9 12 9 26] IsSome0.is_some _7);
    goto BB4
  }
  BB1 {
    _5 <- ([#"../option.rs" 9 12 9 45] false);
    goto BB3
  }
  BB2 {
    _10 <- none_1;
    _9 <- ([#"../option.rs" 9 31 9 45] IsSome0.is_some _10);
    goto BB5
  }
  BB3 {
    _4 <- not _5;
    switch (_4)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB4 {
    switch (_6)
      | False -> goto BB1
      | True -> goto BB2
      end
  }
  BB5 {
    _8 <- not _9;
    _5 <- _8;
    _8 <- any bool;
    goto BB3
  }
  BB6 {
    absurd
  }
  BB7 {
    _3 <- ();
    _16 <- none_1;
    _15 <- ([#"../option.rs" 11 12 11 26] IsNone0.is_none _16);
    goto BB11
  }
  BB8 {
    _14 <- ([#"../option.rs" 11 12 11 45] false);
    goto BB10
  }
  BB9 {
    _19 <- some_2;
    _18 <- ([#"../option.rs" 11 31 11 45] IsNone0.is_none _19);
    goto BB12
  }
  BB10 {
    _13 <- not _14;
    switch (_13)
      | False -> goto BB14
      | True -> goto BB13
      end
  }
  BB11 {
    switch (_15)
      | False -> goto BB8
      | True -> goto BB9
      end
  }
  BB12 {
    _17 <- not _18;
    _14 <- _17;
    _17 <- any bool;
    goto BB10
  }
  BB13 {
    absurd
  }
  BB14 {
    _12 <- ();
    _25 <- some_2;
    _24 <- ([#"../option.rs" 14 12 14 25] Unwrap0.unwrap _25);
    goto BB15
  }
  BB15 {
    _23 <- ([#"../option.rs" 14 12 14 30] _24 = ([#"../option.rs" 14 29 14 30] (1 : int32)));
    _22 <- not _23;
    switch (_22)
      | False -> goto BB17
      | True -> goto BB16
      end
  }
  BB16 {
    absurd
  }
  BB17 {
    _21 <- ();
    _31 <- some_2;
    _30 <- ([#"../option.rs" 19 12 19 29] UnwrapOr0.unwrap_or _31 ([#"../option.rs" 19 27 19 28] (2 : int32)));
    goto BB18
  }
  BB18 {
    _29 <- ([#"../option.rs" 19 12 19 34] _30 = ([#"../option.rs" 19 33 19 34] (1 : int32)));
    _28 <- not _29;
    switch (_28)
      | False -> goto BB20
      | True -> goto BB19
      end
  }
  BB19 {
    absurd
  }
  BB20 {
    _27 <- ();
    _37 <- none_1;
    _36 <- ([#"../option.rs" 20 12 20 29] UnwrapOr0.unwrap_or _37 ([#"../option.rs" 20 27 20 28] (2 : int32)));
    goto BB21
  }
  BB21 {
    _35 <- ([#"../option.rs" 20 12 20 34] _36 = ([#"../option.rs" 20 33 20 34] (2 : int32)));
    _34 <- not _35;
    switch (_34)
      | False -> goto BB23
      | True -> goto BB22
      end
  }
  BB22 {
    absurd
  }
  BB23 {
    _33 <- ();
    _44 <- borrow_mut none_1;
    none_1 <-  ^ _44;
    _43 <- ([#"../option.rs" 23 12 23 25] AsMut0.as_mut _44);
    goto BB24
  }
  BB24 {
    _42 <- _43;
    _41 <- ([#"../option.rs" 23 12 23 35] IsNone1.is_none _42);
    goto BB25
  }
  BB25 {
    _40 <- not _41;
    switch (_40)
      | False -> goto BB27
      | True -> goto BB26
      end
  }
  BB26 {
    absurd
  }
  BB27 {
    _39 <- ();
    _48 <- borrow_mut some_2;
    some_2 <-  ^ _48;
    _47 <- ([#"../option.rs" 24 5 24 18] AsMut0.as_mut _48);
    goto BB28
  }
  BB28 {
    _46 <- ([#"../option.rs" 24 5 24 27] Unwrap1.unwrap _47);
    goto BB29
  }
  BB29 {
    _46 <- { _46 with current = ([#"../option.rs" 24 30 24 31] (2 : int32)) };
    assume { Resolve0.resolve _46 };
    _53 <- some_2;
    _52 <- ([#"../option.rs" 25 12 25 25] Unwrap0.unwrap _53);
    goto BB30
  }
  BB30 {
    _51 <- ([#"../option.rs" 25 12 25 30] _52 = ([#"../option.rs" 25 29 25 30] (2 : int32)));
    _50 <- not _51;
    switch (_50)
      | False -> goto BB32
      | True -> goto BB31
      end
  }
  BB31 {
    absurd
  }
  BB32 {
    _49 <- ();
    _57 <- borrow_mut some_2;
    some_2 <-  ^ _57;
    _56 <- ([#"../option.rs" 26 5 26 18] AsMut0.as_mut _57);
    goto BB33
  }
  BB33 {
    _55 <- ([#"../option.rs" 26 5 26 27] Unwrap1.unwrap _56);
    goto BB34
  }
  BB34 {
    _55 <- { _55 with current = ([#"../option.rs" 26 30 26 31] (1 : int32)) };
    assume { Resolve0.resolve _55 };
    _62 <- some_2;
    _61 <- ([#"../option.rs" 27 12 27 25] Unwrap0.unwrap _62);
    goto BB35
  }
  BB35 {
    _60 <- ([#"../option.rs" 27 12 27 30] _61 = ([#"../option.rs" 27 29 27 30] (1 : int32)));
    _59 <- not _60;
    switch (_59)
      | False -> goto BB37
      | True -> goto BB36
      end
  }
  BB36 {
    absurd
  }
  BB37 {
    _58 <- ();
    _69 <- none_1;
    _68 <- ([#"../option.rs" 29 12 29 25] AsRef0.as_ref _69);
    goto BB38
  }
  BB38 {
    _67 <- _68;
    _66 <- ([#"../option.rs" 29 12 29 35] IsNone2.is_none _67);
    goto BB39
  }
  BB39 {
    _65 <- not _66;
    switch (_65)
      | False -> goto BB41
      | True -> goto BB40
      end
  }
  BB40 {
    absurd
  }
  BB41 {
    _64 <- ();
    _77 <- some_2;
    _76 <- ([#"../option.rs" 30 13 30 26] AsRef0.as_ref _77);
    goto BB42
  }
  BB42 {
    _75 <- ([#"../option.rs" 30 13 30 35] Unwrap2.unwrap _76);
    goto BB43
  }
  BB43 {
    _74 <- _75;
    _73 <- ([#"../option.rs" 30 12 30 40] _74 = ([#"../option.rs" 30 39 30 40] (1 : int32)));
    _72 <- not _73;
    switch (_72)
      | False -> goto BB45
      | True -> goto BB44
      end
  }
  BB44 {
    absurd
  }
  BB45 {
    _71 <- ();
    _84 <- none_1;
    _85 <- none_1;
    _83 <- ([#"../option.rs" 33 12 33 26] And0.and _84 _85);
    goto BB46
  }
  BB46 {
    _82 <- _83;
    _81 <- ([#"../option.rs" 33 12 33 36] IsNone0.is_none _82);
    goto BB47
  }
  BB47 {
    _80 <- not _81;
    switch (_80)
      | False -> goto BB49
      | True -> goto BB48
      end
  }
  BB48 {
    absurd
  }
  BB49 {
    _79 <- ();
    _92 <- none_1;
    _93 <- Core_Option_Option_Type.C_Some ([#"../option.rs" 34 26 34 27] (2 : int32));
    _91 <- ([#"../option.rs" 34 12 34 29] And0.and _92 _93);
    goto BB50
  }
  BB50 {
    _90 <- _91;
    _89 <- ([#"../option.rs" 34 12 34 39] IsNone0.is_none _90);
    goto BB51
  }
  BB51 {
    _88 <- not _89;
    switch (_88)
      | False -> goto BB53
      | True -> goto BB52
      end
  }
  BB52 {
    absurd
  }
  BB53 {
    _87 <- ();
    _100 <- some_2;
    _101 <- none_1;
    _99 <- ([#"../option.rs" 35 12 35 26] And0.and _100 _101);
    goto BB54
  }
  BB54 {
    _98 <- _99;
    _97 <- ([#"../option.rs" 35 12 35 36] IsNone0.is_none _98);
    goto BB55
  }
  BB55 {
    _96 <- not _97;
    switch (_96)
      | False -> goto BB57
      | True -> goto BB56
      end
  }
  BB56 {
    absurd
  }
  BB57 {
    _95 <- ();
    _108 <- some_2;
    _109 <- Core_Option_Option_Type.C_Some ([#"../option.rs" 36 26 36 27] (2 : int32));
    _107 <- ([#"../option.rs" 36 12 36 29] And0.and _108 _109);
    goto BB58
  }
  BB58 {
    _106 <- ([#"../option.rs" 36 12 36 38] Unwrap0.unwrap _107);
    goto BB59
  }
  BB59 {
    _105 <- ([#"../option.rs" 36 12 36 43] _106 = ([#"../option.rs" 36 42 36 43] (2 : int32)));
    _104 <- not _105;
    switch (_104)
      | False -> goto BB61
      | True -> goto BB60
      end
  }
  BB60 {
    absurd
  }
  BB61 {
    _103 <- ();
    _116 <- none_1;
    _117 <- none_1;
    _115 <- ([#"../option.rs" 38 12 38 25] Or0.or _116 _117);
    goto BB62
  }
  BB62 {
    _114 <- _115;
    _113 <- ([#"../option.rs" 38 12 38 35] IsNone0.is_none _114);
    goto BB63
  }
  BB63 {
    _112 <- not _113;
    switch (_112)
      | False -> goto BB65
      | True -> goto BB64
      end
  }
  BB64 {
    absurd
  }
  BB65 {
    _111 <- ();
    _124 <- none_1;
    _125 <- Core_Option_Option_Type.C_Some ([#"../option.rs" 39 25 39 26] (2 : int32));
    _123 <- ([#"../option.rs" 39 12 39 28] Or0.or _124 _125);
    goto BB66
  }
  BB66 {
    _122 <- ([#"../option.rs" 39 12 39 37] Unwrap0.unwrap _123);
    goto BB67
  }
  BB67 {
    _121 <- ([#"../option.rs" 39 12 39 42] _122 = ([#"../option.rs" 39 41 39 42] (2 : int32)));
    _120 <- not _121;
    switch (_120)
      | False -> goto BB69
      | True -> goto BB68
      end
  }
  BB68 {
    absurd
  }
  BB69 {
    _119 <- ();
    _132 <- some_2;
    _133 <- none_1;
    _131 <- ([#"../option.rs" 40 12 40 25] Or0.or _132 _133);
    goto BB70
  }
  BB70 {
    _130 <- ([#"../option.rs" 40 12 40 34] Unwrap0.unwrap _131);
    goto BB71
  }
  BB71 {
    _129 <- ([#"../option.rs" 40 12 40 39] _130 = ([#"../option.rs" 40 38 40 39] (1 : int32)));
    _128 <- not _129;
    switch (_128)
      | False -> goto BB73
      | True -> goto BB72
      end
  }
  BB72 {
    absurd
  }
  BB73 {
    _127 <- ();
    _140 <- some_2;
    _141 <- Core_Option_Option_Type.C_Some ([#"../option.rs" 41 25 41 26] (2 : int32));
    _139 <- ([#"../option.rs" 41 12 41 28] Or0.or _140 _141);
    goto BB74
  }
  BB74 {
    _138 <- ([#"../option.rs" 41 12 41 37] Unwrap0.unwrap _139);
    goto BB75
  }
  BB75 {
    _137 <- ([#"../option.rs" 41 12 41 42] _138 = ([#"../option.rs" 41 41 41 42] (1 : int32)));
    _136 <- not _137;
    switch (_136)
      | False -> goto BB77
      | True -> goto BB76
      end
  }
  BB76 {
    absurd
  }
  BB77 {
    _135 <- ();
    _148 <- borrow_mut none_1;
    none_1 <-  ^ _148;
    _147 <- ([#"../option.rs" 44 12 44 23] Take0.take _148);
    goto BB78
  }
  BB78 {
    _146 <- _147;
    _145 <- ([#"../option.rs" 44 12 44 33] IsNone0.is_none _146);
    goto BB79
  }
  BB79 {
    _144 <- not _145;
    switch (_144)
      | False -> goto BB81
      | True -> goto BB80
      end
  }
  BB80 {
    absurd
  }
  BB81 {
    _143 <- ();
    _153 <- none_1;
    _152 <- ([#"../option.rs" 45 12 45 26] IsNone0.is_none _153);
    goto BB82
  }
  BB82 {
    _151 <- not _152;
    switch (_151)
      | False -> goto BB84
      | True -> goto BB83
      end
  }
  BB83 {
    absurd
  }
  BB84 {
    _150 <- ();
    _160 <- borrow_mut some_2;
    some_2 <-  ^ _160;
    _159 <- ([#"../option.rs" 46 12 46 23] Take0.take _160);
    goto BB85
  }
  BB85 {
    _158 <- ([#"../option.rs" 46 12 46 32] Unwrap0.unwrap _159);
    goto BB86
  }
  BB86 {
    _157 <- ([#"../option.rs" 46 12 46 37] _158 = ([#"../option.rs" 46 36 46 37] (1 : int32)));
    _156 <- not _157;
    switch (_156)
      | False -> goto BB88
      | True -> goto BB87
      end
  }
  BB87 {
    absurd
  }
  BB88 {
    _155 <- ();
    _165 <- some_2;
    _164 <- ([#"../option.rs" 47 12 47 26] IsNone0.is_none _165);
    goto BB89
  }
  BB89 {
    _163 <- not _164;
    switch (_163)
      | False -> goto BB91
      | True -> goto BB90
      end
  }
  BB90 {
    absurd
  }
  BB91 {
    _162 <- ();
    _167 <- Core_Option_Option_Type.C_Some ([#"../option.rs" 48 16 48 17] (1 : int32));
    some_2 <- _167;
    _167 <- any Core_Option_Option_Type.t_option int32;
    _173 <- borrow_mut none_1;
    none_1 <-  ^ _173;
    _172 <- ([#"../option.rs" 50 12 50 27] Replace0.replace _173 ([#"../option.rs" 50 25 50 26] (2 : int32)));
    goto BB92
  }
  BB92 {
    _171 <- _172;
    _170 <- ([#"../option.rs" 50 12 50 37] IsNone0.is_none _171);
    goto BB93
  }
  BB93 {
    _169 <- not _170;
    switch (_169)
      | False -> goto BB95
      | True -> goto BB94
      end
  }
  BB94 {
    absurd
  }
  BB95 {
    _168 <- ();
    _179 <- none_1;
    _178 <- ([#"../option.rs" 51 12 51 25] Unwrap0.unwrap _179);
    goto BB96
  }
  BB96 {
    _177 <- ([#"../option.rs" 51 12 51 30] _178 = ([#"../option.rs" 51 29 51 30] (2 : int32)));
    _176 <- not _177;
    switch (_176)
      | False -> goto BB98
      | True -> goto BB97
      end
  }
  BB97 {
    absurd
  }
  BB98 {
    _175 <- ();
    _181 <- Core_Option_Option_Type.C_None;
    none_1 <- _181;
    _181 <- any Core_Option_Option_Type.t_option int32;
    _187 <- borrow_mut some_2;
    some_2 <-  ^ _187;
    _186 <- ([#"../option.rs" 53 12 53 27] Replace0.replace _187 ([#"../option.rs" 53 25 53 26] (2 : int32)));
    goto BB99
  }
  BB99 {
    _185 <- ([#"../option.rs" 53 12 53 36] Unwrap0.unwrap _186);
    goto BB100
  }
  BB100 {
    _184 <- ([#"../option.rs" 53 12 53 41] _185 = ([#"../option.rs" 53 40 53 41] (1 : int32)));
    _183 <- not _184;
    switch (_183)
      | False -> goto BB102
      | True -> goto BB101
      end
  }
  BB101 {
    absurd
  }
  BB102 {
    _182 <- ();
    _193 <- some_2;
    _192 <- ([#"../option.rs" 54 12 54 25] Unwrap0.unwrap _193);
    goto BB103
  }
  BB103 {
    _191 <- ([#"../option.rs" 54 12 54 30] _192 = ([#"../option.rs" 54 29 54 30] (2 : int32)));
    _190 <- not _191;
    switch (_190)
      | False -> goto BB105
      | True -> goto BB104
      end
  }
  BB104 {
    absurd
  }
  BB105 {
    _189 <- ();
    _200 <- borrow_mut some_2;
    some_2 <-  ^ _200;
    _199 <- ([#"../option.rs" 55 12 55 27] Replace0.replace _200 ([#"../option.rs" 55 25 55 26] (1 : int32)));
    goto BB106
  }
  BB106 {
    _198 <- ([#"../option.rs" 55 12 55 36] Unwrap0.unwrap _199);
    goto BB107
  }
  BB107 {
    _197 <- ([#"../option.rs" 55 12 55 41] _198 = ([#"../option.rs" 55 40 55 41] (2 : int32)));
    _196 <- not _197;
    switch (_196)
      | False -> goto BB109
      | True -> goto BB108
      end
  }
  BB108 {
    absurd
  }
  BB109 {
    _195 <- ();
    _206 <- some_2;
    _205 <- ([#"../option.rs" 56 12 56 25] Unwrap0.unwrap _206);
    goto BB110
  }
  BB110 {
    _204 <- ([#"../option.rs" 56 12 56 30] _205 = ([#"../option.rs" 56 29 56 30] (1 : int32)));
    _203 <- not _204;
    switch (_203)
      | False -> goto BB112
      | True -> goto BB111
      end
  }
  BB111 {
    absurd
  }
  BB112 {
    _202 <- ();
    _212 <- none_1;
    _211 <- ([#"../option.rs" 59 12 59 36] UnwrapOrDefault0.unwrap_or_default _212);
    goto BB113
  }
  BB113 {
    _210 <- ([#"../option.rs" 59 12 59 41] _211 = ([#"../option.rs" 59 40 59 41] (0 : int32)));
    _209 <- not _210;
    switch (_209)
      | False -> goto BB115
      | True -> goto BB114
      end
  }
  BB114 {
    absurd
  }
  BB115 {
    _208 <- ();
    _218 <- some_2;
    _217 <- ([#"../option.rs" 60 12 60 36] UnwrapOrDefault0.unwrap_or_default _218);
    goto BB116
  }
  BB116 {
    _216 <- ([#"../option.rs" 60 12 60 41] _217 = ([#"../option.rs" 60 40 60 41] (1 : int32)));
    _215 <- not _216;
    switch (_215)
      | False -> goto BB118
      | True -> goto BB117
      end
  }
  BB117 {
    absurd
  }
  BB118 {
    _214 <- ();
    _226 <- none_1;
    _225 <- ([#"../option.rs" 63 12 63 25] AsRef0.as_ref _226);
    goto BB119
  }
  BB119 {
    _224 <- ([#"../option.rs" 63 12 63 34] Copied0.copied _225);
    goto BB120
  }
  BB120 {
    _223 <- _224;
    _222 <- ([#"../option.rs" 63 12 63 44] IsNone0.is_none _223);
    goto BB121
  }
  BB121 {
    _221 <- not _222;
    switch (_221)
      | False -> goto BB123
      | True -> goto BB122
      end
  }
  BB122 {
    absurd
  }
  BB123 {
    _220 <- ();
    _234 <- some_2;
    _233 <- ([#"../option.rs" 64 12 64 25] AsRef0.as_ref _234);
    goto BB124
  }
  BB124 {
    _232 <- ([#"../option.rs" 64 12 64 34] Copied0.copied _233);
    goto BB125
  }
  BB125 {
    _231 <- ([#"../option.rs" 64 12 64 43] Unwrap0.unwrap _232);
    goto BB126
  }
  BB126 {
    _230 <- ([#"../option.rs" 64 12 64 48] _231 = ([#"../option.rs" 64 47 64 48] (1 : int32)));
    _229 <- not _230;
    switch (_229)
      | False -> goto BB128
      | True -> goto BB127
      end
  }
  BB127 {
    absurd
  }
  BB128 {
    _228 <- ();
    _242 <- borrow_mut none_1;
    none_1 <-  ^ _242;
    _241 <- ([#"../option.rs" 65 12 65 25] AsMut0.as_mut _242);
    goto BB129
  }
  BB129 {
    _240 <- ([#"../option.rs" 65 12 65 34] Copied1.copied _241);
    goto BB130
  }
  BB130 {
    _239 <- _240;
    _238 <- ([#"../option.rs" 65 12 65 44] IsNone0.is_none _239);
    goto BB131
  }
  BB131 {
    _237 <- not _238;
    switch (_237)
      | False -> goto BB133
      | True -> goto BB132
      end
  }
  BB132 {
    absurd
  }
  BB133 {
    _236 <- ();
    _250 <- borrow_mut some_2;
    some_2 <-  ^ _250;
    _249 <- ([#"../option.rs" 66 12 66 25] AsMut0.as_mut _250);
    goto BB134
  }
  BB134 {
    _248 <- ([#"../option.rs" 66 12 66 34] Copied1.copied _249);
    goto BB135
  }
  BB135 {
    _247 <- ([#"../option.rs" 66 12 66 43] Unwrap0.unwrap _248);
    goto BB136
  }
  BB136 {
    _246 <- ([#"../option.rs" 66 12 66 48] _247 = ([#"../option.rs" 66 47 66 48] (1 : int32)));
    _245 <- not _246;
    switch (_245)
      | False -> goto BB138
      | True -> goto BB137
      end
  }
  BB137 {
    absurd
  }
  BB138 {
    _244 <- ();
    _258 <- none_1;
    _257 <- ([#"../option.rs" 68 12 68 25] AsRef0.as_ref _258);
    goto BB139
  }
  BB139 {
    _256 <- ([#"../option.rs" 68 12 68 34] Cloned0.cloned _257);
    goto BB140
  }
  BB140 {
    _255 <- _256;
    _254 <- ([#"../option.rs" 68 12 68 44] IsNone0.is_none _255);
    goto BB141
  }
  BB141 {
    _253 <- not _254;
    switch (_253)
      | False -> goto BB143
      | True -> goto BB142
      end
  }
  BB142 {
    absurd
  }
  BB143 {
    _252 <- ();
    _266 <- some_2;
    _265 <- ([#"../option.rs" 69 12 69 25] AsRef0.as_ref _266);
    goto BB144
  }
  BB144 {
    _264 <- ([#"../option.rs" 69 12 69 34] Cloned0.cloned _265);
    goto BB145
  }
  BB145 {
    _263 <- ([#"../option.rs" 69 12 69 43] Unwrap0.unwrap _264);
    goto BB146
  }
  BB146 {
    _262 <- ([#"../option.rs" 69 12 69 48] _263 = ([#"../option.rs" 69 47 69 48] (1 : int32)));
    _261 <- not _262;
    switch (_261)
      | False -> goto BB148
      | True -> goto BB147
      end
  }
  BB147 {
    absurd
  }
  BB148 {
    _260 <- ();
    _274 <- borrow_mut none_1;
    none_1 <-  ^ _274;
    _273 <- ([#"../option.rs" 70 12 70 25] AsMut0.as_mut _274);
    goto BB149
  }
  BB149 {
    _272 <- ([#"../option.rs" 70 12 70 34] Cloned1.cloned _273);
    goto BB150
  }
  BB150 {
    _271 <- _272;
    _270 <- ([#"../option.rs" 70 12 70 44] IsNone0.is_none _271);
    goto BB151
  }
  BB151 {
    _269 <- not _270;
    switch (_269)
      | False -> goto BB153
      | True -> goto BB152
      end
  }
  BB152 {
    absurd
  }
  BB153 {
    _268 <- ();
    _282 <- borrow_mut some_2;
    some_2 <-  ^ _282;
    _281 <- ([#"../option.rs" 71 12 71 25] AsMut0.as_mut _282);
    goto BB154
  }
  BB154 {
    _280 <- ([#"../option.rs" 71 12 71 34] Cloned1.cloned _281);
    goto BB155
  }
  BB155 {
    _279 <- ([#"../option.rs" 71 12 71 43] Unwrap0.unwrap _280);
    goto BB156
  }
  BB156 {
    _278 <- ([#"../option.rs" 71 12 71 48] _279 = ([#"../option.rs" 71 47 71 48] (1 : int32)));
    _277 <- not _278;
    switch (_277)
      | False -> goto BB158
      | True -> goto BB157
      end
  }
  BB157 {
    absurd
  }
  BB158 {
    _276 <- ();
    opt_284 <- Core_Option_Option_Type.C_None;
    _290 <- opt_284;
    _289 <- ([#"../option.rs" 75 12 75 25] Flatten0.flatten _290);
    goto BB159
  }
  BB159 {
    _288 <- _289;
    _287 <- ([#"../option.rs" 75 12 75 35] IsNone0.is_none _288);
    goto BB160
  }
  BB160 {
    _286 <- not _287;
    switch (_286)
      | False -> goto BB162
      | True -> goto BB161
      end
  }
  BB161 {
    absurd
  }
  BB162 {
    _285 <- ();
    _293 <- Core_Option_Option_Type.C_None;
    opt_292 <- Core_Option_Option_Type.C_Some _293;
    _299 <- opt_292;
    _298 <- ([#"../option.rs" 77 12 77 25] Flatten0.flatten _299);
    goto BB163
  }
  BB163 {
    _297 <- _298;
    _296 <- ([#"../option.rs" 77 12 77 35] IsNone0.is_none _297);
    goto BB164
  }
  BB164 {
    _295 <- not _296;
    switch (_295)
      | False -> goto BB166
      | True -> goto BB165
      end
  }
  BB165 {
    absurd
  }
  BB166 {
    _294 <- ();
    _302 <- Core_Option_Option_Type.C_Some ([#"../option.rs" 78 45 78 46] (1 : int32));
    opt_301 <- Core_Option_Option_Type.C_Some _302;
    _308 <- opt_301;
    _307 <- ([#"../option.rs" 79 12 79 25] Flatten0.flatten _308);
    goto BB167
  }
  BB167 {
    _306 <- ([#"../option.rs" 79 12 79 34] Unwrap0.unwrap _307);
    goto BB168
  }
  BB168 {
    _305 <- ([#"../option.rs" 79 12 79 39] _306 = ([#"../option.rs" 79 38 79 39] (1 : int32)));
    _304 <- not _305;
    switch (_304)
      | False -> goto BB170
      | True -> goto BB169
      end
  }
  BB169 {
    absurd
  }
  BB170 {
    _303 <- ();
    _0 <- ();
    return _0
  }
  
end
