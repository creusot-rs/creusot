
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module Option_TestOption
  use prelude.Int32
  use Core_Option_Option_Type as Core_Option_Option_Type
  predicate invariant9 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant9 (self : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = invariant9 self }
    
  predicate inv9 (_x : Core_Option_Option_Type.t_option int32)
  val inv9 (_x : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = inv9 _x }
    
  axiom inv9 : forall x : Core_Option_Option_Type.t_option int32 . inv9 x = true
  predicate invariant8 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant8 (self : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = invariant8 self }
    
  predicate inv8 (_x : Core_Option_Option_Type.t_option int32)
  val inv8 (_x : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = inv8 _x }
    
  axiom inv8 : forall x : Core_Option_Option_Type.t_option int32 . inv8 x = true
  predicate invariant7 (self : int32) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant7 (self : int32) : bool
    ensures { result = invariant7 self }
    
  predicate inv7 (_x : int32)
  val inv7 (_x : int32) : bool
    ensures { result = inv7 _x }
    
  axiom inv7 : forall x : int32 . inv7 x = true
  use prelude.Borrow
  predicate invariant6 (self : Core_Option_Option_Type.t_option (borrowed int32)) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant6 (self : Core_Option_Option_Type.t_option (borrowed int32)) : bool
    ensures { result = invariant6 self }
    
  predicate inv6 (_x : Core_Option_Option_Type.t_option (borrowed int32))
  val inv6 (_x : Core_Option_Option_Type.t_option (borrowed int32)) : bool
    ensures { result = inv6 _x }
    
  axiom inv6 : forall x : Core_Option_Option_Type.t_option (borrowed int32) . inv6 x = true
  predicate invariant5 (self : Core_Option_Option_Type.t_option (borrowed int32)) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant5 (self : Core_Option_Option_Type.t_option (borrowed int32)) : bool
    ensures { result = invariant5 self }
    
  predicate inv5 (_x : Core_Option_Option_Type.t_option (borrowed int32))
  val inv5 (_x : Core_Option_Option_Type.t_option (borrowed int32)) : bool
    ensures { result = inv5 _x }
    
  axiom inv5 : forall x : Core_Option_Option_Type.t_option (borrowed int32) . inv5 x = true
  predicate invariant4 (self : borrowed int32) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant4 (self : borrowed int32) : bool
    ensures { result = invariant4 self }
    
  predicate inv4 (_x : borrowed int32)
  val inv4 (_x : borrowed int32) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : borrowed int32 . inv4 x = true
  predicate invariant3 (self : borrowed (Core_Option_Option_Type.t_option int32)) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant3 (self : borrowed (Core_Option_Option_Type.t_option int32)) : bool
    ensures { result = invariant3 self }
    
  predicate inv3 (_x : borrowed (Core_Option_Option_Type.t_option int32))
  val inv3 (_x : borrowed (Core_Option_Option_Type.t_option int32)) : bool
    ensures { result = inv3 _x }
    
  axiom inv3 : forall x : borrowed (Core_Option_Option_Type.t_option int32) . inv3 x = true
  predicate invariant2 (self : int32) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : int32) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : int32)
  val inv2 (_x : int32) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : int32 . inv2 x = true
  predicate invariant1 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant1 (self : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : Core_Option_Option_Type.t_option int32)
  val inv1 (_x : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : Core_Option_Option_Type.t_option int32 . inv1 x = true
  predicate invariant0 (self : Core_Option_Option_Type.t_option int32) =
    [#"../../../../creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : Core_Option_Option_Type.t_option int32)
  val inv0 (_x : Core_Option_Option_Type.t_option int32) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Core_Option_Option_Type.t_option int32 . inv0 x = true
  val flatten0 (self : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32)) : Core_Option_Option_Type.t_option int32
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 108 16 108 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    ensures { inv1 result }
    
  predicate resolve0 (self : borrowed int32) =
    [#"../../../../creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve0 (self : borrowed int32) : bool
    ensures { result = resolve0 self }
    
  val cloned1 (self : Core_Option_Option_Type.t_option (borrowed int32)) : Core_Option_Option_Type.t_option int32
    requires {inv5 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 97 16 97 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : borrowed int32 . inv4 t /\ self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ resolve0 t) }
    ensures { inv1 result }
    
  val cloned0 (self : Core_Option_Option_Type.t_option int32) : Core_Option_Option_Type.t_option int32
    requires {inv8 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 80 16 80 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : int32 . inv7 t /\ self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    ensures { inv1 result }
    
  val copied1 (self : Core_Option_Option_Type.t_option (borrowed int32)) : Core_Option_Option_Type.t_option int32
    requires {inv5 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 88 16 88 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : borrowed int32 . inv4 t /\ self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ resolve0 t) }
    ensures { inv1 result }
    
  val copied0 (self : Core_Option_Option_Type.t_option int32) : Core_Option_Option_Type.t_option int32
    requires {inv8 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 74 16 74 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ (exists t : int32 . inv7 t /\ self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    ensures { inv1 result }
    
  use prelude.Int
  predicate is_default0 (self : int32) =
    [#"../../../../creusot-contracts/src/std/num.rs" 30 28 30 32] self = (0 : int32)
  val is_default0 (self : int32) : bool
    ensures { result = is_default0 self }
    
  val unwrap_or_default0 (self : Core_Option_Option_Type.t_option int32) : int32
    requires {inv1 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 66 16 66 64] self = Core_Option_Option_Type.C_None -> is_default0 result }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    ensures { inv2 result }
    
  val replace0 (self : borrowed (Core_Option_Option_Type.t_option int32)) (value : int32) : Core_Option_Option_Type.t_option int32
    requires {inv3 self}
    requires {inv2 value}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] result =  * self /\  ^ self = Core_Option_Option_Type.C_Some value }
    ensures { inv1 result }
    
  val take0 (self : borrowed (Core_Option_Option_Type.t_option int32)) : Core_Option_Option_Type.t_option int32
    requires {inv3 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] result =  * self /\  ^ self = Core_Option_Option_Type.C_None }
    ensures { inv1 result }
    
  val or0 (self : Core_Option_Option_Type.t_option int32) (optb : Core_Option_Option_Type.t_option int32) : Core_Option_Option_Type.t_option int32
    requires {inv1 self}
    requires {inv1 optb}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 56 16 56 59] self = Core_Option_Option_Type.C_None -> result = optb }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ result = self }
    ensures { inv1 result }
    
  val and0 (self : Core_Option_Option_Type.t_option int32) (optb : Core_Option_Option_Type.t_option int32) : Core_Option_Option_Type.t_option int32
    requires {inv1 self}
    requires {inv1 optb}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 52 16 52 59] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ result = optb }
    ensures { inv1 result }
    
  val unwrap2 (self : Core_Option_Option_Type.t_option int32) : int32
    requires {[#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self <> Core_Option_Option_Type.C_None}
    requires {inv8 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] Core_Option_Option_Type.C_Some result = self }
    ensures { inv7 result }
    
  val is_none2 (self : Core_Option_Option_Type.t_option int32) : bool
    requires {inv9 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 24 26 24 51] result = (self = Core_Option_Option_Type.C_None) }
    
  val as_ref0 (self : Core_Option_Option_Type.t_option int32) : Core_Option_Option_Type.t_option int32
    requires {inv0 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 46 16 46 60] self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 47 16 49 18] self = Core_Option_Option_Type.C_None \/ (exists r : int32 . inv7 r /\ result = Core_Option_Option_Type.C_Some r /\ self = Core_Option_Option_Type.C_Some r) }
    ensures { inv8 result }
    
  val unwrap1 (self : Core_Option_Option_Type.t_option (borrowed int32)) : borrowed int32
    requires {[#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self <> Core_Option_Option_Type.C_None}
    requires {inv5 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] Core_Option_Option_Type.C_Some result = self }
    ensures { inv4 result }
    
  val is_none1 (self : Core_Option_Option_Type.t_option (borrowed int32)) : bool
    requires {inv6 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 24 26 24 51] result = (self = Core_Option_Option_Type.C_None) }
    
  val as_mut0 (self : borrowed (Core_Option_Option_Type.t_option int32)) : Core_Option_Option_Type.t_option (borrowed int32)
    requires {inv3 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 39 16 39 77]  * self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None /\  ^ self = Core_Option_Option_Type.C_None }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 40 16 43 18]  * self = Core_Option_Option_Type.C_None \/ (exists r : borrowed int32 . inv4 r /\ result = Core_Option_Option_Type.C_Some r /\  * self = Core_Option_Option_Type.C_Some ( * r) /\  ^ self = Core_Option_Option_Type.C_Some ( ^ r)) }
    ensures { inv5 result }
    
  val unwrap_or0 (self : Core_Option_Option_Type.t_option int32) (default : int32) : int32
    requires {inv1 self}
    requires {inv2 default}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 35 16 35 62] self = Core_Option_Option_Type.C_None -> result = default }
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    ensures { inv2 result }
    
  val unwrap0 (self : Core_Option_Option_Type.t_option int32) : int32
    requires {[#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] self <> Core_Option_Option_Type.C_None}
    requires {inv1 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 17 0 114 1] Core_Option_Option_Type.C_Some result = self }
    ensures { inv2 result }
    
  val is_none0 (self : Core_Option_Option_Type.t_option int32) : bool
    requires {inv0 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 24 26 24 51] result = (self = Core_Option_Option_Type.C_None) }
    
  val is_some0 (self : Core_Option_Option_Type.t_option int32) : bool
    requires {inv0 self}
    ensures { [#"../../../../creusot-contracts/src/std/option.rs" 21 26 21 51] result = (self <> Core_Option_Option_Type.C_None) }
    
  let rec cfg test_option [#"../option.rs" 4 0 4 20] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var none : Core_Option_Option_Type.t_option int32;
  var some : Core_Option_Option_Type.t_option int32;
  var _5 : bool;
  var _6 : bool;
  var _9 : bool;
  var _14 : bool;
  var _15 : bool;
  var _18 : bool;
  var _24 : int32;
  var _30 : int32;
  var _36 : int32;
  var _41 : bool;
  var _43 : Core_Option_Option_Type.t_option (borrowed int32);
  var _44 : borrowed (Core_Option_Option_Type.t_option int32);
  var _46 : borrowed int32;
  var _47 : Core_Option_Option_Type.t_option (borrowed int32);
  var _48 : borrowed (Core_Option_Option_Type.t_option int32);
  var _52 : int32;
  var _55 : borrowed int32;
  var _56 : Core_Option_Option_Type.t_option (borrowed int32);
  var _57 : borrowed (Core_Option_Option_Type.t_option int32);
  var _61 : int32;
  var _66 : bool;
  var _68 : Core_Option_Option_Type.t_option int32;
  var _75 : int32;
  var _76 : Core_Option_Option_Type.t_option int32;
  var _81 : bool;
  var _83 : Core_Option_Option_Type.t_option int32;
  var _89 : bool;
  var _91 : Core_Option_Option_Type.t_option int32;
  var _97 : bool;
  var _99 : Core_Option_Option_Type.t_option int32;
  var _106 : int32;
  var _107 : Core_Option_Option_Type.t_option int32;
  var _113 : bool;
  var _115 : Core_Option_Option_Type.t_option int32;
  var _122 : int32;
  var _123 : Core_Option_Option_Type.t_option int32;
  var _130 : int32;
  var _131 : Core_Option_Option_Type.t_option int32;
  var _138 : int32;
  var _139 : Core_Option_Option_Type.t_option int32;
  var _145 : bool;
  var _147 : Core_Option_Option_Type.t_option int32;
  var _148 : borrowed (Core_Option_Option_Type.t_option int32);
  var _152 : bool;
  var _158 : int32;
  var _159 : Core_Option_Option_Type.t_option int32;
  var _160 : borrowed (Core_Option_Option_Type.t_option int32);
  var _164 : bool;
  var _170 : bool;
  var _172 : Core_Option_Option_Type.t_option int32;
  var _173 : borrowed (Core_Option_Option_Type.t_option int32);
  var _178 : int32;
  var _185 : int32;
  var _186 : Core_Option_Option_Type.t_option int32;
  var _187 : borrowed (Core_Option_Option_Type.t_option int32);
  var _192 : int32;
  var _198 : int32;
  var _199 : Core_Option_Option_Type.t_option int32;
  var _200 : borrowed (Core_Option_Option_Type.t_option int32);
  var _205 : int32;
  var _211 : int32;
  var _217 : int32;
  var _222 : bool;
  var _224 : Core_Option_Option_Type.t_option int32;
  var _225 : Core_Option_Option_Type.t_option int32;
  var _231 : int32;
  var _232 : Core_Option_Option_Type.t_option int32;
  var _233 : Core_Option_Option_Type.t_option int32;
  var _238 : bool;
  var _240 : Core_Option_Option_Type.t_option int32;
  var _241 : Core_Option_Option_Type.t_option (borrowed int32);
  var _242 : borrowed (Core_Option_Option_Type.t_option int32);
  var _247 : int32;
  var _248 : Core_Option_Option_Type.t_option int32;
  var _249 : Core_Option_Option_Type.t_option (borrowed int32);
  var _250 : borrowed (Core_Option_Option_Type.t_option int32);
  var _254 : bool;
  var _256 : Core_Option_Option_Type.t_option int32;
  var _257 : Core_Option_Option_Type.t_option int32;
  var _263 : int32;
  var _264 : Core_Option_Option_Type.t_option int32;
  var _265 : Core_Option_Option_Type.t_option int32;
  var _270 : bool;
  var _272 : Core_Option_Option_Type.t_option int32;
  var _273 : Core_Option_Option_Type.t_option (borrowed int32);
  var _274 : borrowed (Core_Option_Option_Type.t_option int32);
  var _279 : int32;
  var _280 : Core_Option_Option_Type.t_option int32;
  var _281 : Core_Option_Option_Type.t_option (borrowed int32);
  var _282 : borrowed (Core_Option_Option_Type.t_option int32);
  var opt : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _287 : bool;
  var _289 : Core_Option_Option_Type.t_option int32;
  var opt1 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _296 : bool;
  var _298 : Core_Option_Option_Type.t_option int32;
  var opt2 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _306 : int32;
  var _307 : Core_Option_Option_Type.t_option int32;
  {
    goto BB0
  }
  BB0 {
    [#"../option.rs" 5 32 5 36] none <- ([#"../option.rs" 5 32 5 36] Core_Option_Option_Type.C_None);
    [#"../option.rs" 6 32 6 39] some <- ([#"../option.rs" 6 32 6 39] Core_Option_Option_Type.C_Some ([#"../option.rs" 6 37 6 38] [#"../option.rs" 6 37 6 38] (1 : int32)));
    [#"../option.rs" 9 12 9 26] _6 <- ([#"../option.rs" 9 12 9 26] is_some0 ([#"../option.rs" 9 12 9 26] some));
    goto BB4
  }
  BB1 {
    [#"../option.rs" 9 12 9 45] _5 <- ([#"../option.rs" 9 12 9 45] [#"../option.rs" 9 12 9 45] false);
    goto BB3
  }
  BB2 {
    [#"../option.rs" 9 31 9 45] _9 <- ([#"../option.rs" 9 31 9 45] is_some0 ([#"../option.rs" 9 31 9 45] none));
    goto BB5
  }
  BB3 {
    switch ([#"../option.rs" 9 4 9 46] not _5)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB4 {
    switch (_6)
      | False -> goto BB1
      | True -> goto BB2
      end
  }
  BB5 {
    [#"../option.rs" 9 12 9 45] _5 <- ([#"../option.rs" 9 30 9 45] not _9);
    _9 <- any bool;
    goto BB3
  }
  BB6 {
    assert { [#"../option.rs" 9 4 9 46] false };
    absurd
  }
  BB7 {
    [#"../option.rs" 11 12 11 26] _15 <- ([#"../option.rs" 11 12 11 26] is_none0 ([#"../option.rs" 11 12 11 26] none));
    goto BB11
  }
  BB8 {
    [#"../option.rs" 11 12 11 45] _14 <- ([#"../option.rs" 11 12 11 45] [#"../option.rs" 11 12 11 45] false);
    goto BB10
  }
  BB9 {
    [#"../option.rs" 11 31 11 45] _18 <- ([#"../option.rs" 11 31 11 45] is_none0 ([#"../option.rs" 11 31 11 45] some));
    goto BB12
  }
  BB10 {
    switch ([#"../option.rs" 11 4 11 46] not _14)
      | False -> goto BB14
      | True -> goto BB13
      end
  }
  BB11 {
    switch (_15)
      | False -> goto BB8
      | True -> goto BB9
      end
  }
  BB12 {
    [#"../option.rs" 11 12 11 45] _14 <- ([#"../option.rs" 11 30 11 45] not _18);
    _18 <- any bool;
    goto BB10
  }
  BB13 {
    assert { [#"../option.rs" 11 4 11 46] false };
    absurd
  }
  BB14 {
    [#"../option.rs" 14 12 14 25] _24 <- ([#"../option.rs" 14 12 14 25] unwrap0 ([#"../option.rs" 14 12 14 16] some));
    goto BB15
  }
  BB15 {
    switch ([#"../option.rs" 14 4 14 31] not ([#"../option.rs" 14 12 14 30] _24 = ([#"../option.rs" 14 29 14 30] [#"../option.rs" 14 29 14 30] (1 : int32))))
      | False -> goto BB17
      | True -> goto BB16
      end
  }
  BB16 {
    assert { [#"../option.rs" 14 4 14 31] false };
    absurd
  }
  BB17 {
    [#"../option.rs" 19 12 19 29] _30 <- ([#"../option.rs" 19 12 19 29] unwrap_or0 ([#"../option.rs" 19 12 19 16] some) ([#"../option.rs" 19 27 19 28] [#"../option.rs" 19 27 19 28] (2 : int32)));
    goto BB18
  }
  BB18 {
    switch ([#"../option.rs" 19 4 19 35] not ([#"../option.rs" 19 12 19 34] _30 = ([#"../option.rs" 19 33 19 34] [#"../option.rs" 19 33 19 34] (1 : int32))))
      | False -> goto BB20
      | True -> goto BB19
      end
  }
  BB19 {
    assert { [#"../option.rs" 19 4 19 35] false };
    absurd
  }
  BB20 {
    [#"../option.rs" 20 12 20 29] _36 <- ([#"../option.rs" 20 12 20 29] unwrap_or0 ([#"../option.rs" 20 12 20 16] none) ([#"../option.rs" 20 27 20 28] [#"../option.rs" 20 27 20 28] (2 : int32)));
    goto BB21
  }
  BB21 {
    switch ([#"../option.rs" 20 4 20 35] not ([#"../option.rs" 20 12 20 34] _36 = ([#"../option.rs" 20 33 20 34] [#"../option.rs" 20 33 20 34] (2 : int32))))
      | False -> goto BB23
      | True -> goto BB22
      end
  }
  BB22 {
    assert { [#"../option.rs" 20 4 20 35] false };
    absurd
  }
  BB23 {
    [#"../option.rs" 23 12 23 25] _44 <- Borrow.borrow_mut none;
    [#"../option.rs" 23 12 23 25] none <-  ^ _44;
    [#"../option.rs" 23 12 23 25] _43 <- ([#"../option.rs" 23 12 23 25] as_mut0 _44);
    _44 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB24
  }
  BB24 {
    [#"../option.rs" 23 12 23 35] _41 <- ([#"../option.rs" 23 12 23 35] is_none1 ([#"../option.rs" 23 12 23 35] _43));
    goto BB25
  }
  BB25 {
    switch ([#"../option.rs" 23 4 23 36] not _41)
      | False -> goto BB27
      | True -> goto BB26
      end
  }
  BB26 {
    assert { [#"../option.rs" 23 4 23 36] false };
    absurd
  }
  BB27 {
    [#"../option.rs" 24 5 24 18] _48 <- Borrow.borrow_mut some;
    [#"../option.rs" 24 5 24 18] some <-  ^ _48;
    [#"../option.rs" 24 5 24 18] _47 <- ([#"../option.rs" 24 5 24 18] as_mut0 _48);
    _48 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB28
  }
  BB28 {
    [#"../option.rs" 24 5 24 27] _46 <- ([#"../option.rs" 24 5 24 27] unwrap1 _47);
    _47 <- any Core_Option_Option_Type.t_option (borrowed int32);
    goto BB29
  }
  BB29 {
    [#"../option.rs" 24 4 24 31] _46 <- { _46 with current = ([#"../option.rs" 24 4 24 31] [#"../option.rs" 24 30 24 31] (2 : int32)) };
    assume { resolve0 _46 };
    [#"../option.rs" 25 12 25 25] _52 <- ([#"../option.rs" 25 12 25 25] unwrap0 ([#"../option.rs" 25 12 25 16] some));
    goto BB30
  }
  BB30 {
    switch ([#"../option.rs" 25 4 25 31] not ([#"../option.rs" 25 12 25 30] _52 = ([#"../option.rs" 25 29 25 30] [#"../option.rs" 25 29 25 30] (2 : int32))))
      | False -> goto BB32
      | True -> goto BB31
      end
  }
  BB31 {
    assert { [#"../option.rs" 25 4 25 31] false };
    absurd
  }
  BB32 {
    [#"../option.rs" 26 5 26 18] _57 <- Borrow.borrow_mut some;
    [#"../option.rs" 26 5 26 18] some <-  ^ _57;
    [#"../option.rs" 26 5 26 18] _56 <- ([#"../option.rs" 26 5 26 18] as_mut0 _57);
    _57 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB33
  }
  BB33 {
    [#"../option.rs" 26 5 26 27] _55 <- ([#"../option.rs" 26 5 26 27] unwrap1 _56);
    _56 <- any Core_Option_Option_Type.t_option (borrowed int32);
    goto BB34
  }
  BB34 {
    [#"../option.rs" 26 4 26 31] _55 <- { _55 with current = ([#"../option.rs" 26 4 26 31] [#"../option.rs" 26 30 26 31] (1 : int32)) };
    assume { resolve0 _55 };
    [#"../option.rs" 27 12 27 25] _61 <- ([#"../option.rs" 27 12 27 25] unwrap0 ([#"../option.rs" 27 12 27 16] some));
    goto BB35
  }
  BB35 {
    switch ([#"../option.rs" 27 4 27 31] not ([#"../option.rs" 27 12 27 30] _61 = ([#"../option.rs" 27 29 27 30] [#"../option.rs" 27 29 27 30] (1 : int32))))
      | False -> goto BB37
      | True -> goto BB36
      end
  }
  BB36 {
    assert { [#"../option.rs" 27 4 27 31] false };
    absurd
  }
  BB37 {
    [#"../option.rs" 29 12 29 25] _68 <- ([#"../option.rs" 29 12 29 25] as_ref0 ([#"../option.rs" 29 12 29 25] none));
    goto BB38
  }
  BB38 {
    [#"../option.rs" 29 12 29 35] _66 <- ([#"../option.rs" 29 12 29 35] is_none2 ([#"../option.rs" 29 12 29 35] _68));
    goto BB39
  }
  BB39 {
    switch ([#"../option.rs" 29 4 29 36] not _66)
      | False -> goto BB41
      | True -> goto BB40
      end
  }
  BB40 {
    assert { [#"../option.rs" 29 4 29 36] false };
    absurd
  }
  BB41 {
    [#"../option.rs" 30 13 30 26] _76 <- ([#"../option.rs" 30 13 30 26] as_ref0 ([#"../option.rs" 30 13 30 26] some));
    goto BB42
  }
  BB42 {
    [#"../option.rs" 30 13 30 35] _75 <- ([#"../option.rs" 30 13 30 35] unwrap2 _76);
    _76 <- any Core_Option_Option_Type.t_option int32;
    goto BB43
  }
  BB43 {
    switch ([#"../option.rs" 30 4 30 41] not ([#"../option.rs" 30 12 30 40] ([#"../option.rs" 30 12 30 35] _75) = ([#"../option.rs" 30 39 30 40] [#"../option.rs" 30 39 30 40] (1 : int32))))
      | False -> goto BB45
      | True -> goto BB44
      end
  }
  BB44 {
    assert { [#"../option.rs" 30 4 30 41] false };
    absurd
  }
  BB45 {
    [#"../option.rs" 33 12 33 26] _83 <- ([#"../option.rs" 33 12 33 26] and0 ([#"../option.rs" 33 12 33 16] none) ([#"../option.rs" 33 21 33 25] none));
    goto BB46
  }
  BB46 {
    [#"../option.rs" 33 12 33 36] _81 <- ([#"../option.rs" 33 12 33 36] is_none0 ([#"../option.rs" 33 12 33 36] _83));
    goto BB47
  }
  BB47 {
    switch ([#"../option.rs" 33 4 33 37] not _81)
      | False -> goto BB49
      | True -> goto BB48
      end
  }
  BB48 {
    assert { [#"../option.rs" 33 4 33 37] false };
    absurd
  }
  BB49 {
    [#"../option.rs" 34 12 34 29] _91 <- ([#"../option.rs" 34 12 34 29] and0 ([#"../option.rs" 34 12 34 16] none) ([#"../option.rs" 34 21 34 28] Core_Option_Option_Type.C_Some ([#"../option.rs" 34 26 34 27] [#"../option.rs" 34 26 34 27] (2 : int32))));
    goto BB50
  }
  BB50 {
    [#"../option.rs" 34 12 34 39] _89 <- ([#"../option.rs" 34 12 34 39] is_none0 ([#"../option.rs" 34 12 34 39] _91));
    goto BB51
  }
  BB51 {
    switch ([#"../option.rs" 34 4 34 40] not _89)
      | False -> goto BB53
      | True -> goto BB52
      end
  }
  BB52 {
    assert { [#"../option.rs" 34 4 34 40] false };
    absurd
  }
  BB53 {
    [#"../option.rs" 35 12 35 26] _99 <- ([#"../option.rs" 35 12 35 26] and0 ([#"../option.rs" 35 12 35 16] some) ([#"../option.rs" 35 21 35 25] none));
    goto BB54
  }
  BB54 {
    [#"../option.rs" 35 12 35 36] _97 <- ([#"../option.rs" 35 12 35 36] is_none0 ([#"../option.rs" 35 12 35 36] _99));
    goto BB55
  }
  BB55 {
    switch ([#"../option.rs" 35 4 35 37] not _97)
      | False -> goto BB57
      | True -> goto BB56
      end
  }
  BB56 {
    assert { [#"../option.rs" 35 4 35 37] false };
    absurd
  }
  BB57 {
    [#"../option.rs" 36 12 36 29] _107 <- ([#"../option.rs" 36 12 36 29] and0 ([#"../option.rs" 36 12 36 16] some) ([#"../option.rs" 36 21 36 28] Core_Option_Option_Type.C_Some ([#"../option.rs" 36 26 36 27] [#"../option.rs" 36 26 36 27] (2 : int32))));
    goto BB58
  }
  BB58 {
    [#"../option.rs" 36 12 36 38] _106 <- ([#"../option.rs" 36 12 36 38] unwrap0 _107);
    _107 <- any Core_Option_Option_Type.t_option int32;
    goto BB59
  }
  BB59 {
    switch ([#"../option.rs" 36 4 36 44] not ([#"../option.rs" 36 12 36 43] _106 = ([#"../option.rs" 36 42 36 43] [#"../option.rs" 36 42 36 43] (2 : int32))))
      | False -> goto BB61
      | True -> goto BB60
      end
  }
  BB60 {
    assert { [#"../option.rs" 36 4 36 44] false };
    absurd
  }
  BB61 {
    [#"../option.rs" 38 12 38 25] _115 <- ([#"../option.rs" 38 12 38 25] or0 ([#"../option.rs" 38 12 38 16] none) ([#"../option.rs" 38 20 38 24] none));
    goto BB62
  }
  BB62 {
    [#"../option.rs" 38 12 38 35] _113 <- ([#"../option.rs" 38 12 38 35] is_none0 ([#"../option.rs" 38 12 38 35] _115));
    goto BB63
  }
  BB63 {
    switch ([#"../option.rs" 38 4 38 36] not _113)
      | False -> goto BB65
      | True -> goto BB64
      end
  }
  BB64 {
    assert { [#"../option.rs" 38 4 38 36] false };
    absurd
  }
  BB65 {
    [#"../option.rs" 39 12 39 28] _123 <- ([#"../option.rs" 39 12 39 28] or0 ([#"../option.rs" 39 12 39 16] none) ([#"../option.rs" 39 20 39 27] Core_Option_Option_Type.C_Some ([#"../option.rs" 39 25 39 26] [#"../option.rs" 39 25 39 26] (2 : int32))));
    goto BB66
  }
  BB66 {
    [#"../option.rs" 39 12 39 37] _122 <- ([#"../option.rs" 39 12 39 37] unwrap0 _123);
    _123 <- any Core_Option_Option_Type.t_option int32;
    goto BB67
  }
  BB67 {
    switch ([#"../option.rs" 39 4 39 43] not ([#"../option.rs" 39 12 39 42] _122 = ([#"../option.rs" 39 41 39 42] [#"../option.rs" 39 41 39 42] (2 : int32))))
      | False -> goto BB69
      | True -> goto BB68
      end
  }
  BB68 {
    assert { [#"../option.rs" 39 4 39 43] false };
    absurd
  }
  BB69 {
    [#"../option.rs" 40 12 40 25] _131 <- ([#"../option.rs" 40 12 40 25] or0 ([#"../option.rs" 40 12 40 16] some) ([#"../option.rs" 40 20 40 24] none));
    goto BB70
  }
  BB70 {
    [#"../option.rs" 40 12 40 34] _130 <- ([#"../option.rs" 40 12 40 34] unwrap0 _131);
    _131 <- any Core_Option_Option_Type.t_option int32;
    goto BB71
  }
  BB71 {
    switch ([#"../option.rs" 40 4 40 40] not ([#"../option.rs" 40 12 40 39] _130 = ([#"../option.rs" 40 38 40 39] [#"../option.rs" 40 38 40 39] (1 : int32))))
      | False -> goto BB73
      | True -> goto BB72
      end
  }
  BB72 {
    assert { [#"../option.rs" 40 4 40 40] false };
    absurd
  }
  BB73 {
    [#"../option.rs" 41 12 41 28] _139 <- ([#"../option.rs" 41 12 41 28] or0 ([#"../option.rs" 41 12 41 16] some) ([#"../option.rs" 41 20 41 27] Core_Option_Option_Type.C_Some ([#"../option.rs" 41 25 41 26] [#"../option.rs" 41 25 41 26] (2 : int32))));
    goto BB74
  }
  BB74 {
    [#"../option.rs" 41 12 41 37] _138 <- ([#"../option.rs" 41 12 41 37] unwrap0 _139);
    _139 <- any Core_Option_Option_Type.t_option int32;
    goto BB75
  }
  BB75 {
    switch ([#"../option.rs" 41 4 41 43] not ([#"../option.rs" 41 12 41 42] _138 = ([#"../option.rs" 41 41 41 42] [#"../option.rs" 41 41 41 42] (1 : int32))))
      | False -> goto BB77
      | True -> goto BB76
      end
  }
  BB76 {
    assert { [#"../option.rs" 41 4 41 43] false };
    absurd
  }
  BB77 {
    [#"../option.rs" 44 12 44 23] _148 <- Borrow.borrow_mut none;
    [#"../option.rs" 44 12 44 23] none <-  ^ _148;
    [#"../option.rs" 44 12 44 23] _147 <- ([#"../option.rs" 44 12 44 23] take0 _148);
    _148 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB78
  }
  BB78 {
    [#"../option.rs" 44 12 44 33] _145 <- ([#"../option.rs" 44 12 44 33] is_none0 ([#"../option.rs" 44 12 44 33] _147));
    goto BB79
  }
  BB79 {
    switch ([#"../option.rs" 44 4 44 34] not _145)
      | False -> goto BB81
      | True -> goto BB80
      end
  }
  BB80 {
    assert { [#"../option.rs" 44 4 44 34] false };
    absurd
  }
  BB81 {
    [#"../option.rs" 45 12 45 26] _152 <- ([#"../option.rs" 45 12 45 26] is_none0 ([#"../option.rs" 45 12 45 26] none));
    goto BB82
  }
  BB82 {
    switch ([#"../option.rs" 45 4 45 27] not _152)
      | False -> goto BB84
      | True -> goto BB83
      end
  }
  BB83 {
    assert { [#"../option.rs" 45 4 45 27] false };
    absurd
  }
  BB84 {
    [#"../option.rs" 46 12 46 23] _160 <- Borrow.borrow_mut some;
    [#"../option.rs" 46 12 46 23] some <-  ^ _160;
    [#"../option.rs" 46 12 46 23] _159 <- ([#"../option.rs" 46 12 46 23] take0 _160);
    _160 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB85
  }
  BB85 {
    [#"../option.rs" 46 12 46 32] _158 <- ([#"../option.rs" 46 12 46 32] unwrap0 _159);
    _159 <- any Core_Option_Option_Type.t_option int32;
    goto BB86
  }
  BB86 {
    switch ([#"../option.rs" 46 4 46 38] not ([#"../option.rs" 46 12 46 37] _158 = ([#"../option.rs" 46 36 46 37] [#"../option.rs" 46 36 46 37] (1 : int32))))
      | False -> goto BB88
      | True -> goto BB87
      end
  }
  BB87 {
    assert { [#"../option.rs" 46 4 46 38] false };
    absurd
  }
  BB88 {
    [#"../option.rs" 47 12 47 26] _164 <- ([#"../option.rs" 47 12 47 26] is_none0 ([#"../option.rs" 47 12 47 26] some));
    goto BB89
  }
  BB89 {
    switch ([#"../option.rs" 47 4 47 27] not _164)
      | False -> goto BB91
      | True -> goto BB90
      end
  }
  BB90 {
    assert { [#"../option.rs" 47 4 47 27] false };
    absurd
  }
  BB91 {
    [#"../option.rs" 48 4 48 18] some <- ([#"../option.rs" 48 11 48 18] Core_Option_Option_Type.C_Some ([#"../option.rs" 48 16 48 17] [#"../option.rs" 48 16 48 17] (1 : int32)));
    [#"../option.rs" 50 12 50 27] _173 <- Borrow.borrow_mut none;
    [#"../option.rs" 50 12 50 27] none <-  ^ _173;
    [#"../option.rs" 50 12 50 27] _172 <- ([#"../option.rs" 50 12 50 27] replace0 _173 ([#"../option.rs" 50 25 50 26] [#"../option.rs" 50 25 50 26] (2 : int32)));
    _173 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB92
  }
  BB92 {
    [#"../option.rs" 50 12 50 37] _170 <- ([#"../option.rs" 50 12 50 37] is_none0 ([#"../option.rs" 50 12 50 37] _172));
    goto BB93
  }
  BB93 {
    switch ([#"../option.rs" 50 4 50 38] not _170)
      | False -> goto BB95
      | True -> goto BB94
      end
  }
  BB94 {
    assert { [#"../option.rs" 50 4 50 38] false };
    absurd
  }
  BB95 {
    [#"../option.rs" 51 12 51 25] _178 <- ([#"../option.rs" 51 12 51 25] unwrap0 ([#"../option.rs" 51 12 51 16] none));
    goto BB96
  }
  BB96 {
    switch ([#"../option.rs" 51 4 51 31] not ([#"../option.rs" 51 12 51 30] _178 = ([#"../option.rs" 51 29 51 30] [#"../option.rs" 51 29 51 30] (2 : int32))))
      | False -> goto BB98
      | True -> goto BB97
      end
  }
  BB97 {
    assert { [#"../option.rs" 51 4 51 31] false };
    absurd
  }
  BB98 {
    [#"../option.rs" 52 4 52 15] none <- ([#"../option.rs" 52 11 52 15] Core_Option_Option_Type.C_None);
    [#"../option.rs" 53 12 53 27] _187 <- Borrow.borrow_mut some;
    [#"../option.rs" 53 12 53 27] some <-  ^ _187;
    [#"../option.rs" 53 12 53 27] _186 <- ([#"../option.rs" 53 12 53 27] replace0 _187 ([#"../option.rs" 53 25 53 26] [#"../option.rs" 53 25 53 26] (2 : int32)));
    _187 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB99
  }
  BB99 {
    [#"../option.rs" 53 12 53 36] _185 <- ([#"../option.rs" 53 12 53 36] unwrap0 _186);
    _186 <- any Core_Option_Option_Type.t_option int32;
    goto BB100
  }
  BB100 {
    switch ([#"../option.rs" 53 4 53 42] not ([#"../option.rs" 53 12 53 41] _185 = ([#"../option.rs" 53 40 53 41] [#"../option.rs" 53 40 53 41] (1 : int32))))
      | False -> goto BB102
      | True -> goto BB101
      end
  }
  BB101 {
    assert { [#"../option.rs" 53 4 53 42] false };
    absurd
  }
  BB102 {
    [#"../option.rs" 54 12 54 25] _192 <- ([#"../option.rs" 54 12 54 25] unwrap0 ([#"../option.rs" 54 12 54 16] some));
    goto BB103
  }
  BB103 {
    switch ([#"../option.rs" 54 4 54 31] not ([#"../option.rs" 54 12 54 30] _192 = ([#"../option.rs" 54 29 54 30] [#"../option.rs" 54 29 54 30] (2 : int32))))
      | False -> goto BB105
      | True -> goto BB104
      end
  }
  BB104 {
    assert { [#"../option.rs" 54 4 54 31] false };
    absurd
  }
  BB105 {
    [#"../option.rs" 55 12 55 27] _200 <- Borrow.borrow_mut some;
    [#"../option.rs" 55 12 55 27] some <-  ^ _200;
    [#"../option.rs" 55 12 55 27] _199 <- ([#"../option.rs" 55 12 55 27] replace0 _200 ([#"../option.rs" 55 25 55 26] [#"../option.rs" 55 25 55 26] (1 : int32)));
    _200 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB106
  }
  BB106 {
    [#"../option.rs" 55 12 55 36] _198 <- ([#"../option.rs" 55 12 55 36] unwrap0 _199);
    _199 <- any Core_Option_Option_Type.t_option int32;
    goto BB107
  }
  BB107 {
    switch ([#"../option.rs" 55 4 55 42] not ([#"../option.rs" 55 12 55 41] _198 = ([#"../option.rs" 55 40 55 41] [#"../option.rs" 55 40 55 41] (2 : int32))))
      | False -> goto BB109
      | True -> goto BB108
      end
  }
  BB108 {
    assert { [#"../option.rs" 55 4 55 42] false };
    absurd
  }
  BB109 {
    [#"../option.rs" 56 12 56 25] _205 <- ([#"../option.rs" 56 12 56 25] unwrap0 ([#"../option.rs" 56 12 56 16] some));
    goto BB110
  }
  BB110 {
    switch ([#"../option.rs" 56 4 56 31] not ([#"../option.rs" 56 12 56 30] _205 = ([#"../option.rs" 56 29 56 30] [#"../option.rs" 56 29 56 30] (1 : int32))))
      | False -> goto BB112
      | True -> goto BB111
      end
  }
  BB111 {
    assert { [#"../option.rs" 56 4 56 31] false };
    absurd
  }
  BB112 {
    [#"../option.rs" 59 12 59 36] _211 <- ([#"../option.rs" 59 12 59 36] unwrap_or_default0 ([#"../option.rs" 59 12 59 16] none));
    goto BB113
  }
  BB113 {
    switch ([#"../option.rs" 59 4 59 42] not ([#"../option.rs" 59 12 59 41] _211 = ([#"../option.rs" 59 40 59 41] [#"../option.rs" 59 40 59 41] (0 : int32))))
      | False -> goto BB115
      | True -> goto BB114
      end
  }
  BB114 {
    assert { [#"../option.rs" 59 4 59 42] false };
    absurd
  }
  BB115 {
    [#"../option.rs" 60 12 60 36] _217 <- ([#"../option.rs" 60 12 60 36] unwrap_or_default0 ([#"../option.rs" 60 12 60 16] some));
    goto BB116
  }
  BB116 {
    switch ([#"../option.rs" 60 4 60 42] not ([#"../option.rs" 60 12 60 41] _217 = ([#"../option.rs" 60 40 60 41] [#"../option.rs" 60 40 60 41] (1 : int32))))
      | False -> goto BB118
      | True -> goto BB117
      end
  }
  BB117 {
    assert { [#"../option.rs" 60 4 60 42] false };
    absurd
  }
  BB118 {
    [#"../option.rs" 63 12 63 25] _225 <- ([#"../option.rs" 63 12 63 25] as_ref0 ([#"../option.rs" 63 12 63 25] none));
    goto BB119
  }
  BB119 {
    [#"../option.rs" 63 12 63 34] _224 <- ([#"../option.rs" 63 12 63 34] copied0 _225);
    _225 <- any Core_Option_Option_Type.t_option int32;
    goto BB120
  }
  BB120 {
    [#"../option.rs" 63 12 63 44] _222 <- ([#"../option.rs" 63 12 63 44] is_none0 ([#"../option.rs" 63 12 63 44] _224));
    goto BB121
  }
  BB121 {
    switch ([#"../option.rs" 63 4 63 45] not _222)
      | False -> goto BB123
      | True -> goto BB122
      end
  }
  BB122 {
    assert { [#"../option.rs" 63 4 63 45] false };
    absurd
  }
  BB123 {
    [#"../option.rs" 64 12 64 25] _233 <- ([#"../option.rs" 64 12 64 25] as_ref0 ([#"../option.rs" 64 12 64 25] some));
    goto BB124
  }
  BB124 {
    [#"../option.rs" 64 12 64 34] _232 <- ([#"../option.rs" 64 12 64 34] copied0 _233);
    _233 <- any Core_Option_Option_Type.t_option int32;
    goto BB125
  }
  BB125 {
    [#"../option.rs" 64 12 64 43] _231 <- ([#"../option.rs" 64 12 64 43] unwrap0 _232);
    _232 <- any Core_Option_Option_Type.t_option int32;
    goto BB126
  }
  BB126 {
    switch ([#"../option.rs" 64 4 64 49] not ([#"../option.rs" 64 12 64 48] _231 = ([#"../option.rs" 64 47 64 48] [#"../option.rs" 64 47 64 48] (1 : int32))))
      | False -> goto BB128
      | True -> goto BB127
      end
  }
  BB127 {
    assert { [#"../option.rs" 64 4 64 49] false };
    absurd
  }
  BB128 {
    [#"../option.rs" 65 12 65 25] _242 <- Borrow.borrow_mut none;
    [#"../option.rs" 65 12 65 25] none <-  ^ _242;
    [#"../option.rs" 65 12 65 25] _241 <- ([#"../option.rs" 65 12 65 25] as_mut0 _242);
    _242 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB129
  }
  BB129 {
    [#"../option.rs" 65 12 65 34] _240 <- ([#"../option.rs" 65 12 65 34] copied1 _241);
    _241 <- any Core_Option_Option_Type.t_option (borrowed int32);
    goto BB130
  }
  BB130 {
    [#"../option.rs" 65 12 65 44] _238 <- ([#"../option.rs" 65 12 65 44] is_none0 ([#"../option.rs" 65 12 65 44] _240));
    goto BB131
  }
  BB131 {
    switch ([#"../option.rs" 65 4 65 45] not _238)
      | False -> goto BB133
      | True -> goto BB132
      end
  }
  BB132 {
    assert { [#"../option.rs" 65 4 65 45] false };
    absurd
  }
  BB133 {
    [#"../option.rs" 66 12 66 25] _250 <- Borrow.borrow_mut some;
    [#"../option.rs" 66 12 66 25] some <-  ^ _250;
    [#"../option.rs" 66 12 66 25] _249 <- ([#"../option.rs" 66 12 66 25] as_mut0 _250);
    _250 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB134
  }
  BB134 {
    [#"../option.rs" 66 12 66 34] _248 <- ([#"../option.rs" 66 12 66 34] copied1 _249);
    _249 <- any Core_Option_Option_Type.t_option (borrowed int32);
    goto BB135
  }
  BB135 {
    [#"../option.rs" 66 12 66 43] _247 <- ([#"../option.rs" 66 12 66 43] unwrap0 _248);
    _248 <- any Core_Option_Option_Type.t_option int32;
    goto BB136
  }
  BB136 {
    switch ([#"../option.rs" 66 4 66 49] not ([#"../option.rs" 66 12 66 48] _247 = ([#"../option.rs" 66 47 66 48] [#"../option.rs" 66 47 66 48] (1 : int32))))
      | False -> goto BB138
      | True -> goto BB137
      end
  }
  BB137 {
    assert { [#"../option.rs" 66 4 66 49] false };
    absurd
  }
  BB138 {
    [#"../option.rs" 68 12 68 25] _257 <- ([#"../option.rs" 68 12 68 25] as_ref0 ([#"../option.rs" 68 12 68 25] none));
    goto BB139
  }
  BB139 {
    [#"../option.rs" 68 12 68 34] _256 <- ([#"../option.rs" 68 12 68 34] cloned0 _257);
    _257 <- any Core_Option_Option_Type.t_option int32;
    goto BB140
  }
  BB140 {
    [#"../option.rs" 68 12 68 44] _254 <- ([#"../option.rs" 68 12 68 44] is_none0 ([#"../option.rs" 68 12 68 44] _256));
    goto BB141
  }
  BB141 {
    switch ([#"../option.rs" 68 4 68 45] not _254)
      | False -> goto BB143
      | True -> goto BB142
      end
  }
  BB142 {
    assert { [#"../option.rs" 68 4 68 45] false };
    absurd
  }
  BB143 {
    [#"../option.rs" 69 12 69 25] _265 <- ([#"../option.rs" 69 12 69 25] as_ref0 ([#"../option.rs" 69 12 69 25] some));
    goto BB144
  }
  BB144 {
    [#"../option.rs" 69 12 69 34] _264 <- ([#"../option.rs" 69 12 69 34] cloned0 _265);
    _265 <- any Core_Option_Option_Type.t_option int32;
    goto BB145
  }
  BB145 {
    [#"../option.rs" 69 12 69 43] _263 <- ([#"../option.rs" 69 12 69 43] unwrap0 _264);
    _264 <- any Core_Option_Option_Type.t_option int32;
    goto BB146
  }
  BB146 {
    switch ([#"../option.rs" 69 4 69 49] not ([#"../option.rs" 69 12 69 48] _263 = ([#"../option.rs" 69 47 69 48] [#"../option.rs" 69 47 69 48] (1 : int32))))
      | False -> goto BB148
      | True -> goto BB147
      end
  }
  BB147 {
    assert { [#"../option.rs" 69 4 69 49] false };
    absurd
  }
  BB148 {
    [#"../option.rs" 70 12 70 25] _274 <- Borrow.borrow_mut none;
    [#"../option.rs" 70 12 70 25] none <-  ^ _274;
    [#"../option.rs" 70 12 70 25] _273 <- ([#"../option.rs" 70 12 70 25] as_mut0 _274);
    _274 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB149
  }
  BB149 {
    [#"../option.rs" 70 12 70 34] _272 <- ([#"../option.rs" 70 12 70 34] cloned1 _273);
    _273 <- any Core_Option_Option_Type.t_option (borrowed int32);
    goto BB150
  }
  BB150 {
    [#"../option.rs" 70 12 70 44] _270 <- ([#"../option.rs" 70 12 70 44] is_none0 ([#"../option.rs" 70 12 70 44] _272));
    goto BB151
  }
  BB151 {
    switch ([#"../option.rs" 70 4 70 45] not _270)
      | False -> goto BB153
      | True -> goto BB152
      end
  }
  BB152 {
    assert { [#"../option.rs" 70 4 70 45] false };
    absurd
  }
  BB153 {
    [#"../option.rs" 71 12 71 25] _282 <- Borrow.borrow_mut some;
    [#"../option.rs" 71 12 71 25] some <-  ^ _282;
    [#"../option.rs" 71 12 71 25] _281 <- ([#"../option.rs" 71 12 71 25] as_mut0 _282);
    _282 <- any borrowed (Core_Option_Option_Type.t_option int32);
    goto BB154
  }
  BB154 {
    [#"../option.rs" 71 12 71 34] _280 <- ([#"../option.rs" 71 12 71 34] cloned1 _281);
    _281 <- any Core_Option_Option_Type.t_option (borrowed int32);
    goto BB155
  }
  BB155 {
    [#"../option.rs" 71 12 71 43] _279 <- ([#"../option.rs" 71 12 71 43] unwrap0 _280);
    _280 <- any Core_Option_Option_Type.t_option int32;
    goto BB156
  }
  BB156 {
    switch ([#"../option.rs" 71 4 71 49] not ([#"../option.rs" 71 12 71 48] _279 = ([#"../option.rs" 71 47 71 48] [#"../option.rs" 71 47 71 48] (1 : int32))))
      | False -> goto BB158
      | True -> goto BB157
      end
  }
  BB157 {
    assert { [#"../option.rs" 71 4 71 49] false };
    absurd
  }
  BB158 {
    [#"../option.rs" 74 35 74 39] opt <- ([#"../option.rs" 74 35 74 39] Core_Option_Option_Type.C_None);
    [#"../option.rs" 75 12 75 25] _289 <- ([#"../option.rs" 75 12 75 25] flatten0 ([#"../option.rs" 75 12 75 15] opt));
    goto BB159
  }
  BB159 {
    [#"../option.rs" 75 12 75 35] _287 <- ([#"../option.rs" 75 12 75 35] is_none0 ([#"../option.rs" 75 12 75 35] _289));
    goto BB160
  }
  BB160 {
    switch ([#"../option.rs" 75 4 75 36] not _287)
      | False -> goto BB162
      | True -> goto BB161
      end
  }
  BB161 {
    assert { [#"../option.rs" 75 4 75 36] false };
    absurd
  }
  BB162 {
    [#"../option.rs" 76 35 76 45] opt1 <- ([#"../option.rs" 76 35 76 45] Core_Option_Option_Type.C_Some ([#"../option.rs" 76 40 76 44] Core_Option_Option_Type.C_None));
    [#"../option.rs" 77 12 77 25] _298 <- ([#"../option.rs" 77 12 77 25] flatten0 ([#"../option.rs" 77 12 77 15] opt1));
    goto BB163
  }
  BB163 {
    [#"../option.rs" 77 12 77 35] _296 <- ([#"../option.rs" 77 12 77 35] is_none0 ([#"../option.rs" 77 12 77 35] _298));
    goto BB164
  }
  BB164 {
    switch ([#"../option.rs" 77 4 77 36] not _296)
      | False -> goto BB166
      | True -> goto BB165
      end
  }
  BB165 {
    assert { [#"../option.rs" 77 4 77 36] false };
    absurd
  }
  BB166 {
    [#"../option.rs" 78 35 78 48] opt2 <- ([#"../option.rs" 78 35 78 48] Core_Option_Option_Type.C_Some ([#"../option.rs" 78 40 78 47] Core_Option_Option_Type.C_Some ([#"../option.rs" 78 45 78 46] [#"../option.rs" 78 45 78 46] (1 : int32))));
    [#"../option.rs" 79 12 79 25] _307 <- ([#"../option.rs" 79 12 79 25] flatten0 ([#"../option.rs" 79 12 79 15] opt2));
    goto BB167
  }
  BB167 {
    [#"../option.rs" 79 12 79 34] _306 <- ([#"../option.rs" 79 12 79 34] unwrap0 _307);
    _307 <- any Core_Option_Option_Type.t_option int32;
    goto BB168
  }
  BB168 {
    switch ([#"../option.rs" 79 4 79 40] not ([#"../option.rs" 79 12 79 39] _306 = ([#"../option.rs" 79 38 79 39] [#"../option.rs" 79 38 79 39] (1 : int32))))
      | False -> goto BB170
      | True -> goto BB169
      end
  }
  BB169 {
    assert { [#"../option.rs" 79 4 79 40] false };
    absurd
  }
  BB170 {
    [#"../option.rs" 4 21 80 1] _0 <- ([#"../option.rs" 4 21 80 1] ());
    return _0
  }
  
end
