
module Trait_UsesCustom
  type a
  type b
  type t
  predicate invariant0 (self : t)
  val invariant0 (self : t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : t)
  val inv0 (_x : t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : t . inv0 x = true
  predicate resolve0 (self : t)
  val resolve0 (self : t) : bool
    ensures { result = resolve0 self }
    
  let rec cfg uses_custom [#"../trait.rs" 9 0 9 54] [@cfg:stackify] [@cfg:subregion_analysis] (_t : t) : ()
    requires {[#"../trait.rs" 9 48 9 50] inv0 _t}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _t : t = _t;
  {
    goto BB0
  }
  BB0 {
    [#"../trait.rs" 9 55 9 57] _0 <- ([#"../trait.rs" 9 55 9 57] ());
    assert { [@expl:type invariant] inv0 _t };
    assume { resolve0 _t };
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module Trait_UsesCustom2
  type a
  type b
  type t
  predicate invariant0 (self : t)
  val invariant0 (self : t) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : t)
  val inv0 (_x : t) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : t . inv0 x = true
  predicate resolve0 (self : t)
  val resolve0 (self : t) : bool
    ensures { result = resolve0 self }
    
  let rec cfg uses_custom2 [#"../trait.rs" 13 0 13 61] [@cfg:stackify] [@cfg:subregion_analysis] (_t : t) : ()
    requires {[#"../trait.rs" 13 55 13 57] inv0 _t}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _t : t = _t;
  {
    goto BB0
  }
  BB0 {
    [#"../trait.rs" 13 62 13 64] _0 <- ([#"../trait.rs" 13 62 13 64] ());
    assert { [@expl:type invariant] inv0 _t };
    assume { resolve0 _t };
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
