
module CreusotContracts_Resolve_Resolve_Resolve_Stub
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module Trait_UsesCustom_Interface
  type a
  type b
  type t
  val uses_custom [#"../trait.rs" 9 0 9 54] (_t : t) : ()
end
module Trait_UsesCustom
  type a
  type b
  type t
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve0 with
    type self = t
  let rec cfg uses_custom [#"../trait.rs" 9 0 9 54] [@cfg:stackify] [@cfg:subregion_analysis] (_t : t) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _t : t = _t;
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    assume { Resolve0.resolve _t };
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module Trait_UsesCustom2_Interface
  type a
  type b
  type t
  val uses_custom2 [#"../trait.rs" 13 0 13 61] (_t : t) : ()
end
module Trait_UsesCustom2
  type a
  type b
  type t
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve0 with
    type self = t
  let rec cfg uses_custom2 [#"../trait.rs" 13 0 13 61] [@cfg:stackify] [@cfg:subregion_analysis] (_t : t) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _t : t = _t;
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    assume { Resolve0.resolve _t };
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
