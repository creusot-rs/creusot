
module C07MutableCapture_TestFnmut_Closure1_Type
  use prelude.Int32
  use prelude.Int16
  use prelude.UInt32
  use prelude.Int
  use prelude.Borrow
  type c07mutablecapture_testfnmut_closure1  =
    | C07mutablecapture_testfnmut_closure1 (borrowed uint32)
    
  let rec c07mutablecapture_testfnmut_closure1 (input:c07mutablecapture_testfnmut_closure1) (ret  (x:borrowed uint32))= any
    [ good (x:borrowed uint32)-> {C07mutablecapture_testfnmut_closure1 x = input} (! ret {x})
    | bad (x:borrowed uint32)-> {C07mutablecapture_testfnmut_closure1 x <> input} {false} any ]
    
end
module C07MutableCapture_TestFnmut_Closure1
  use prelude.Int16
  use prelude.Int
  use prelude.UInt32
  use prelude.Borrow
  use prelude.Int32
  use C07MutableCapture_TestFnmut_Closure1_Type as C07MutableCapture_TestFnmut_Closure1_Type
  function field_0'0 [#"../07_mutable_capture.rs" 8 8 8 37] (self : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) : borrowed uint32
    
   =
    let C07MutableCapture_TestFnmut_Closure1_Type.C07mutablecapture_testfnmut_closure1 a = self in a
  let rec field_0'0 (self:C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (return'  (ret:borrowed uint32))= any
    [ return' (result:borrowed uint32)-> {result = field_0'0 self} (! return' {result}) ]
    
  predicate unnest'0 [#"../07_mutable_capture.rs" 8 8 8 37] (self : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (_2 : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1)
    
   =
     ^ field_0'0 _2 =  ^ field_0'0 self
  use prelude.UInt32
  use prelude.Intrinsic
  predicate resolve'0 (self : borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  let rec resolve'0 (self:borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'0 self} (! return' {result}) ]
    
  let rec c07mutablecapture_testfnmut_closure1 (_1:borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (return'  (ret:int32))= {[#"../07_mutable_capture.rs" 7 19 7 33] UInt32.to_int ( * field_0'0 ( * _1))
    < 1000000}
    (! bb0
    [ bb0 = s0
      [ s0 = C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1 { * _1}
          (fun (r'0:borrowed uint32) ->
            UInt32.add { * r'0} {[#"../07_mutable_capture.rs" 10 17 10 18] (1 : uint32)}
              (fun (_ret':uint32) ->
                C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1 { * _1}
                  (fun (l'0:borrowed uint32) ->
                    
                    [ &_1 <- { _1 with current = (C07MutableCapture_TestFnmut_Closure1_Type.C07mutablecapture_testfnmut_closure1 ({ l'0 with current = _ret' ; }) : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) ; } ]
                    
                    s1)))
      | s1 = -{resolve'0 _1}- s2
      | s2 =  [ &res1 <- [#"../07_mutable_capture.rs" 11 12 11 13] (5 : int32) ] s3
      | s3 =  [ &res <- res1 ] s4
      | s4 =  [ &_0 <- res ] s5
      | s5 = return' {_0} ]
       ]
    )
    [ & _0 : int32 = any_l () : int32
    | & _1 : borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1 = _1
    | & res : int32 = any_l () : int32
    | & res1 : int32 = any_l () : int32 ]
    
    [ return' (result:int32)-> {[@expl:postcondition] unnest'0 ( * _1) ( ^ _1)}
      {[@expl:postcondition] [#"../07_mutable_capture.rs" 8 18 8 35] UInt32.to_int ( * field_0'0 ( ^ _1))
      = UInt32.to_int ( * field_0'0 ( * _1)) + 1}
      (! return' {result}) ]
    
end
module C07MutableCapture_TestFnmut
  use prelude.Intrinsic
  use prelude.UInt32
  use prelude.Borrow
  use prelude.UInt32
  predicate resolve'2 (self : borrowed uint32) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  let rec resolve'2 (self:borrowed uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'2 self} (! return' {result}) ]
    
  use prelude.Int
  use prelude.Int32
  use prelude.Int16
  use C07MutableCapture_TestFnmut_Closure1_Type as C07MutableCapture_TestFnmut_Closure1_Type
  function field_0'0 [#"../07_mutable_capture.rs" 8 8 8 37] (self : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) : borrowed uint32
    
   =
    let C07MutableCapture_TestFnmut_Closure1_Type.C07mutablecapture_testfnmut_closure1 a = self in a
  let rec field_0'0 (self:C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (return'  (ret:borrowed uint32))= any
    [ return' (result:borrowed uint32)-> {result = field_0'0 self} (! return' {result}) ]
    
  predicate resolve'0 [#"../07_mutable_capture.rs" 8 8 8 37] (_1 : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1)
    
   =
    resolve'2 (field_0'0 _1)
  predicate unnest'0 [#"../07_mutable_capture.rs" 8 8 8 37] (self : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (_2 : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1)
    
   =
     ^ field_0'0 _2 =  ^ field_0'0 self
  predicate resolve'1 (self : borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) =
    [#"../../../../../creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  let rec resolve'1 (self:borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = resolve'1 self} (! return' {result}) ]
    
  let rec closure1'0 (_1:borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) (return'  (ret:int32))= {[@expl:precondition] [#"../07_mutable_capture.rs" 7 19 7 33] UInt32.to_int ( * field_0'0 ( * _1))
    < 1000000}
    any
    [ return' (result:int32)-> {unnest'0 ( * _1) ( ^ _1)}
      {[#"../07_mutable_capture.rs" 8 18 8 35] UInt32.to_int ( * field_0'0 ( ^ _1))
      = UInt32.to_int ( * field_0'0 ( * _1)) + 1}
      (! return' {result}) ]
    
  let rec test_fnmut (x:uint32) (return'  (ret:()))= {[#"../07_mutable_capture.rs" 4 11 4 24] UInt32.to_int x = 100000}
    (! bb0
    [ bb0 = s0
      [ s0 = Borrow.borrow_mut <uint32> {x} (fun (_ret':borrowed uint32) ->  [ &_4 <- _ret' ]  [ &x <-  ^ _4 ] s1)
      | s1 = 
        [ &c <- C07MutableCapture_TestFnmut_Closure1_Type.C07mutablecapture_testfnmut_closure1 _4 : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1 ]
        
        (any [ any_ (_any:borrowed uint32)-> (!  [ &_4 <- _any ] s2) ] )
      | s2 = Borrow.borrow_mut <C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1> {c}
          (fun (_ret':borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) ->
             [ &_6 <- _ret' ] 
             [ &c <-  ^ _6 ] 
            s3)
      | s3 =  [ &_7 <- () ] s4
      | s4 = closure1'0 {_6} (fun (_ret':int32) ->  [ &_5 <- _ret' ] s5)
      | s5 = bb1 ]
      
    | bb1 = s0
      [ s0 = Borrow.borrow_mut <C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1> {c}
          (fun (_ret':borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1) ->
             [ &_9 <- _ret' ] 
             [ &c <-  ^ _9 ] 
            s1)
      | s1 =  [ &_10 <- () ] s2
      | s2 = closure1'0 {_9} (fun (_ret':int32) ->  [ &_8 <- _ret' ] s3)
      | s3 = bb2 ]
      
    | bb2 = s0
      [ s0 = -{resolve'0 c}- s1
      | s1 = {[@expl:assertion] [#"../07_mutable_capture.rs" 17 20 17 33] UInt32.to_int x = 100002} s2
      | s2 =  [ &_0 <- [#"../07_mutable_capture.rs" 5 30 18 1] () ] s3
      | s3 = return' {_0} ]
       ]
    )
    [ & _0 : () = any_l () : ()
    | & x : uint32 = x
    | & c : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1 = any_l () : C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1
    | & _4 : borrowed uint32 = any_l () : borrowed uint32
    | & _5 : int32 = any_l () : int32
    | & _6 : borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1 = any_l () : borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1
    | & _7 : () = any_l () : ()
    | & _8 : int32 = any_l () : int32
    | & _9 : borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1 = any_l () : borrowed C07MutableCapture_TestFnmut_Closure1_Type.c07mutablecapture_testfnmut_closure1
    | & _10 : () = any_l () : () ]
     [ return' (result:())-> (! return' {result}) ] 
end
