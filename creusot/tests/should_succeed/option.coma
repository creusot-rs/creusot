
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
  
  function any_l (_ : 'b) : 'a
  
  let rec none < 't > (input:t_option 't) (ret  )= any
    [ good -> {C_None  = input} (! ret) | bad -> {C_None  <> input} {false} any ]
    
  
  let rec some < 't > (input:t_option 't) (ret  (field_0:'t))= any
    [ good (field_0:'t)-> {C_Some field_0 = input} (! ret {field_0})
    | bad (field_0:'t)-> {C_Some field_0 <> input} {false} any ]
    
end
module Option_TestOption
  let%span soption0 = "../option.rs" 6 37 6 38
  
  let%span soption1 = "../option.rs" 14 29 14 30
  
  let%span soption2 = "../option.rs" 19 27 19 28
  
  let%span soption3 = "../option.rs" 19 33 19 34
  
  let%span soption4 = "../option.rs" 20 27 20 28
  
  let%span soption5 = "../option.rs" 20 33 20 34
  
  let%span soption6 = "../option.rs" 24 30 24 31
  
  let%span soption7 = "../option.rs" 25 29 25 30
  
  let%span soption8 = "../option.rs" 26 30 26 31
  
  let%span soption9 = "../option.rs" 27 29 27 30
  
  let%span soption10 = "../option.rs" 30 39 30 40
  
  let%span soption11 = "../option.rs" 34 26 34 27
  
  let%span soption12 = "../option.rs" 36 26 36 27
  
  let%span soption13 = "../option.rs" 36 42 36 43
  
  let%span soption14 = "../option.rs" 39 25 39 26
  
  let%span soption15 = "../option.rs" 39 41 39 42
  
  let%span soption16 = "../option.rs" 40 38 40 39
  
  let%span soption17 = "../option.rs" 41 25 41 26
  
  let%span soption18 = "../option.rs" 41 41 41 42
  
  let%span soption19 = "../option.rs" 46 36 46 37
  
  let%span soption20 = "../option.rs" 48 16 48 17
  
  let%span soption21 = "../option.rs" 50 25 50 26
  
  let%span soption22 = "../option.rs" 51 29 51 30
  
  let%span soption23 = "../option.rs" 53 25 53 26
  
  let%span soption24 = "../option.rs" 53 40 53 41
  
  let%span soption25 = "../option.rs" 54 29 54 30
  
  let%span soption26 = "../option.rs" 55 25 55 26
  
  let%span soption27 = "../option.rs" 55 40 55 41
  
  let%span soption28 = "../option.rs" 56 29 56 30
  
  let%span soption29 = "../option.rs" 59 40 59 41
  
  let%span soption30 = "../option.rs" 60 40 60 41
  
  let%span soption31 = "../option.rs" 64 47 64 48
  
  let%span soption32 = "../option.rs" 66 47 66 48
  
  let%span soption33 = "../option.rs" 69 47 69 48
  
  let%span soption34 = "../option.rs" 71 47 71 48
  
  let%span soption35 = "../option.rs" 78 45 78 46
  
  let%span soption36 = "../option.rs" 79 38 79 39
  
  let%span soption37 = "../option.rs" 79 4 79 40
  
  let%span soption38 = "../option.rs" 77 4 77 36
  
  let%span soption39 = "../option.rs" 75 4 75 36
  
  let%span soption40 = "../option.rs" 71 4 71 49
  
  let%span soption41 = "../option.rs" 70 4 70 45
  
  let%span soption42 = "../option.rs" 69 4 69 49
  
  let%span soption43 = "../option.rs" 68 4 68 45
  
  let%span soption44 = "../option.rs" 66 4 66 49
  
  let%span soption45 = "../option.rs" 65 4 65 45
  
  let%span soption46 = "../option.rs" 64 4 64 49
  
  let%span soption47 = "../option.rs" 63 4 63 45
  
  let%span soption48 = "../option.rs" 60 4 60 42
  
  let%span soption49 = "../option.rs" 59 4 59 42
  
  let%span soption50 = "../option.rs" 56 4 56 31
  
  let%span soption51 = "../option.rs" 55 4 55 42
  
  let%span soption52 = "../option.rs" 54 4 54 31
  
  let%span soption53 = "../option.rs" 53 4 53 42
  
  let%span soption54 = "../option.rs" 51 4 51 31
  
  let%span soption55 = "../option.rs" 50 4 50 38
  
  let%span soption56 = "../option.rs" 47 4 47 27
  
  let%span soption57 = "../option.rs" 46 4 46 38
  
  let%span soption58 = "../option.rs" 45 4 45 27
  
  let%span soption59 = "../option.rs" 44 4 44 34
  
  let%span soption60 = "../option.rs" 41 4 41 43
  
  let%span soption61 = "../option.rs" 40 4 40 40
  
  let%span soption62 = "../option.rs" 39 4 39 43
  
  let%span soption63 = "../option.rs" 38 4 38 36
  
  let%span soption64 = "../option.rs" 36 4 36 44
  
  let%span soption65 = "../option.rs" 35 4 35 37
  
  let%span soption66 = "../option.rs" 34 4 34 40
  
  let%span soption67 = "../option.rs" 33 4 33 37
  
  let%span soption68 = "../option.rs" 30 4 30 41
  
  let%span soption69 = "../option.rs" 29 4 29 36
  
  let%span soption70 = "../option.rs" 27 4 27 31
  
  let%span soption71 = "../option.rs" 25 4 25 31
  
  let%span soption72 = "../option.rs" 23 4 23 36
  
  let%span soption73 = "../option.rs" 20 4 20 35
  
  let%span soption74 = "../option.rs" 19 4 19 35
  
  let%span soption75 = "../option.rs" 14 4 14 31
  
  let%span soption76 = "../option.rs" 11 4 11 46
  
  let%span soption77 = "../option.rs" 9 4 9 46
  
  let%span span78 = "../../../../creusot-contracts/src/invariant.rs" 8 8 8 12
  
  let%span span79 = "../../../../creusot-contracts/src/std/option.rs" 135 16 135 59
  
  let%span span80 = "../../../../creusot-contracts/src/std/option.rs" 30 0 141 1
  
  let%span span81 = "" 0 0 0 0
  
  let%span span82 = "../../../../creusot-contracts/src/resolve.rs" 26 20 26 34
  
  let%span span83 = "" 0 0 0 0
  
  let%span span84 = "../../../../creusot-contracts/src/std/option.rs" 123 16 123 59
  
  let%span span85 = "" 0 0 0 0
  
  let%span span86 = "" 0 0 0 0
  
  let%span span87 = "../../../../creusot-contracts/src/std/option.rs" 105 16 105 59
  
  let%span span88 = "" 0 0 0 0
  
  let%span span89 = "" 0 0 0 0
  
  let%span span90 = "../../../../creusot-contracts/src/std/option.rs" 114 16 114 59
  
  let%span span91 = "" 0 0 0 0
  
  let%span span92 = "" 0 0 0 0
  
  let%span span93 = "../../../../creusot-contracts/src/std/option.rs" 99 16 99 59
  
  let%span span94 = "" 0 0 0 0
  
  let%span span95 = "../../../../creusot-contracts/src/std/num.rs" 30 28 30 32
  
  let%span span96 = "" 0 0 0 0
  
  let%span span97 = "../../../../creusot-contracts/src/std/option.rs" 90 16 90 64
  
  let%span span98 = "" 0 0 0 0
  
  let%span span99 = "" 0 0 0 0
  
  let%span span100 = "" 0 0 0 0
  
  let%span span101 = "" 0 0 0 0
  
  let%span span102 = "" 0 0 0 0
  
  let%span span103 = "" 0 0 0 0
  
  let%span span104 = "" 0 0 0 0
  
  let%span span105 = "" 0 0 0 0
  
  let%span span106 = "../../../../creusot-contracts/src/std/option.rs" 78 16 78 59
  
  let%span span107 = "" 0 0 0 0
  
  let%span span108 = "" 0 0 0 0
  
  let%span span109 = "" 0 0 0 0
  
  let%span span110 = "../../../../creusot-contracts/src/std/option.rs" 73 16 73 59
  
  let%span span111 = "" 0 0 0 0
  
  let%span span112 = "" 0 0 0 0
  
  let%span span113 = "" 0 0 0 0
  
  let%span span114 = "" 0 0 0 0
  
  let%span span115 = "../../../../creusot-contracts/src/std/option.rs" 39 26 39 51
  
  let%span span116 = "" 0 0 0 0
  
  let%span span117 = "../../../../creusot-contracts/src/std/option.rs" 66 16 66 60
  
  let%span span118 = "../../../../creusot-contracts/src/std/option.rs" 67 16 69 18
  
  let%span span119 = "" 0 0 0 0
  
  let%span span120 = "" 0 0 0 0
  
  let%span span121 = "../../../../creusot-contracts/src/std/option.rs" 58 16 58 77
  
  let%span span122 = "../../../../creusot-contracts/src/std/option.rs" 59 16 62 18
  
  let%span span123 = "" 0 0 0 0
  
  let%span span124 = "" 0 0 0 0
  
  let%span span125 = "" 0 0 0 0
  
  let%span span126 = "../../../../creusot-contracts/src/std/option.rs" 53 16 53 62
  
  let%span span127 = "" 0 0 0 0
  
  let%span span128 = "" 0 0 0 0
  
  let%span span129 = "../../../../creusot-contracts/src/std/option.rs" 35 26 35 51
  
  use prelude.prelude.Int32
  
  use Core_Option_Option_Type as Option'0
  
  predicate invariant'9 (self : Option'0.t_option int32) =
    [%#span78] true
  
  predicate inv'9 (_x : Option'0.t_option int32)
  
  axiom inv'9 : forall x : Option'0.t_option int32 . inv'9 x = true
  
  predicate invariant'8 (self : Option'0.t_option int32) =
    [%#span78] true
  
  predicate inv'8 (_x : Option'0.t_option int32)
  
  axiom inv'8 : forall x : Option'0.t_option int32 . inv'8 x = true
  
  predicate invariant'7 (self : int32) =
    [%#span78] true
  
  predicate inv'7 (_x : int32)
  
  axiom inv'7 : forall x : int32 . inv'7 x = true
  
  use prelude.prelude.Borrow
  
  predicate invariant'6 (self : Option'0.t_option (borrowed int32)) =
    [%#span78] true
  
  predicate inv'6 (_x : Option'0.t_option (borrowed int32))
  
  axiom inv'6 : forall x : Option'0.t_option (borrowed int32) . inv'6 x = true
  
  predicate invariant'5 (self : Option'0.t_option (borrowed int32)) =
    [%#span78] true
  
  predicate inv'5 (_x : Option'0.t_option (borrowed int32))
  
  axiom inv'5 : forall x : Option'0.t_option (borrowed int32) . inv'5 x = true
  
  predicate invariant'4 (self : borrowed int32) =
    [%#span78] true
  
  predicate inv'4 (_x : borrowed int32)
  
  axiom inv'4 : forall x : borrowed int32 . inv'4 x = true
  
  predicate invariant'3 (self : borrowed (Option'0.t_option int32)) =
    [%#span78] true
  
  predicate inv'3 (_x : borrowed (Option'0.t_option int32))
  
  axiom inv'3 : forall x : borrowed (Option'0.t_option int32) . inv'3 x = true
  
  predicate invariant'2 (self : int32) =
    [%#span78] true
  
  predicate inv'2 (_x : int32)
  
  axiom inv'2 : forall x : int32 . inv'2 x = true
  
  predicate invariant'1 (self : Option'0.t_option int32) =
    [%#span78] true
  
  predicate inv'1 (_x : Option'0.t_option int32)
  
  axiom inv'1 : forall x : Option'0.t_option int32 . inv'1 x = true
  
  predicate invariant'0 (self : Option'0.t_option int32) =
    [%#span78] true
  
  predicate inv'0 (_x : Option'0.t_option int32)
  
  axiom inv'0 : forall x : Option'0.t_option int32 . inv'0 x = true
  
  use prelude.prelude.Intrinsic
  
  let rec flatten'0 (self:Option'0.t_option (Option'0.t_option int32)) (return'  (ret:Option'0.t_option int32))= any
    [ return' (result:Option'0.t_option int32)-> {[%#span81] inv'1 result}
      {[%#span80] self = Option'0.C_None \/ self = Option'0.C_Some result}
      {[%#span79] self = Option'0.C_None  -> result = Option'0.C_None}
      (! return' {result}) ]
    
  
  predicate resolve'0 (self : borrowed int32) =
    [%#span82]  ^ self =  * self
  
  let rec cloned'1 (self:Option'0.t_option (borrowed int32)) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span83] inv'5 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span85] inv'1 result}
      {[%#span80] self = Option'0.C_None
      \/ (exists t : borrowed int32 . inv'4 t
      /\ self = Option'0.C_Some t /\ result = Option'0.C_Some ( * t) /\ resolve'0 t)}
      {[%#span84] self = Option'0.C_None  -> result = Option'0.C_None}
      (! return' {result}) ]
    
  
  let rec cloned'0 (self:Option'0.t_option int32) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span86] inv'8 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span88] inv'1 result}
      {[%#span80] self = Option'0.C_None
      \/ (exists t : int32 . inv'7 t /\ self = Option'0.C_Some t /\ result = Option'0.C_Some t)}
      {[%#span87] self = Option'0.C_None  -> result = Option'0.C_None}
      (! return' {result}) ]
    
  
  let rec copied'1 (self:Option'0.t_option (borrowed int32)) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span89] inv'5 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span91] inv'1 result}
      {[%#span80] self = Option'0.C_None
      \/ (exists t : borrowed int32 . inv'4 t
      /\ self = Option'0.C_Some t /\ result = Option'0.C_Some ( * t) /\ resolve'0 t)}
      {[%#span90] self = Option'0.C_None  -> result = Option'0.C_None}
      (! return' {result}) ]
    
  
  let rec copied'0 (self:Option'0.t_option int32) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span92] inv'8 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span94] inv'1 result}
      {[%#span80] self = Option'0.C_None
      \/ (exists t : int32 . inv'7 t /\ self = Option'0.C_Some t /\ result = Option'0.C_Some t)}
      {[%#span93] self = Option'0.C_None  -> result = Option'0.C_None}
      (! return' {result}) ]
    
  
  use prelude.prelude.Int
  
  predicate is_default'0 (self : int32) =
    [%#span95] self = (0 : int32)
  
  let rec unwrap_or_default'0 (self:Option'0.t_option int32) (return'  (ret:int32))= {[@expl:precondition] [%#span96] inv'1 self}
    any
    [ return' (result:int32)-> {[%#span98] inv'2 result}
      {[%#span80] self = Option'0.C_None \/ self = Option'0.C_Some result}
      {[%#span97] self = Option'0.C_None  -> is_default'0 result}
      (! return' {result}) ]
    
  
  let rec replace'0 (self:borrowed (Option'0.t_option int32)) (value:int32) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span100] inv'2 value}
    {[@expl:precondition] [%#span99] inv'3 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span101] inv'1 result}
      {[%#span80] result =  * self /\  ^ self = Option'0.C_Some value}
      (! return' {result}) ]
    
  
  let rec take'0 (self:borrowed (Option'0.t_option int32)) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span102] inv'3 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span103] inv'1 result}
      {[%#span80] result =  * self /\  ^ self = Option'0.C_None}
      (! return' {result}) ]
    
  
  let rec or'0 (self:Option'0.t_option int32) (optb:Option'0.t_option int32) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span105] inv'1 optb}
    {[@expl:precondition] [%#span104] inv'1 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span107] inv'1 result}
      {[%#span80] self = Option'0.C_None \/ result = self}
      {[%#span106] self = Option'0.C_None  -> result = optb}
      (! return' {result}) ]
    
  
  let rec and'0 (self:Option'0.t_option int32) (optb:Option'0.t_option int32) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span109] inv'1 optb}
    {[@expl:precondition] [%#span108] inv'1 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span111] inv'1 result}
      {[%#span80] self = Option'0.C_None \/ result = optb}
      {[%#span110] self = Option'0.C_None  -> result = Option'0.C_None}
      (! return' {result}) ]
    
  
  let rec unwrap'2 (self:Option'0.t_option int32) (return'  (ret:int32))= {[@expl:precondition] [%#span112] inv'8 self}
    {[@expl:precondition] [%#span80] self <> Option'0.C_None}
    any
    [ return' (result:int32)-> {[%#span113] inv'7 result}
      {[%#span80] Option'0.C_Some result = self}
      (! return' {result}) ]
    
  
  let rec is_none'2 (self:Option'0.t_option int32) (return'  (ret:bool))= {[@expl:precondition] [%#span114] inv'9 self}
    any [ return' (result:bool)-> {[%#span115] result = (self = Option'0.C_None)} (! return' {result}) ] 
  
  let rec as_ref'0 (self:Option'0.t_option int32) (return'  (ret:Option'0.t_option int32))= {[@expl:precondition] [%#span116] inv'0 self}
    any
    [ return' (result:Option'0.t_option int32)-> {[%#span119] inv'8 result}
      {[%#span118] self = Option'0.C_None
      \/ (exists r : int32 . inv'7 r /\ result = Option'0.C_Some r /\ self = Option'0.C_Some r)}
      {[%#span117] self = Option'0.C_None  -> result = Option'0.C_None}
      (! return' {result}) ]
    
  
  let rec unwrap'1 (self:Option'0.t_option (borrowed int32)) (return'  (ret:borrowed int32))= {[@expl:precondition] [%#span112] inv'5 self}
    {[@expl:precondition] [%#span80] self <> Option'0.C_None}
    any
    [ return' (result:borrowed int32)-> {[%#span113] inv'4 result}
      {[%#span80] Option'0.C_Some result = self}
      (! return' {result}) ]
    
  
  let rec is_none'1 (self:Option'0.t_option (borrowed int32)) (return'  (ret:bool))= {[@expl:precondition] [%#span114] inv'6 self}
    any [ return' (result:bool)-> {[%#span115] result = (self = Option'0.C_None)} (! return' {result}) ] 
  
  let rec as_mut'0 (self:borrowed (Option'0.t_option int32)) (return'  (ret:Option'0.t_option (borrowed int32)))= {[@expl:precondition] [%#span120] inv'3 self}
    any
    [ return' (result:Option'0.t_option (borrowed int32))-> {[%#span123] inv'5 result}
      {[%#span122]  * self = Option'0.C_None
      \/ (exists r : borrowed int32 . inv'4 r
      /\ result = Option'0.C_Some r /\  * self = Option'0.C_Some ( * r) /\  ^ self = Option'0.C_Some ( ^ r))}
      {[%#span121]  * self = Option'0.C_None  -> result = Option'0.C_None /\  ^ self = Option'0.C_None}
      (! return' {result}) ]
    
  
  let rec unwrap_or'0 (self:Option'0.t_option int32) (default:int32) (return'  (ret:int32))= {[@expl:precondition] [%#span125] inv'2 default}
    {[@expl:precondition] [%#span124] inv'1 self}
    any
    [ return' (result:int32)-> {[%#span127] inv'2 result}
      {[%#span80] self = Option'0.C_None \/ self = Option'0.C_Some result}
      {[%#span126] self = Option'0.C_None  -> result = default}
      (! return' {result}) ]
    
  
  let rec unwrap'0 (self:Option'0.t_option int32) (return'  (ret:int32))= {[@expl:precondition] [%#span112] inv'1 self}
    {[@expl:precondition] [%#span80] self <> Option'0.C_None}
    any
    [ return' (result:int32)-> {[%#span113] inv'2 result}
      {[%#span80] Option'0.C_Some result = self}
      (! return' {result}) ]
    
  
  let rec is_none'0 (self:Option'0.t_option int32) (return'  (ret:bool))= {[@expl:precondition] [%#span114] inv'0 self}
    any [ return' (result:bool)-> {[%#span115] result = (self = Option'0.C_None)} (! return' {result}) ] 
  
  let rec is_some'0 (self:Option'0.t_option int32) (return'  (ret:bool))= {[@expl:precondition] [%#span128] inv'0 self}
    any [ return' (result:bool)-> {[%#span129] result = (self <> Option'0.C_None)} (! return' {result}) ] 
  
  let rec test_option (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 =  [ &none <- Option'0.C_None ] s1
      | s1 =  [ &some <- Option'0.C_Some ([%#soption0] (1 : int32)) ] s2
      | s2 = is_some'0 {some} (fun (_ret':bool) ->  [ &_4 <- _ret' ] s3)
      | s3 = bb1 ]
      
    | bb1 = any [ br0 -> {_4 = false} (! bb6) | br1 -> {_4} (! bb2) ] 
    | bb2 = s0 [ s0 = is_some'0 {none} (fun (_ret':bool) ->  [ &_6 <- _ret' ] s1) | s1 = bb3 ] 
    | bb3 = any [ br0 -> {_6 = false} (! bb5) | br1 -> {_6} (! bb4) ] 
    | bb4 = bb7
    | bb5 = s0 [ s0 = is_none'0 {none} (fun (_ret':bool) ->  [ &_10 <- _ret' ] s1) | s1 = bb8 ] 
    | bb8 = any [ br0 -> {_10 = false} (! bb13) | br1 -> {_10} (! bb9) ] 
    | bb9 = s0 [ s0 = is_none'0 {some} (fun (_ret':bool) ->  [ &_12 <- _ret' ] s1) | s1 = bb10 ] 
    | bb10 = any [ br0 -> {_12 = false} (! bb12) | br1 -> {_12} (! bb11) ] 
    | bb11 = bb14
    | bb12 = s0 [ s0 = unwrap'0 {some} (fun (_ret':int32) ->  [ &_17 <- _ret' ] s1) | s1 = bb15 ] 
    | bb15 = s0
      [ s0 = Int32.eq {_17} {[%#soption1] (1 : int32)}
          (fun (_ret':bool) ->  [ &_16 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_17 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_16 = false} (! bb17) | br1 -> {_16} (! bb16) ]  ]
      
    | bb16 = s0
      [ s0 = unwrap_or'0 {some} {[%#soption2] (2 : int32)} (fun (_ret':int32) ->  [ &_22 <- _ret' ] s1) | s1 = bb18 ]
      
    | bb18 = s0
      [ s0 = Int32.eq {_22} {[%#soption3] (1 : int32)}
          (fun (_ret':bool) ->  [ &_21 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_22 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_21 = false} (! bb20) | br1 -> {_21} (! bb19) ]  ]
      
    | bb19 = s0
      [ s0 = unwrap_or'0 {none} {[%#soption4] (2 : int32)} (fun (_ret':int32) ->  [ &_27 <- _ret' ] s1) | s1 = bb21 ]
      
    | bb21 = s0
      [ s0 = Int32.eq {_27} {[%#soption5] (2 : int32)}
          (fun (_ret':bool) ->  [ &_26 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_27 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_26 = false} (! bb23) | br1 -> {_26} (! bb22) ]  ]
      
    | bb22 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {none}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_34 <- _ret' ]  [ &none <-  ^ _34 ] s1)
      | s1 = as_mut'0 {_34} (fun (_ret':Option'0.t_option (borrowed int32)) ->  [ &_33 <- _ret' ] s2)
      | s2 = bb24 ]
      
    | bb24 = s0 [ s0 = is_none'1 {_33} (fun (_ret':bool) ->  [ &_31 <- _ret' ] s1) | s1 = bb25 ] 
    | bb25 = any [ br0 -> {_31 = false} (! bb27) | br1 -> {_31} (! bb26) ] 
    | bb26 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {some}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_38 <- _ret' ]  [ &some <-  ^ _38 ] s1)
      | s1 = as_mut'0 {_38} (fun (_ret':Option'0.t_option (borrowed int32)) ->  [ &_37 <- _ret' ] s2)
      | s2 = bb28 ]
      
    | bb28 = s0 [ s0 = unwrap'1 {_37} (fun (_ret':borrowed int32) ->  [ &_36 <- _ret' ] s1) | s1 = bb29 ] 
    | bb29 = s0
      [ s0 =  [ &_36 <- { _36 with current = ([%#soption6] (2 : int32)) ; } ] s1
      | s1 = -{resolve'0 _36}- s2
      | s2 = unwrap'0 {some} (fun (_ret':int32) ->  [ &_41 <- _ret' ] s3)
      | s3 = bb30 ]
      
    | bb30 = s0
      [ s0 = Int32.eq {_41} {[%#soption7] (2 : int32)}
          (fun (_ret':bool) ->  [ &_40 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_41 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_40 = false} (! bb32) | br1 -> {_40} (! bb31) ]  ]
      
    | bb31 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {some}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_46 <- _ret' ]  [ &some <-  ^ _46 ] s1)
      | s1 = as_mut'0 {_46} (fun (_ret':Option'0.t_option (borrowed int32)) ->  [ &_45 <- _ret' ] s2)
      | s2 = bb33 ]
      
    | bb33 = s0 [ s0 = unwrap'1 {_45} (fun (_ret':borrowed int32) ->  [ &_44 <- _ret' ] s1) | s1 = bb34 ] 
    | bb34 = s0
      [ s0 =  [ &_44 <- { _44 with current = ([%#soption8] (1 : int32)) ; } ] s1
      | s1 = -{resolve'0 _44}- s2
      | s2 = unwrap'0 {some} (fun (_ret':int32) ->  [ &_49 <- _ret' ] s3)
      | s3 = bb35 ]
      
    | bb35 = s0
      [ s0 = Int32.eq {_49} {[%#soption9] (1 : int32)}
          (fun (_ret':bool) ->  [ &_48 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_49 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_48 = false} (! bb37) | br1 -> {_48} (! bb36) ]  ]
      
    | bb36 = s0 [ s0 = as_ref'0 {none} (fun (_ret':Option'0.t_option int32) ->  [ &_55 <- _ret' ] s1) | s1 = bb38 ] 
    | bb38 = s0 [ s0 = is_none'2 {_55} (fun (_ret':bool) ->  [ &_53 <- _ret' ] s1) | s1 = bb39 ] 
    | bb39 = any [ br0 -> {_53 = false} (! bb41) | br1 -> {_53} (! bb40) ] 
    | bb40 = s0 [ s0 = as_ref'0 {some} (fun (_ret':Option'0.t_option int32) ->  [ &_62 <- _ret' ] s1) | s1 = bb42 ] 
    | bb42 = s0 [ s0 = unwrap'2 {_62} (fun (_ret':int32) ->  [ &_61 <- _ret' ] s1) | s1 = bb43 ] 
    | bb43 = s0
      [ s0 = Int32.eq {_61} {[%#soption10] (1 : int32)} (fun (_ret':bool) ->  [ &_59 <- _ret' ] s1)
      | s1 = any [ br0 -> {_59 = false} (! bb45) | br1 -> {_59} (! bb44) ]  ]
      
    | bb44 = s0 [ s0 = and'0 {none} {none} (fun (_ret':Option'0.t_option int32) ->  [ &_68 <- _ret' ] s1) | s1 = bb46 ] 
    | bb46 = s0 [ s0 = is_none'0 {_68} (fun (_ret':bool) ->  [ &_66 <- _ret' ] s1) | s1 = bb47 ] 
    | bb47 = any [ br0 -> {_66 = false} (! bb49) | br1 -> {_66} (! bb48) ] 
    | bb48 = s0
      [ s0 =  [ &_77 <- Option'0.C_Some ([%#soption11] (2 : int32)) ] s1
      | s1 = and'0 {none} {_77} (fun (_ret':Option'0.t_option int32) ->  [ &_75 <- _ret' ] s2)
      | s2 = bb50 ]
      
    | bb50 = s0 [ s0 = is_none'0 {_75} (fun (_ret':bool) ->  [ &_73 <- _ret' ] s1) | s1 = bb51 ] 
    | bb51 = any [ br0 -> {_73 = false} (! bb53) | br1 -> {_73} (! bb52) ] 
    | bb52 = s0 [ s0 = and'0 {some} {none} (fun (_ret':Option'0.t_option int32) ->  [ &_82 <- _ret' ] s1) | s1 = bb54 ] 
    | bb54 = s0 [ s0 = is_none'0 {_82} (fun (_ret':bool) ->  [ &_80 <- _ret' ] s1) | s1 = bb55 ] 
    | bb55 = any [ br0 -> {_80 = false} (! bb57) | br1 -> {_80} (! bb56) ] 
    | bb56 = s0
      [ s0 =  [ &_91 <- Option'0.C_Some ([%#soption12] (2 : int32)) ] s1
      | s1 = and'0 {some} {_91} (fun (_ret':Option'0.t_option int32) ->  [ &_89 <- _ret' ] s2)
      | s2 = bb58 ]
      
    | bb58 = s0 [ s0 = unwrap'0 {_89} (fun (_ret':int32) ->  [ &_88 <- _ret' ] s1) | s1 = bb59 ] 
    | bb59 = s0
      [ s0 = Int32.eq {_88} {[%#soption13] (2 : int32)}
          (fun (_ret':bool) ->  [ &_87 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_88 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_87 = false} (! bb61) | br1 -> {_87} (! bb60) ]  ]
      
    | bb60 = s0 [ s0 = or'0 {none} {none} (fun (_ret':Option'0.t_option int32) ->  [ &_96 <- _ret' ] s1) | s1 = bb62 ] 
    | bb62 = s0 [ s0 = is_none'0 {_96} (fun (_ret':bool) ->  [ &_94 <- _ret' ] s1) | s1 = bb63 ] 
    | bb63 = any [ br0 -> {_94 = false} (! bb65) | br1 -> {_94} (! bb64) ] 
    | bb64 = s0
      [ s0 =  [ &_105 <- Option'0.C_Some ([%#soption14] (2 : int32)) ] s1
      | s1 = or'0 {none} {_105} (fun (_ret':Option'0.t_option int32) ->  [ &_103 <- _ret' ] s2)
      | s2 = bb66 ]
      
    | bb66 = s0 [ s0 = unwrap'0 {_103} (fun (_ret':int32) ->  [ &_102 <- _ret' ] s1) | s1 = bb67 ] 
    | bb67 = s0
      [ s0 = Int32.eq {_102} {[%#soption15] (2 : int32)}
          (fun (_ret':bool) ->  [ &_101 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_102 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_101 = false} (! bb69) | br1 -> {_101} (! bb68) ]  ]
      
    | bb68 = s0 [ s0 = or'0 {some} {none} (fun (_ret':Option'0.t_option int32) ->  [ &_110 <- _ret' ] s1) | s1 = bb70 ] 
    | bb70 = s0 [ s0 = unwrap'0 {_110} (fun (_ret':int32) ->  [ &_109 <- _ret' ] s1) | s1 = bb71 ] 
    | bb71 = s0
      [ s0 = Int32.eq {_109} {[%#soption16] (1 : int32)}
          (fun (_ret':bool) ->  [ &_108 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_109 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_108 = false} (! bb73) | br1 -> {_108} (! bb72) ]  ]
      
    | bb72 = s0
      [ s0 =  [ &_119 <- Option'0.C_Some ([%#soption17] (2 : int32)) ] s1
      | s1 = or'0 {some} {_119} (fun (_ret':Option'0.t_option int32) ->  [ &_117 <- _ret' ] s2)
      | s2 = bb74 ]
      
    | bb74 = s0 [ s0 = unwrap'0 {_117} (fun (_ret':int32) ->  [ &_116 <- _ret' ] s1) | s1 = bb75 ] 
    | bb75 = s0
      [ s0 = Int32.eq {_116} {[%#soption18] (1 : int32)}
          (fun (_ret':bool) ->  [ &_115 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_116 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_115 = false} (! bb77) | br1 -> {_115} (! bb76) ]  ]
      
    | bb76 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {none}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_125 <- _ret' ]  [ &none <-  ^ _125 ] s1)
      | s1 = take'0 {_125} (fun (_ret':Option'0.t_option int32) ->  [ &_124 <- _ret' ] s2)
      | s2 = bb78 ]
      
    | bb78 = s0 [ s0 = is_none'0 {_124} (fun (_ret':bool) ->  [ &_122 <- _ret' ] s1) | s1 = bb79 ] 
    | bb79 = any [ br0 -> {_122 = false} (! bb81) | br1 -> {_122} (! bb80) ] 
    | bb80 = s0 [ s0 = is_none'0 {none} (fun (_ret':bool) ->  [ &_128 <- _ret' ] s1) | s1 = bb82 ] 
    | bb82 = any [ br0 -> {_128 = false} (! bb84) | br1 -> {_128} (! bb83) ] 
    | bb83 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {some}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_135 <- _ret' ]  [ &some <-  ^ _135 ] s1)
      | s1 = take'0 {_135} (fun (_ret':Option'0.t_option int32) ->  [ &_134 <- _ret' ] s2)
      | s2 = bb85 ]
      
    | bb85 = s0 [ s0 = unwrap'0 {_134} (fun (_ret':int32) ->  [ &_133 <- _ret' ] s1) | s1 = bb86 ] 
    | bb86 = s0
      [ s0 = Int32.eq {_133} {[%#soption19] (1 : int32)}
          (fun (_ret':bool) ->  [ &_132 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_133 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_132 = false} (! bb88) | br1 -> {_132} (! bb87) ]  ]
      
    | bb87 = s0 [ s0 = is_none'0 {some} (fun (_ret':bool) ->  [ &_138 <- _ret' ] s1) | s1 = bb89 ] 
    | bb89 = any [ br0 -> {_138 = false} (! bb91) | br1 -> {_138} (! bb90) ] 
    | bb90 = s0
      [ s0 =  [ &_141 <- Option'0.C_Some ([%#soption20] (1 : int32)) ] s1
      | s1 =  [ &some <- _141 ] (any [ any_ (_any:Option'0.t_option int32)-> (!  [ &_141 <- _any ] s2) ] )
      | s2 = Borrow.borrow_mut <Option'0.t_option int32> {none}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_146 <- _ret' ]  [ &none <-  ^ _146 ] s3)
      | s3 = replace'0 {_146} {[%#soption21] (2 : int32)}
          (fun (_ret':Option'0.t_option int32) ->  [ &_145 <- _ret' ] s4)
      | s4 = bb92 ]
      
    | bb92 = s0 [ s0 = is_none'0 {_145} (fun (_ret':bool) ->  [ &_143 <- _ret' ] s1) | s1 = bb93 ] 
    | bb93 = any [ br0 -> {_143 = false} (! bb95) | br1 -> {_143} (! bb94) ] 
    | bb94 = s0 [ s0 = unwrap'0 {none} (fun (_ret':int32) ->  [ &_150 <- _ret' ] s1) | s1 = bb96 ] 
    | bb96 = s0
      [ s0 = Int32.eq {_150} {[%#soption22] (2 : int32)}
          (fun (_ret':bool) ->  [ &_149 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_150 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_149 = false} (! bb98) | br1 -> {_149} (! bb97) ]  ]
      
    | bb97 = s0
      [ s0 =  [ &_153 <- Option'0.C_None ] s1
      | s1 =  [ &none <- _153 ] (any [ any_ (_any:Option'0.t_option int32)-> (!  [ &_153 <- _any ] s2) ] )
      | s2 = Borrow.borrow_mut <Option'0.t_option int32> {some}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_158 <- _ret' ]  [ &some <-  ^ _158 ] s3)
      | s3 = replace'0 {_158} {[%#soption23] (2 : int32)}
          (fun (_ret':Option'0.t_option int32) ->  [ &_157 <- _ret' ] s4)
      | s4 = bb99 ]
      
    | bb99 = s0 [ s0 = unwrap'0 {_157} (fun (_ret':int32) ->  [ &_156 <- _ret' ] s1) | s1 = bb100 ] 
    | bb100 = s0
      [ s0 = Int32.eq {_156} {[%#soption24] (1 : int32)}
          (fun (_ret':bool) ->  [ &_155 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_156 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_155 = false} (! bb102) | br1 -> {_155} (! bb101) ]  ]
      
    | bb101 = s0 [ s0 = unwrap'0 {some} (fun (_ret':int32) ->  [ &_162 <- _ret' ] s1) | s1 = bb103 ] 
    | bb103 = s0
      [ s0 = Int32.eq {_162} {[%#soption25] (2 : int32)}
          (fun (_ret':bool) ->  [ &_161 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_162 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_161 = false} (! bb105) | br1 -> {_161} (! bb104) ]  ]
      
    | bb104 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {some}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_169 <- _ret' ]  [ &some <-  ^ _169 ] s1)
      | s1 = replace'0 {_169} {[%#soption26] (1 : int32)}
          (fun (_ret':Option'0.t_option int32) ->  [ &_168 <- _ret' ] s2)
      | s2 = bb106 ]
      
    | bb106 = s0 [ s0 = unwrap'0 {_168} (fun (_ret':int32) ->  [ &_167 <- _ret' ] s1) | s1 = bb107 ] 
    | bb107 = s0
      [ s0 = Int32.eq {_167} {[%#soption27] (2 : int32)}
          (fun (_ret':bool) ->  [ &_166 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_167 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_166 = false} (! bb109) | br1 -> {_166} (! bb108) ]  ]
      
    | bb108 = s0 [ s0 = unwrap'0 {some} (fun (_ret':int32) ->  [ &_173 <- _ret' ] s1) | s1 = bb110 ] 
    | bb110 = s0
      [ s0 = Int32.eq {_173} {[%#soption28] (1 : int32)}
          (fun (_ret':bool) ->  [ &_172 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_173 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_172 = false} (! bb112) | br1 -> {_172} (! bb111) ]  ]
      
    | bb111 = s0 [ s0 = unwrap_or_default'0 {none} (fun (_ret':int32) ->  [ &_178 <- _ret' ] s1) | s1 = bb113 ] 
    | bb113 = s0
      [ s0 = Int32.eq {_178} {[%#soption29] (0 : int32)}
          (fun (_ret':bool) ->  [ &_177 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_178 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_177 = false} (! bb115) | br1 -> {_177} (! bb114) ]  ]
      
    | bb114 = s0 [ s0 = unwrap_or_default'0 {some} (fun (_ret':int32) ->  [ &_183 <- _ret' ] s1) | s1 = bb116 ] 
    | bb116 = s0
      [ s0 = Int32.eq {_183} {[%#soption30] (1 : int32)}
          (fun (_ret':bool) ->  [ &_182 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_183 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_182 = false} (! bb118) | br1 -> {_182} (! bb117) ]  ]
      
    | bb117 = s0 [ s0 = as_ref'0 {none} (fun (_ret':Option'0.t_option int32) ->  [ &_190 <- _ret' ] s1) | s1 = bb119 ] 
    | bb119 = s0 [ s0 = copied'0 {_190} (fun (_ret':Option'0.t_option int32) ->  [ &_189 <- _ret' ] s1) | s1 = bb120 ] 
    | bb120 = s0 [ s0 = is_none'0 {_189} (fun (_ret':bool) ->  [ &_187 <- _ret' ] s1) | s1 = bb121 ] 
    | bb121 = any [ br0 -> {_187 = false} (! bb123) | br1 -> {_187} (! bb122) ] 
    | bb122 = s0 [ s0 = as_ref'0 {some} (fun (_ret':Option'0.t_option int32) ->  [ &_197 <- _ret' ] s1) | s1 = bb124 ] 
    | bb124 = s0 [ s0 = copied'0 {_197} (fun (_ret':Option'0.t_option int32) ->  [ &_196 <- _ret' ] s1) | s1 = bb125 ] 
    | bb125 = s0 [ s0 = unwrap'0 {_196} (fun (_ret':int32) ->  [ &_195 <- _ret' ] s1) | s1 = bb126 ] 
    | bb126 = s0
      [ s0 = Int32.eq {_195} {[%#soption31] (1 : int32)}
          (fun (_ret':bool) ->  [ &_194 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_195 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_194 = false} (! bb128) | br1 -> {_194} (! bb127) ]  ]
      
    | bb127 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {none}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_205 <- _ret' ]  [ &none <-  ^ _205 ] s1)
      | s1 = as_mut'0 {_205} (fun (_ret':Option'0.t_option (borrowed int32)) ->  [ &_204 <- _ret' ] s2)
      | s2 = bb129 ]
      
    | bb129 = s0 [ s0 = copied'1 {_204} (fun (_ret':Option'0.t_option int32) ->  [ &_203 <- _ret' ] s1) | s1 = bb130 ] 
    | bb130 = s0 [ s0 = is_none'0 {_203} (fun (_ret':bool) ->  [ &_201 <- _ret' ] s1) | s1 = bb131 ] 
    | bb131 = any [ br0 -> {_201 = false} (! bb133) | br1 -> {_201} (! bb132) ] 
    | bb132 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {some}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_212 <- _ret' ]  [ &some <-  ^ _212 ] s1)
      | s1 = as_mut'0 {_212} (fun (_ret':Option'0.t_option (borrowed int32)) ->  [ &_211 <- _ret' ] s2)
      | s2 = bb134 ]
      
    | bb134 = s0 [ s0 = copied'1 {_211} (fun (_ret':Option'0.t_option int32) ->  [ &_210 <- _ret' ] s1) | s1 = bb135 ] 
    | bb135 = s0 [ s0 = unwrap'0 {_210} (fun (_ret':int32) ->  [ &_209 <- _ret' ] s1) | s1 = bb136 ] 
    | bb136 = s0
      [ s0 = Int32.eq {_209} {[%#soption32] (1 : int32)}
          (fun (_ret':bool) ->  [ &_208 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_209 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_208 = false} (! bb138) | br1 -> {_208} (! bb137) ]  ]
      
    | bb137 = s0 [ s0 = as_ref'0 {none} (fun (_ret':Option'0.t_option int32) ->  [ &_218 <- _ret' ] s1) | s1 = bb139 ] 
    | bb139 = s0 [ s0 = cloned'0 {_218} (fun (_ret':Option'0.t_option int32) ->  [ &_217 <- _ret' ] s1) | s1 = bb140 ] 
    | bb140 = s0 [ s0 = is_none'0 {_217} (fun (_ret':bool) ->  [ &_215 <- _ret' ] s1) | s1 = bb141 ] 
    | bb141 = any [ br0 -> {_215 = false} (! bb143) | br1 -> {_215} (! bb142) ] 
    | bb142 = s0 [ s0 = as_ref'0 {some} (fun (_ret':Option'0.t_option int32) ->  [ &_225 <- _ret' ] s1) | s1 = bb144 ] 
    | bb144 = s0 [ s0 = cloned'0 {_225} (fun (_ret':Option'0.t_option int32) ->  [ &_224 <- _ret' ] s1) | s1 = bb145 ] 
    | bb145 = s0 [ s0 = unwrap'0 {_224} (fun (_ret':int32) ->  [ &_223 <- _ret' ] s1) | s1 = bb146 ] 
    | bb146 = s0
      [ s0 = Int32.eq {_223} {[%#soption33] (1 : int32)}
          (fun (_ret':bool) ->  [ &_222 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_223 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_222 = false} (! bb148) | br1 -> {_222} (! bb147) ]  ]
      
    | bb147 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {none}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_233 <- _ret' ]  [ &none <-  ^ _233 ] s1)
      | s1 = as_mut'0 {_233} (fun (_ret':Option'0.t_option (borrowed int32)) ->  [ &_232 <- _ret' ] s2)
      | s2 = bb149 ]
      
    | bb149 = s0 [ s0 = cloned'1 {_232} (fun (_ret':Option'0.t_option int32) ->  [ &_231 <- _ret' ] s1) | s1 = bb150 ] 
    | bb150 = s0 [ s0 = is_none'0 {_231} (fun (_ret':bool) ->  [ &_229 <- _ret' ] s1) | s1 = bb151 ] 
    | bb151 = any [ br0 -> {_229 = false} (! bb153) | br1 -> {_229} (! bb152) ] 
    | bb152 = s0
      [ s0 = Borrow.borrow_mut <Option'0.t_option int32> {some}
          (fun (_ret':borrowed (Option'0.t_option int32)) ->  [ &_240 <- _ret' ]  [ &some <-  ^ _240 ] s1)
      | s1 = as_mut'0 {_240} (fun (_ret':Option'0.t_option (borrowed int32)) ->  [ &_239 <- _ret' ] s2)
      | s2 = bb154 ]
      
    | bb154 = s0 [ s0 = cloned'1 {_239} (fun (_ret':Option'0.t_option int32) ->  [ &_238 <- _ret' ] s1) | s1 = bb155 ] 
    | bb155 = s0 [ s0 = unwrap'0 {_238} (fun (_ret':int32) ->  [ &_237 <- _ret' ] s1) | s1 = bb156 ] 
    | bb156 = s0
      [ s0 = Int32.eq {_237} {[%#soption34] (1 : int32)}
          (fun (_ret':bool) ->  [ &_236 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_237 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_236 = false} (! bb158) | br1 -> {_236} (! bb157) ]  ]
      
    | bb157 = s0
      [ s0 =  [ &opt <- Option'0.C_None ] s1
      | s1 = flatten'0 {opt} (fun (_ret':Option'0.t_option int32) ->  [ &_246 <- _ret' ] s2)
      | s2 = bb159 ]
      
    | bb159 = s0 [ s0 = is_none'0 {_246} (fun (_ret':bool) ->  [ &_244 <- _ret' ] s1) | s1 = bb160 ] 
    | bb160 = any [ br0 -> {_244 = false} (! bb162) | br1 -> {_244} (! bb161) ] 
    | bb161 = s0
      [ s0 =  [ &_250 <- Option'0.C_None ] s1
      | s1 =  [ &opt1 <- Option'0.C_Some _250 ] 
        (any [ any_ (_any:Option'0.t_option int32)-> (!  [ &_250 <- _any ] s2) ] )
      | s2 = flatten'0 {opt1} (fun (_ret':Option'0.t_option int32) ->  [ &_254 <- _ret' ] s3)
      | s3 = bb163 ]
      
    | bb163 = s0 [ s0 = is_none'0 {_254} (fun (_ret':bool) ->  [ &_252 <- _ret' ] s1) | s1 = bb164 ] 
    | bb164 = any [ br0 -> {_252 = false} (! bb166) | br1 -> {_252} (! bb165) ] 
    | bb165 = s0
      [ s0 =  [ &_258 <- Option'0.C_Some ([%#soption35] (1 : int32)) ] s1
      | s1 =  [ &opt2 <- Option'0.C_Some _258 ] 
        (any [ any_ (_any:Option'0.t_option int32)-> (!  [ &_258 <- _any ] s2) ] )
      | s2 = flatten'0 {opt2} (fun (_ret':Option'0.t_option int32) ->  [ &_262 <- _ret' ] s3)
      | s3 = bb167 ]
      
    | bb167 = s0 [ s0 = unwrap'0 {_262} (fun (_ret':int32) ->  [ &_261 <- _ret' ] s1) | s1 = bb168 ] 
    | bb168 = s0
      [ s0 = Int32.eq {_261} {[%#soption36] (1 : int32)}
          (fun (_ret':bool) ->  [ &_260 <- _ret' ] (any [ any_ (_any:int32)-> (!  [ &_261 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_260 = false} (! bb170) | br1 -> {_260} (! bb169) ]  ]
      
    | bb169 = return' {_0}
    | bb170 = {[%#soption37] false} any
    | bb166 = {[%#soption38] false} any
    | bb162 = {[%#soption39] false} any
    | bb158 = {[%#soption40] false} any
    | bb153 = {[%#soption41] false} any
    | bb148 = {[%#soption42] false} any
    | bb143 = {[%#soption43] false} any
    | bb138 = {[%#soption44] false} any
    | bb133 = {[%#soption45] false} any
    | bb128 = {[%#soption46] false} any
    | bb123 = {[%#soption47] false} any
    | bb118 = {[%#soption48] false} any
    | bb115 = {[%#soption49] false} any
    | bb112 = {[%#soption50] false} any
    | bb109 = {[%#soption51] false} any
    | bb105 = {[%#soption52] false} any
    | bb102 = {[%#soption53] false} any
    | bb98 = {[%#soption54] false} any
    | bb95 = {[%#soption55] false} any
    | bb91 = {[%#soption56] false} any
    | bb88 = {[%#soption57] false} any
    | bb84 = {[%#soption58] false} any
    | bb81 = {[%#soption59] false} any
    | bb77 = {[%#soption60] false} any
    | bb73 = {[%#soption61] false} any
    | bb69 = {[%#soption62] false} any
    | bb65 = {[%#soption63] false} any
    | bb61 = {[%#soption64] false} any
    | bb57 = {[%#soption65] false} any
    | bb53 = {[%#soption66] false} any
    | bb49 = {[%#soption67] false} any
    | bb45 = {[%#soption68] false} any
    | bb41 = {[%#soption69] false} any
    | bb37 = {[%#soption70] false} any
    | bb32 = {[%#soption71] false} any
    | bb27 = {[%#soption72] false} any
    | bb23 = {[%#soption73] false} any
    | bb20 = {[%#soption74] false} any
    | bb17 = {[%#soption75] false} any
    | bb13 = bb14
    | bb14 = {[%#soption76] false} any
    | bb6 = bb7
    | bb7 = {[%#soption77] false} any ]
    )
    [ & _0 : () = any_l ()
    | & none : Option'0.t_option int32 = any_l ()
    | & some : Option'0.t_option int32 = any_l ()
    | & _4 : bool = any_l ()
    | & _6 : bool = any_l ()
    | & _10 : bool = any_l ()
    | & _12 : bool = any_l ()
    | & _16 : bool = any_l ()
    | & _17 : int32 = any_l ()
    | & _21 : bool = any_l ()
    | & _22 : int32 = any_l ()
    | & _26 : bool = any_l ()
    | & _27 : int32 = any_l ()
    | & _31 : bool = any_l ()
    | & _33 : Option'0.t_option (borrowed int32) = any_l ()
    | & _34 : borrowed (Option'0.t_option int32) = any_l ()
    | & _36 : borrowed int32 = any_l ()
    | & _37 : Option'0.t_option (borrowed int32) = any_l ()
    | & _38 : borrowed (Option'0.t_option int32) = any_l ()
    | & _40 : bool = any_l ()
    | & _41 : int32 = any_l ()
    | & _44 : borrowed int32 = any_l ()
    | & _45 : Option'0.t_option (borrowed int32) = any_l ()
    | & _46 : borrowed (Option'0.t_option int32) = any_l ()
    | & _48 : bool = any_l ()
    | & _49 : int32 = any_l ()
    | & _53 : bool = any_l ()
    | & _55 : Option'0.t_option int32 = any_l ()
    | & _59 : bool = any_l ()
    | & _61 : int32 = any_l ()
    | & _62 : Option'0.t_option int32 = any_l ()
    | & _66 : bool = any_l ()
    | & _68 : Option'0.t_option int32 = any_l ()
    | & _73 : bool = any_l ()
    | & _75 : Option'0.t_option int32 = any_l ()
    | & _77 : Option'0.t_option int32 = any_l ()
    | & _80 : bool = any_l ()
    | & _82 : Option'0.t_option int32 = any_l ()
    | & _87 : bool = any_l ()
    | & _88 : int32 = any_l ()
    | & _89 : Option'0.t_option int32 = any_l ()
    | & _91 : Option'0.t_option int32 = any_l ()
    | & _94 : bool = any_l ()
    | & _96 : Option'0.t_option int32 = any_l ()
    | & _101 : bool = any_l ()
    | & _102 : int32 = any_l ()
    | & _103 : Option'0.t_option int32 = any_l ()
    | & _105 : Option'0.t_option int32 = any_l ()
    | & _108 : bool = any_l ()
    | & _109 : int32 = any_l ()
    | & _110 : Option'0.t_option int32 = any_l ()
    | & _115 : bool = any_l ()
    | & _116 : int32 = any_l ()
    | & _117 : Option'0.t_option int32 = any_l ()
    | & _119 : Option'0.t_option int32 = any_l ()
    | & _122 : bool = any_l ()
    | & _124 : Option'0.t_option int32 = any_l ()
    | & _125 : borrowed (Option'0.t_option int32) = any_l ()
    | & _128 : bool = any_l ()
    | & _132 : bool = any_l ()
    | & _133 : int32 = any_l ()
    | & _134 : Option'0.t_option int32 = any_l ()
    | & _135 : borrowed (Option'0.t_option int32) = any_l ()
    | & _138 : bool = any_l ()
    | & _141 : Option'0.t_option int32 = any_l ()
    | & _143 : bool = any_l ()
    | & _145 : Option'0.t_option int32 = any_l ()
    | & _146 : borrowed (Option'0.t_option int32) = any_l ()
    | & _149 : bool = any_l ()
    | & _150 : int32 = any_l ()
    | & _153 : Option'0.t_option int32 = any_l ()
    | & _155 : bool = any_l ()
    | & _156 : int32 = any_l ()
    | & _157 : Option'0.t_option int32 = any_l ()
    | & _158 : borrowed (Option'0.t_option int32) = any_l ()
    | & _161 : bool = any_l ()
    | & _162 : int32 = any_l ()
    | & _166 : bool = any_l ()
    | & _167 : int32 = any_l ()
    | & _168 : Option'0.t_option int32 = any_l ()
    | & _169 : borrowed (Option'0.t_option int32) = any_l ()
    | & _172 : bool = any_l ()
    | & _173 : int32 = any_l ()
    | & _177 : bool = any_l ()
    | & _178 : int32 = any_l ()
    | & _182 : bool = any_l ()
    | & _183 : int32 = any_l ()
    | & _187 : bool = any_l ()
    | & _189 : Option'0.t_option int32 = any_l ()
    | & _190 : Option'0.t_option int32 = any_l ()
    | & _194 : bool = any_l ()
    | & _195 : int32 = any_l ()
    | & _196 : Option'0.t_option int32 = any_l ()
    | & _197 : Option'0.t_option int32 = any_l ()
    | & _201 : bool = any_l ()
    | & _203 : Option'0.t_option int32 = any_l ()
    | & _204 : Option'0.t_option (borrowed int32) = any_l ()
    | & _205 : borrowed (Option'0.t_option int32) = any_l ()
    | & _208 : bool = any_l ()
    | & _209 : int32 = any_l ()
    | & _210 : Option'0.t_option int32 = any_l ()
    | & _211 : Option'0.t_option (borrowed int32) = any_l ()
    | & _212 : borrowed (Option'0.t_option int32) = any_l ()
    | & _215 : bool = any_l ()
    | & _217 : Option'0.t_option int32 = any_l ()
    | & _218 : Option'0.t_option int32 = any_l ()
    | & _222 : bool = any_l ()
    | & _223 : int32 = any_l ()
    | & _224 : Option'0.t_option int32 = any_l ()
    | & _225 : Option'0.t_option int32 = any_l ()
    | & _229 : bool = any_l ()
    | & _231 : Option'0.t_option int32 = any_l ()
    | & _232 : Option'0.t_option (borrowed int32) = any_l ()
    | & _233 : borrowed (Option'0.t_option int32) = any_l ()
    | & _236 : bool = any_l ()
    | & _237 : int32 = any_l ()
    | & _238 : Option'0.t_option int32 = any_l ()
    | & _239 : Option'0.t_option (borrowed int32) = any_l ()
    | & _240 : borrowed (Option'0.t_option int32) = any_l ()
    | & opt : Option'0.t_option (Option'0.t_option int32) = any_l ()
    | & _244 : bool = any_l ()
    | & _246 : Option'0.t_option int32 = any_l ()
    | & opt1 : Option'0.t_option (Option'0.t_option int32) = any_l ()
    | & _250 : Option'0.t_option int32 = any_l ()
    | & _252 : bool = any_l ()
    | & _254 : Option'0.t_option int32 = any_l ()
    | & opt2 : Option'0.t_option (Option'0.t_option int32) = any_l ()
    | & _258 : Option'0.t_option int32 = any_l ()
    | & _260 : bool = any_l ()
    | & _261 : int32 = any_l ()
    | & _262 : Option'0.t_option int32 = any_l () ]
     [ return' (result:())-> (! return' {result}) ] 
end
