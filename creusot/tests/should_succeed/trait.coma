module M_trait__uses_custom [#"trait.rs" 9 0 9 54]
  let%span strait0 = "trait.rs" 9 48 9 50
  
  type t_T'0
  
  predicate inv'0 (_1 : t_T'0)
  
  use prelude.prelude.Borrow
  
  predicate resolve'0 (_1 : t_T'0)
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec uses_custom'0 (_t:t_T'0) (return'  (ret:()))= {[@expl:uses_custom '_t' type invariant] [%#strait0] inv'0 _t}
    (! bb0
    [ bb0 = s0 [ s0 = {[@expl:type invariant] inv'0 _t} s1 | s1 = -{resolve'0 _t}- s2 | s2 = bb1 ] 
    | bb1 = return' {_0} ]
    ) [ & _0 : () = any_l () | & _t : t_T'0 = _t ]  [ return' (result:())-> (! return' {result}) ] 
end
module M_trait__uses_custom2 [#"trait.rs" 13 0 13 61]
  let%span strait0 = "trait.rs" 13 55 13 57
  
  type t_T'0
  
  predicate inv'0 (_1 : t_T'0)
  
  use prelude.prelude.Borrow
  
  predicate resolve'0 (_1 : t_T'0)
  
  use prelude.prelude.Intrinsic
  
  meta "compute_max_steps" 1000000
  
  let rec uses_custom2'0 (_t:t_T'0) (return'  (ret:()))= {[@expl:uses_custom2 '_t' type invariant] [%#strait0] inv'0 _t}
    (! bb0
    [ bb0 = s0 [ s0 = {[@expl:type invariant] inv'0 _t} s1 | s1 = -{resolve'0 _t}- s2 | s2 = bb1 ] 
    | bb1 = return' {_0} ]
    ) [ & _0 : () = any_l () | & _t : t_T'0 = _t ]  [ return' (result:())-> (! return' {result}) ] 
end
