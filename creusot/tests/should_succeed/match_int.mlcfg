
module MatchInt_F
  use prelude.Int32
  use prelude.Int
  let rec cfg f [#"../match_int.rs" 7 0 7 10] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _1 : int32;
  var _2 : bool;
  var _3 : bool;
  {
    goto BB0
  }
  BB0 {
    [#"../match_int.rs" 8 10 8 11] _1 <- ([#"../match_int.rs" 8 10 8 11] (1 : int32));
    [#"../match_int.rs" 9 8 9 13] _2 <- ([#"../match_int.rs" 9 8 9 13] (0 : int32)) <= _1;
    switch (_2)
      | False -> goto BB2
      | True -> goto BB6
      end
  }
  BB1 {
    goto BB7
  }
  BB2 {
    switch (_1 = 5)
      | True -> goto BB3
      | False -> switch (_1 = 6)
        | True -> goto BB4
        | False -> goto BB19
        end
      end
  }
  BB3 {
    goto BB10
  }
  BB4 {
    goto BB10
  }
  BB5 {
    switch ([#"../match_int.rs" 16 20 16 25] false)
      | False -> goto BB13
      | True -> goto BB14
      end
  }
  BB6 {
    [#"../match_int.rs" 9 8 9 13] _3 <- _1 < ([#"../match_int.rs" 9 8 9 13] (10 : int32));
    switch (_3)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB7 {
    switch ([#"../match_int.rs" 10 20 10 24] true)
      | False -> goto BB8
      | True -> goto BB9
      end
  }
  BB8 {
    assert { [#"../match_int.rs" 10 12 10 25] false };
    absurd
  }
  BB9 {
    [#"../match_int.rs" 10 25 10 25] _0 <- ([#"../match_int.rs" 10 25 10 25] ());
    goto BB15
  }
  BB10 {
    switch ([#"../match_int.rs" 13 20 13 25] false)
      | False -> goto BB11
      | True -> goto BB12
      end
  }
  BB11 {
    assert { [#"../match_int.rs" 13 12 13 26] false };
    absurd
  }
  BB12 {
    [#"../match_int.rs" 13 26 13 26] _0 <- ([#"../match_int.rs" 13 26 13 26] ());
    goto BB15
  }
  BB13 {
    assert { [#"../match_int.rs" 16 12 16 26] false };
    absurd
  }
  BB14 {
    [#"../match_int.rs" 16 26 16 26] _0 <- ([#"../match_int.rs" 16 26 16 26] ());
    goto BB15
  }
  BB15 {
    return _0
  }
  BB17 {
    goto BB3
  }
  BB18 {
    goto BB4
  }
  BB19 {
    goto BB5
  }
  
end
