
module MatchInt_F_Interface
  val f [@cfg:stackify] [#"../match_int.rs" 7 0 7 10] (_1' : ()) : ()
end
module MatchInt_F
  use mach.int.Int
  use mach.int.Int32
  let rec cfg f [@cfg:stackify] [#"../match_int.rs" 7 0 7 10] (_1' : ()) : () = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _1 : int32;
  var _2 : bool;
  var _3 : bool;
  var _4 : bool;
  var _5 : ();
  var _6 : bool;
  var _7 : ();
  var _8 : bool;
  var _9 : ();
  {
    goto BB0
  }
  BB0 {
    _1 <- ([#"../match_int.rs" 8 10 8 11] (1 : int32));
    _2 <- ([#"../match_int.rs" 9 8 9 13] ([#"../match_int.rs" 9 8 9 13] (0 : int32)) <= _1);
    switch (_2)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    _3 <- ([#"../match_int.rs" 9 8 9 13] _1 < ([#"../match_int.rs" 9 8 9 13] (10 : int32)));
    switch (_3)
      | False -> goto BB2
      | True -> goto BB4
      end
  }
  BB2 {
    switch (_1 = 5)
      | True -> goto BB7
      | False -> switch (_1 = 6)
        | True -> goto BB7
        | False -> goto BB3
        end
      end
  }
  BB3 {
    _8 <- not ([#"../match_int.rs" 16 20 16 25] false);
    switch (_8)
      | False -> goto BB11
      | True -> goto BB10
      end
  }
  BB4 {
    _4 <- not ([#"../match_int.rs" 10 20 10 24] true);
    switch (_4)
      | False -> goto BB6
      | True -> goto BB5
      end
  }
  BB5 {
    absurd
  }
  BB6 {
    _0 <- ();
    goto BB12
  }
  BB7 {
    _6 <- not ([#"../match_int.rs" 13 20 13 25] false);
    switch (_6)
      | False -> goto BB9
      | True -> goto BB8
      end
  }
  BB8 {
    absurd
  }
  BB9 {
    _0 <- ();
    goto BB12
  }
  BB10 {
    absurd
  }
  BB11 {
    _0 <- ();
    goto BB12
  }
  BB12 {
    return _0
  }
  
end
