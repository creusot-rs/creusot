<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="4"><result status="valid" time="0.100000" steps="9648"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="4"><result status="valid" time="0.130000" steps="17003"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.519875" steps="57328"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.090000" steps="9839"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="9499"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.100000" steps="11439"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.174678" steps="1724"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="13273"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.014544" steps="60"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.014087" steps="62"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.016305" steps="66"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.016997" steps="66"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="12996"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_list&#39;vc.10.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_list&#39;vc.10.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_list&#39;vc.10.0.0.0" expl="VC for list_reversal_list" proved="true">
     <proof prover="2"><result status="valid" time="0.045198" steps="572"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.1" expl="VC for list_reversal_list" proved="true">
     <proof prover="2"><result status="valid" time="0.083829" steps="862"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.2" expl="VC for list_reversal_list" proved="true">
     <proof prover="2"><result status="valid" time="0.068739" steps="889"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.3" expl="VC for list_reversal_list" proved="true">
     <proof prover="2"><result status="valid" time="0.028907" steps="262"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_list&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.683710" steps="7546"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="9491"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="10313"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="10391"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.140000" steps="12573"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.234261" steps="2937"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.621148" steps="100836"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0" expl="VC for list_reversal_loop" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.0" expl="VC for list_reversal_loop" proved="true">
          <proof prover="2"><result status="valid" time="0.027014" steps="262"/></proof>
          </goal>
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.1" expl="VC for list_reversal_loop" proved="true">
          <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.715400" steps="112865"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.612459" steps="97405"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3.0" expl="VC for list_reversal_loop" proved="true">
        <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="2.099609" steps="33442"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.029054" steps="255"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.150000" steps="17994"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.023854" steps="65"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020062" steps="67"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.022886" steps="69"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.013991" steps="66"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.080000" steps="11712"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.032421" steps="383"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.028169" steps="92031"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.050701" steps="700"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.3" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.073246" steps="1002"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.4" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.13.4.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.13.4.0.0" expl="VC for list_reversal_loop" proved="true">
     <proof prover="2"><result status="valid" time="0.071650" steps="980"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.1" expl="VC for list_reversal_loop" proved="true">
     <proof prover="2"><result status="valid" time="0.226508" steps="2616"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.2" expl="VC for list_reversal_loop" proved="true">
     <proof prover="2"><result status="valid" time="0.072811" steps="1018"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.3" expl="VC for list_reversal_loop" proved="true">
     <proof prover="2"><result status="valid" time="0.040328" steps="385"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.388400" steps="3999"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.813586" steps="9336"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.144436" steps="10825"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.054545" steps="13549"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.059630" steps="14436"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.150000" steps="15983"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso0">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="4"><result status="valid" time="0.131381" steps="16323"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.056710" steps="432"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0" timelimit="5"><result status="valid" time="0.215518" steps="43451"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="0.061578" steps="510"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="2"><result status="valid" time="0.063483" steps="558"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="2"><result status="valid" time="0.088295" steps="680"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
         <proof prover="4" timelimit="30" memlimit="4000"><result status="valid" time="1.843285" steps="201871"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.3" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="2"><result status="valid" time="0.057187" steps="441"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="0.057344" steps="510"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.110197" steps="1115"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.019683" steps="70"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.026006" steps="72"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020438" steps="74"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.016311" steps="62"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.064603" steps="17883"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.11.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.083801" steps="997"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.1" expl="VC for list_reversal_lasso" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.1.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="2"><result status="valid" time="0.047983" steps="439"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.150809" steps="1440"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.116116" steps="1316"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.051371" steps="452"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.024780" steps="86"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="1.036602" steps="146545"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.092336" steps="1173"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.043464" steps="386"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.072975" steps="853"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.9" expl="VC for list_reversal_lasso" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.9.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.179126" steps="1721"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.257216" steps="2962"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.083555" steps="907"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.12.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.123112" steps="1543"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0" timelimit="5"><result status="valid" time="2.511568" steps="305830"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.161111" steps="1840"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.045136" steps="413"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.12.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.114375" steps="1325"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2" timelimit="5"><result status="valid" time="0.693690" steps="6936"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.12.1.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.12.1.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.528075" steps="5845"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.118366" steps="1211"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.12.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.109413" steps="1407"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0" timelimit="5"><result status="valid" time="0.293937" steps="56172"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.293451" steps="3342"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.056261" steps="624"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="0.834858" steps="9546"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="2"><result status="valid" time="0.040530" steps="433"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="3.554344" steps="37654"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.226695" steps="2747"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.267606" steps="49646"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.129736" steps="1538"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="2"><result status="valid" time="0.045373" steps="437"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.940189" steps="9426"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.659733" steps="7851"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.073642" steps="1037"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.081569" steps="1244"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.322550" steps="60438"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="2"><result status="valid" time="0.193547" steps="2676"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.261809" steps="31606"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="vc_find_ptr_in_seq" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.070000" steps="8546"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="vc_pigeon" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="0.137332" steps="684420"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="vc_find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_find_lasso_aux.0" proved="true">
  <proof prover="2"><result status="valid" time="0.007257" steps="14"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010878" steps="12"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.2" proved="true">
  <proof prover="2"><result status="valid" time="0.011433" steps="16"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.3" proved="true">
  <proof prover="2"><result status="valid" time="0.008595" steps="25"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.4" proved="true">
  <proof prover="2"><result status="valid" time="0.020921" steps="112"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.5" proved="true">
  <proof prover="1"><result status="valid" time="0.044759" steps="73689"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.6" proved="true">
  <proof prover="2"><result status="valid" time="0.013646" steps="27"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.7" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_find_lasso_aux.7.0" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="vc_find_lasso_aux.7.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.012533" steps="92"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.020338" steps="138"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.2" proved="true">
    <proof prover="2"><result status="valid" time="0.031690" steps="286"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.3" proved="true">
    <proof prover="2"><result status="valid" time="0.032693" steps="259"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_find_lasso_aux.8" proved="true">
  <proof prover="1"><result status="valid" time="0.021420" steps="76248"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.9" proved="true">
  <proof prover="2"><result status="valid" time="0.016021" steps="26"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.10" proved="true">
  <proof prover="2"><result status="valid" time="0.010312" steps="24"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.11" proved="true">
  <proof prover="2"><result status="valid" time="0.009841" steps="36"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.12" proved="true">
  <proof prover="2"><result status="valid" time="0.018660" steps="34"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.13" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_find_lasso_aux.13.0" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_find_lasso_aux.13.0.0" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_find_lasso_aux.13.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.043446" steps="415"/></proof>
     </goal>
     <goal name="vc_find_lasso_aux.13.0.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.202011" steps="2270"/></proof>
     </goal>
     <goal name="vc_find_lasso_aux.13.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.065218" steps="757"/></proof>
     </goal>
     <goal name="vc_find_lasso_aux.13.0.0.3" proved="true">
     <proof prover="2"><result status="valid" time="0.071277" steps="870"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_find_lasso_aux.14" proved="true">
  <proof prover="1"><result status="valid" time="0.062282" steps="6224"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.15" proved="true">
  <proof prover="1"><result status="valid" time="0.050405" steps="226516"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="vc_find_lasso" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.038509" steps="12572"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl1" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.003300" steps="1"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2" proved="true">
 <goal name="index_mut_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.006853" steps="1"/></proof>
 </goal>
</theory>
</file>
</why3session>
