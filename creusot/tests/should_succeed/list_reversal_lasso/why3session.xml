<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="4"><result status="valid" time="0.100000" steps="9648"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="4"><result status="valid" time="0.130000" steps="17003"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.212017" steps="57328"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.090000" steps="9839"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="9499"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.100000" steps="11439"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.070000" steps="1767"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="13273"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.019600" steps="77"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.014740" steps="78"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.016210" steps="84"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.020939" steps="74"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="12996"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_list&#39;vc.10.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_list&#39;vc.10.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_list&#39;vc.10.0.0.0" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.070918" steps="369"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.1" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.100356" steps="823"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.2" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.083977" steps="523"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.3" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.099827" steps="206"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_list&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.360444" steps="4482"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="9491"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="10313"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="10391"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.140000" steps="12573"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.135870" steps="2144"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.621148" steps="100836"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0" expl="VC for list_reversal_loop" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.0" expl="VC for list_reversal_loop" proved="true">
          <proof prover="6"><result status="valid" time="0.065729" steps="245"/></proof>
          </goal>
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.1" expl="VC for list_reversal_loop" proved="true">
          <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.715400" steps="112865"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.612459" steps="97401"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3.0" expl="VC for list_reversal_loop" proved="true">
        <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="1.849704" steps="40839"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="236"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.150000" steps="17994"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.033165" steps="85"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.037369" steps="86"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.023187" steps="93"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.038181" steps="79"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.080000" steps="11712"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.022487" steps="290"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.028169" steps="92031"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.032291" steps="503"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.3" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.043839" steps="706"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.4" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.13.4.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.13.4.0.0" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.119170" steps="665"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.1" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.156515" steps="2107"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.2" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.041175" steps="506"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.3" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.130458" steps="300"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.324983" steps="4859"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="1.128802" steps="15625"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.144436" steps="10825"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.054545" steps="13549"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.059630" steps="14436"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.150000" steps="15983"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso0">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="4"><result status="valid" time="0.131381" steps="16323"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.040167" steps="405"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0" timelimit="5"><result status="valid" time="0.215518" steps="43451"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="6"><result status="valid" time="0.038061" steps="469"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.043054" steps="538"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.061661" steps="712"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
         <proof prover="4" timelimit="30" memlimit="4000"><result status="valid" time="0.932647" steps="201871"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.3" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.041484" steps="411"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="6"><result status="valid" time="0.037707" steps="469"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.085851" steps="1066"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.038848" steps="91"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.036739" steps="91"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.028086" steps="99"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.038466" steps="78"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.064603" steps="17883"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.11.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.078949" steps="677"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.1" expl="VC for list_reversal_lasso" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.1.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.118556" steps="346"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.098632" steps="1107"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.058259" steps="771"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.086437" steps="351"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.084219" steps="99"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="1.036602" steps="146545"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.167591" steps="679"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.030601" steps="303"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.131043" steps="626"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.9" expl="VC for list_reversal_lasso" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.9.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.162694" steps="2363"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.155330" steps="2095"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.139036" steps="688"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.12.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.086807" steps="1209"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0" timelimit="5"><result status="valid" time="2.511568" steps="305830"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.075475" steps="1193"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.023413" steps="331"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.12.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.120000" steps="973"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6" timelimit="5"><result status="valid" time="0.464352" steps="6695"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.12.1.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.12.1.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.334367" steps="5509"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.084522" steps="896"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.12.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.088090" steps="1217"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0" timelimit="5"><result status="valid" time="0.293937" steps="56172"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.182226" steps="2571"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.147772" steps="418"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6" timelimit="5" memlimit="2000"><result status="valid" time="0.577339" steps="8447"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6"><result status="valid" time="0.045678" steps="341"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="2.544750" steps="47178"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.147455" steps="2046"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.267606" steps="49646"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.088310" steps="1141"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6"><result status="valid" time="0.060000" steps="346"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.750985" steps="10298"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.542984" steps="6696"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.062914" steps="728"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.066484" steps="862"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.322550" steps="60438"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.268209" steps="3095"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.261809" steps="31606"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="vc_find_ptr_in_seq" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.070000" steps="8546"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="vc_pigeon" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="0.137332" steps="684420"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="vc_find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_find_lasso_aux.0" proved="true">
  <proof prover="6"><result status="valid" time="0.029977" steps="14"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.1" proved="true">
  <proof prover="6"><result status="valid" time="0.009872" steps="12"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.2" proved="true">
  <proof prover="6"><result status="valid" time="0.010671" steps="14"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.3" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.4" proved="true">
  <proof prover="6"><result status="valid" time="0.015015" steps="112"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.5" proved="true">
  <proof prover="1"><result status="valid" time="0.044759" steps="73689"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.6" proved="true">
  <proof prover="6"><result status="valid" time="0.009561" steps="26"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.7" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_find_lasso_aux.7.0" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="vc_find_lasso_aux.7.0.0" proved="true">
    <proof prover="6"><result status="valid" time="0.011559" steps="92"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.1" proved="true">
    <proof prover="6"><result status="valid" time="0.015396" steps="136"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.2" proved="true">
    <proof prover="6"><result status="valid" time="0.025817" steps="305"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.3" proved="true">
    <proof prover="6"><result status="valid" time="0.025164" steps="261"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_find_lasso_aux.8" proved="true">
  <proof prover="1"><result status="valid" time="0.021420" steps="76248"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.9" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.10" proved="true">
  <proof prover="6"><result status="valid" time="0.008602" steps="24"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.11" proved="true">
  <proof prover="6"><result status="valid" time="0.010158" steps="35"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.12" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.13" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_find_lasso_aux.13.0" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_find_lasso_aux.13.0.0" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_find_lasso_aux.13.0.0.0" proved="true">
     <proof prover="6"><result status="valid" time="0.081749" steps="416"/></proof>
     </goal>
     <goal name="vc_find_lasso_aux.13.0.0.1" proved="true">
     <proof prover="6"><result status="valid" time="0.148050" steps="1669"/></proof>
     </goal>
     <goal name="vc_find_lasso_aux.13.0.0.2" proved="true">
     <proof prover="6"><result status="valid" time="0.069856" steps="1101"/></proof>
     </goal>
     <goal name="vc_find_lasso_aux.13.0.0.3" proved="true">
     <proof prover="6"><result status="valid" time="0.035975" steps="1660"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_find_lasso_aux.14" proved="true">
  <proof prover="1"><result status="valid" time="0.062282" steps="6224"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.15" proved="true">
  <proof prover="1"><result status="valid" time="0.050405" steps="226516"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="vc_find_lasso" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.038509" steps="12572"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl1" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.007196" steps="0"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2" proved="true">
 <goal name="index_mut_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.006979" steps="0"/></proof>
 </goal>
</theory>
</file>
</why3session>
