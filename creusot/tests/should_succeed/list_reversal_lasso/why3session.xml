<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="4000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="14250"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="0"><result status="valid" time="0.130000" steps="21090"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.223509" steps="23532"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.090000" steps="15274"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="14752"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="16831"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="527"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17681"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.014740" steps="55"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.019600" steps="56"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020939" steps="62"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.016210" steps="56"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17943"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.099747" steps="1544"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.253156" steps="4266"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="14731"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.140000" steps="15595"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="15669"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17731"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.288016" steps="5489"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.674967" steps="100410"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0" expl="VC for list_reversal_loop" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.0" expl="VC for list_reversal_loop" proved="true">
          <proof prover="3"><result status="valid" time="0.065729" steps="233"/></proof>
          </goal>
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.1" expl="VC for list_reversal_loop" proved="true">
          <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.813613" steps="112409"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.667797" steps="96914"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3.0" expl="VC for list_reversal_loop" proved="true">
        <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="2.299017" steps="43145"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="231"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="20723"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.037369" steps="63"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.033165" steps="64"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.038181" steps="70"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.023187" steps="57"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.080000" steps="18623"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.290094" steps="5374"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.099583" steps="1739"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.15.0" expl="loop invariant preservation" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.562179" steps="7975"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.144436" steps="15853"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.164080" steps="18070"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.168837" steps="18750"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="19700"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="0.058838" steps="19848"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.040000" steps="403"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.210142" steps="42927"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="469"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.072433" steps="522"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.101103" steps="787"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
         <proof prover="4" timelimit="30"><result status="valid" time="1.954780" steps="201826"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.3" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.073812" steps="411"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="469"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.098493" steps="1002"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.036739" steps="70"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.038848" steps="70"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.038466" steps="77"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.028086" steps="57"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.069828" steps="20672"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.11.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.120000" steps="548"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.184476" steps="834"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.11.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.11.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.068167" steps="1076"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.060000" steps="304"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.11.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.332512" steps="1454908"/></proof>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.11.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.11.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.100000" steps="504"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.084442" steps="1269"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.118512" steps="1850"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.147772" steps="572"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.12.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.067858" steps="1014"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.139565" steps="505072"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.074166" steps="1129"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.152323" steps="543"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.092445" steps="1483"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.344014" steps="5158"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.258582" steps="3920"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.068627" steps="980"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.145315" steps="927"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.9" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="2"><result status="valid" time="0.122703" steps="513229"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.124292" steps="1992"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.139036" steps="523"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.507630" steps="7167"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.060000" steps="316"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="2.002815" steps="29530"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.152465" steps="2559"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.053019" steps="785"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.080869" steps="1305"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.045678" steps="322"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.858421" steps="9987"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.351997" steps="5134"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.281295" steps="60723"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.067917" steps="533"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.282327" steps="59610"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.169809" steps="2718"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.251240" steps="30928"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="find_ptr_in_seq&#39;vc" expl="VC for find_ptr_in_seq" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.070000" steps="15617"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="pigeon&#39;vc" expl="VC for pigeon" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.173548" steps="689086"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="find_lasso_aux&#39;vc" expl="VC for find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="find_lasso_aux&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.029977" steps="23"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.062282" steps="84105"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="94"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="103"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_lasso_aux&#39;vc.8.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="find_lasso_aux&#39;vc.8.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="find_lasso_aux&#39;vc.8.0.0.0" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.035975" steps="117"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.1" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.040206" steps="129"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.2" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.081749" steps="270"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.3" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.069856" steps="226"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="find_lasso_aux&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.084642" steps="396636"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="find_lasso&#39;vc" expl="VC for find_lasso" proved="true">
 <proof prover="4" memlimit="1000"><result status="valid" time="0.070000" steps="13224"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl1" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.007196" steps="0"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2" proved="true">
 <goal name="index_mut_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.006979" steps="0"/></proof>
 </goal>
</theory>
</file>
</why3session>
