<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="4"><result status="valid" time="0.100000" steps="9466"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="4"><result status="valid" time="0.130000" steps="16821"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.198325" steps="50475"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.090000" steps="9657"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="9317"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.100000" steps="11257"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.070000" steps="694"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="13076"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.019600" steps="76"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.014740" steps="76"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.016210" steps="84"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.020939" steps="74"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="12801"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_list&#39;vc.10.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_list&#39;vc.10.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_list&#39;vc.10.0.0.0" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.070918" steps="367"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.1" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.100356" steps="820"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.2" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.083977" steps="519"/></proof>
     </goal>
     <goal name="list_reversal_list&#39;vc.10.0.0.3" expl="VC for list_reversal_list" proved="true">
     <proof prover="6"><result status="valid" time="0.099827" steps="206"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_list&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.260054" steps="3781"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="9309"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.110000" steps="10131"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.080000" steps="10209"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.140000" steps="12391"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.295628" steps="5324"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.321772" steps="98955"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0" expl="VC for list_reversal_loop" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.0" expl="VC for list_reversal_loop" proved="true">
          <proof prover="6"><result status="valid" time="0.065729" steps="238"/></proof>
          </goal>
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.1" expl="VC for list_reversal_loop" proved="true">
          <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.431048" steps="111703"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.655992" steps="97435"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3.0" expl="VC for list_reversal_loop" proved="true">
        <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="2.141767" steps="44030"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="238"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.150000" steps="17801"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.033165" steps="83"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.037369" steps="85"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.023187" steps="91"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.038181" steps="78"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.080000" steps="11516"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.022487" steps="288"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.028169" steps="91888"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.032291" steps="499"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.3" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.043839" steps="700"/></proof>
   </goal>
   <goal name="list_reversal_loop&#39;vc.13.4" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.13.4.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.13.4.0.0" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.119170" steps="677"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.1" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.164390" steps="2106"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.2" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.041175" steps="503"/></proof>
     </goal>
     <goal name="list_reversal_loop&#39;vc.13.4.0.3" expl="VC for list_reversal_loop" proved="true">
     <proof prover="6"><result status="valid" time="0.130458" steps="298"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.302352" steps="2643"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.823918" steps="9800"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.144436" steps="10640"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.043594" steps="13364"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.042108" steps="14251"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.150000" steps="15798"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso0">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="4"><result status="valid" time="0.131381" steps="16038"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.040167" steps="403"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="4"><result status="valid" time="0.421159" steps="113131"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="6"><result status="valid" time="0.038061" steps="459"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.043054" steps="511"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.064444" steps="783"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
         <proof prover="4" timelimit="30" memlimit="4000"><result status="valid" time="1.417705" steps="177669"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.3" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.041484" steps="409"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="6"><result status="valid" time="0.037707" steps="459"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.068267" steps="1078"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.038848" steps="90"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.036739" steps="91"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.028086" steps="97"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.038466" steps="77"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.069828" steps="17684"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.11.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.078949" steps="683"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.1" expl="VC for list_reversal_lasso" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.1.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6"><result status="valid" time="0.118556" steps="352"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.11.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.090247" steps="1176"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.066526" steps="1042"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.086437" steps="359"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.084219" steps="97"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="0.908359" steps="104961"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.167591" steps="683"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.030601" steps="301"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.131043" steps="628"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.9" expl="VC for list_reversal_lasso" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.9.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.141592" steps="1983"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.324917" steps="2477"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.11.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="6"><result status="valid" time="0.139036" steps="693"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.12.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.080629" steps="1214"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0" timelimit="2"><result status="valid" time="0.843737" steps="239987"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.051246" steps="927"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.023413" steps="330"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.12.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.120000" steps="1427"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.556197" steps="7890"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.12.1.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.12.1.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.385109" steps="5511"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.060000" steps="892"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.12.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.12.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.123405" steps="1503"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="1.838547" steps="19543"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.463076" steps="3950"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.12.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.147772" steps="417"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6" timelimit="5" memlimit="2000"><result status="valid" time="0.596956" steps="8758"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6"><result status="valid" time="0.045678" steps="340"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="4.498641" steps="69325"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.278973" steps="2188"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.140061" steps="49546"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.097825" steps="1144"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6"><result status="valid" time="0.060000" steps="345"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.797638" steps="10158"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.752112" steps="6966"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.077397" steps="714"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.053102" steps="873"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.327515" steps="59178"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="6"><result status="valid" time="0.202957" steps="2771"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.058494" steps="31506"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="find_ptr_in_seq&#39;vc" expl="VC for find_ptr_in_seq" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.070000" steps="9280"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="pigeon&#39;vc" expl="VC for pigeon" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="0.110611" steps="894866"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="find_lasso_aux&#39;vc" expl="VC for find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="find_lasso_aux&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.029977" steps="25"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.062282" steps="71481"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="105"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.044759" steps="164444"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.000000" steps="20"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.010000" steps="121"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_lasso_aux&#39;vc.8.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="find_lasso_aux&#39;vc.8.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="find_lasso_aux&#39;vc.8.0.0.0" expl="VC for find_lasso_aux" proved="true">
     <proof prover="6"><result status="valid" time="0.035975" steps="113"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.1" expl="VC for find_lasso_aux" proved="true">
     <proof prover="6"><result status="valid" time="0.040206" steps="148"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.2" expl="VC for find_lasso_aux" proved="true">
     <proof prover="6"><result status="valid" time="0.081749" steps="325"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.3" expl="VC for find_lasso_aux" proved="true">
     <proof prover="6"><result status="valid" time="0.069856" steps="270"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="find_lasso_aux&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.086524" steps="466907"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="find_lasso&#39;vc" expl="VC for find_lasso" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.037699" steps="12772"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl1" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.007196" steps="0"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2" proved="true">
 <goal name="index_mut_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.006979" steps="0"/></proof>
 </goal>
</theory>
</file>
</why3session>
