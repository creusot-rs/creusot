<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="list_reversal_lasso.coma"/>
<theory name="Core_Ptr_NonNull_NonNull_Type" proved="true">
 <goal name="vc_t_nonnull" proved="true">
 <proof prover="1"><result status="valid" time="0.028184" steps="6"/></proof>
 </goal>
</theory>
<theory name="Core_Marker_PhantomData_Type" proved="true">
 <goal name="vc_t_phantomdata" proved="true">
 <proof prover="1"><result status="valid" time="0.016226" steps="6"/></proof>
 </goal>
</theory>
<theory name="Core_Ptr_Unique_Unique_Type" proved="true">
 <goal name="vc_t_unique" proved="true">
 <proof prover="1"><result status="valid" time="0.012892" steps="6"/></proof>
 </goal>
</theory>
<theory name="Alloc_RawVec_Cap_Type" proved="true">
 <goal name="vc_t_cap" proved="true">
 <proof prover="1"><result status="valid" time="0.008527" steps="85"/></proof>
 </goal>
</theory>
<theory name="Alloc_RawVec_RawVec_Type" proved="true">
 <goal name="vc_t_rawvec" proved="true">
 <proof prover="1"><result status="valid" time="0.019232" steps="85"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Vec_Type" proved="true">
 <goal name="vc_t_vec" proved="true">
 <proof prover="1"><result status="valid" time="0.019011" steps="85"/></proof>
 </goal>
</theory>
<theory name="Alloc_Alloc_Global_Type" proved="true">
 <goal name="vc_t_global" proved="true">
 <proof prover="1"><result status="valid" time="0.007465" steps="6"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Memory_Type" proved="true">
 <goal name="vc_t_memory" proved="true">
 <proof prover="1"><result status="valid" time="0.022696" steps="85"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="vc_index&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.026766" steps="3104"/></proof>
 </goal>
 <goal name="vc_index" proved="true">
 <proof prover="4"><result status="valid" time="0.046154" steps="9439"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="vc_index_mut&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.015227" steps="3267"/></proof>
 </goal>
 <goal name="vc_index_mut" proved="true">
 <proof prover="4"><result status="valid" time="0.041927" steps="13978"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="vc_index_mut&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.016175" steps="3059"/></proof>
 </goal>
 <goal name="vc_index&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.008310" steps="3059"/></proof>
 </goal>
 <goal name="vc_list_reversal_safe" proved="true">
 <proof prover="4"><result status="valid" time="0.101834" steps="26672"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="vc_replace&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.010858" steps="3240"/></proof>
 </goal>
 <goal name="vc_index_mut&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.020898" steps="3240"/></proof>
 </goal>
 <goal name="vc_list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_list_reversal_list.0" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.044678" steps="7000"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.1" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.010120" steps="51"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.2" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.008960" steps="16"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.3" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.039295" steps="11264"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.106448" steps="1509"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.053627" steps="13444"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.033144" steps="10181"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.051545" steps="10213"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.021687" steps="9258"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.038544" steps="10428"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.10" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.023704" steps="9352"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.11" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.559531" steps="5642"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.12" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.268421" steps="2367"/></proof>
  </goal>
  <goal name="vc_list_reversal_list.13" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.084776" steps="13584"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="vc_replace&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.019745" steps="3240"/></proof>
 </goal>
 <goal name="vc_index_mut&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.019699" steps="3240"/></proof>
 </goal>
 <goal name="vc_list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_list_reversal_loop.0" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.050206" steps="9385"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.1" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.011010" steps="55"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.2" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.008892" steps="18"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.3" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.010037" steps="19"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.4" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.067047" steps="10554"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.098629" steps="670"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_list_reversal_loop.6.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_list_reversal_loop.6.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_list_reversal_loop.6.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="vc_list_reversal_loop.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="vc_list_reversal_loop.6.0.0.0.0.0" proved="true">
       <proof prover="4"><result status="valid" time="0.288555" steps="84393"/></proof>
       </goal>
       <goal name="vc_list_reversal_loop.6.0.0.0.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.490743" steps="4582"/></proof>
       </goal>
       <goal name="vc_list_reversal_loop.6.0.0.0.0.2" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_list_reversal_loop.6.0.0.0.0.2.0" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="vc_list_reversal_loop.6.0.0.0.0.2.0.0" proved="true">
         <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="5.534530" steps="62875"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="vc_list_reversal_loop.6.0.0.0.0.3" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_list_reversal_loop.6.0.0.0.0.3.0" proved="true">
        <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.833235" steps="19725"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_list_reversal_loop.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.048791" steps="199"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.130260" steps="18185"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.068614" steps="10864"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.057612" steps="10896"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.053868" steps="9885"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.071570" steps="11166"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.13" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.058234" steps="9979"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.14" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.437708" steps="4110"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.15" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.447721" steps="3906"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.16" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.409517" steps="3847"/></proof>
  </goal>
  <goal name="vc_list_reversal_loop.17" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.077684" steps="11901"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="vc_replace&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.018490" steps="3240"/></proof>
 </goal>
 <goal name="vc_index_mut&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.020264" steps="3240"/></proof>
 </goal>
 <goal name="vc_list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_list_reversal_lasso.0" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.014734" steps="7250"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.1" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.034209" steps="13414"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.2" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.037533" steps="14587"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.3" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.041602" steps="16123"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.4" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.040463" steps="15859"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_list_reversal_lasso.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_list_reversal_lasso.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_list_reversal_lasso.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.073787" steps="17448"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.5.0.0.1" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.032191" steps="365"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.5.0.0.2" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_list_reversal_lasso.5.0.0.2.0" expl="postcondition" proved="true">
      <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),singleton,cons,snoc,usize&#39;maxInt,usize&#39;minInt,usize&#39;eq,min,max,to_int,in_bounds,memory_0,index_logic&#39;2,index_logic&#39;1,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,create&#39;spec,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,usize&#39;inj,to_int_in_bounds,inv&#39;0,H9,Assert6,H5,H2,H1,Assert4">
       <goal name="vc_list_reversal_lasso.5.0.0.2.0.0" expl="postcondition" proved="true">
       <proof prover="4"><result status="valid" time="0.450258" steps="113591"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="vc_list_reversal_lasso.5.0.0.3" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_list_reversal_lasso.5.0.0.3.0" expl="postcondition" proved="true">
      <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="3.342076" steps="40261"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_list_reversal_lasso.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.042297" steps="783"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.026477" steps="11647"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.026714" steps="11679"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.019908" steps="10429"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.026900" steps="11962"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.11" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.021868" steps="10523"/></proof>
  </goal>
  <goal name="vc_list_reversal_lasso.12" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_list_reversal_lasso.12.0" expl="loop invariant" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_list_reversal_lasso.12.0.0" expl="loop invariant" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_list_reversal_lasso.12.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.756180" steps="7970"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.12.0.0.1" proved="true">
     <proof prover="4"><result status="valid" time="0.136553" steps="35966"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.12.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.091718" steps="1663"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.12.0.0.3" proved="true">
     <proof prover="4"><result status="valid" time="0.110078" steps="25685"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_list_reversal_lasso.12.1" expl="loop invariant" proved="true">
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="2.592071" steps="23051"/></proof>
   </goal>
   <goal name="vc_list_reversal_lasso.12.2" expl="loop invariant" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_list_reversal_lasso.12.2.0" expl="loop invariant" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_list_reversal_lasso.12.2.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.030747" steps="479"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.12.2.0.1" proved="true">
     <proof prover="4"><result status="valid" time="0.156837" steps="59313"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.12.2.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.479620" steps="4350"/></proof>
     </goal>
     <goal name="vc_list_reversal_lasso.12.2.0.3" proved="true">
     <proof prover="4"><result status="valid" time="0.066658" steps="25471"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_list_reversal_lasso.13" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_list_reversal_lasso.13.0" expl="loop invariant" proved="true">
   <proof prover="2"><result status="valid" time="1.101326" steps="11719"/></proof>
   </goal>
   <goal name="vc_list_reversal_lasso.13.1" expl="loop invariant" proved="true">
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.923998" steps="20364"/></proof>
   </goal>
   <goal name="vc_list_reversal_lasso.13.2" expl="loop invariant" proved="true">
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.316349" steps="13196"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_list_reversal_lasso.14" expl="loop invariant" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,singleton,cons,(++),( *_),(^_),borrow_logic,usize&#39;maxInt,usize&#39;minInt,usize&#39;eq,invariant&#39;3,invariant&#39;2,invariant&#39;1,invariant&#39;0,resolve&#39;1,Assoc1,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,Total,CompatOrderAdd,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,usize&#39;inj,inv&#39;3,inv&#39;1,Assert2,Assert1">
   <goal name="vc_list_reversal_lasso.14.0" expl="loop invariant" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="vc_list_reversal_lasso.14.0.0" expl="loop invariant" proved="true">
    <proof prover="2"><result status="valid" time="1.394255" steps="12324"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_list_reversal_lasso.15" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.052778" steps="20934"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Core_Option_Option_Type" proved="true">
 <goal name="vc_none" proved="true">
 <proof prover="1"><result status="valid" time="0.016482" steps="6"/></proof>
 </goal>
 <goal name="vc_some" proved="true">
 <proof prover="1"><result status="valid" time="0.008287" steps="6"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="vc_find_ptr_in_seq" proved="true">
 <proof prover="4"><result status="valid" time="0.042008" steps="8442"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="vc_pigeon" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.145615" steps="630000"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="vc_find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_find_lasso_aux.0" proved="true">
  <proof prover="4"><result status="valid" time="0.060325" steps="10358"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.1" proved="true">
  <proof prover="4"><result status="valid" time="0.047582" steps="9427"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.2" proved="true">
  <proof prover="4"><result status="valid" time="0.073994" steps="11002"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.3" proved="true">
  <proof prover="4"><result status="valid" time="0.071939" steps="10617"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.4" proved="true">
  <proof prover="4"><result status="valid" time="0.099071" steps="13651"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.5" proved="true">
  <proof prover="4"><result status="valid" time="0.113334" steps="15750"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.6" proved="true">
  <proof prover="4"><result status="valid" time="0.088977" steps="11898"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.7" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_find_lasso_aux.7.0" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="vc_find_lasso_aux.7.0.0" proved="true">
    <proof prover="4"><result status="valid" time="0.048257" steps="14398"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.1" proved="true">
    <proof prover="4"><result status="valid" time="0.153418" steps="38681"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.2" proved="true">
    <proof prover="2"><result status="valid" time="0.084622" steps="298"/></proof>
    </goal>
    <goal name="vc_find_lasso_aux.7.0.3" proved="true">
    <proof prover="1"><result status="valid" time="0.353710" steps="859887"/></proof>
    <proof prover="4"><result status="timeout" time="1.341034" steps="180890"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_find_lasso_aux.8" proved="true">
  <proof prover="4"><result status="valid" time="0.071188" steps="10800"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.9" proved="true">
  <proof prover="4"><result status="valid" time="0.050925" steps="9901"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.10" proved="true">
  <proof prover="4"><result status="valid" time="0.057563" steps="9890"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.11" proved="true">
  <proof prover="4"><result status="valid" time="0.092523" steps="12067"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.12" proved="true">
  <proof prover="4"><result status="valid" time="0.064679" steps="10867"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.13" proved="true">
  <proof prover="4"><result status="valid" time="0.072280" steps="10924"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.14" proved="true">
  <proof prover="4"><result status="valid" time="0.059030" steps="9929"/></proof>
  </goal>
  <goal name="vc_find_lasso_aux.15" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.067587" steps="290899"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="vc_find_lasso" proved="true">
 <proof prover="4"><result status="valid" time="0.047140" steps="12507"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl1" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="4"><result status="valid" time="0.012818" steps="27"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2" proved="true">
 <goal name="index_mut_refn" proved="true">
 <proof prover="4"><result status="valid" time="0.012918" steps="27"/></proof>
 </goal>
</theory>
</file>
</why3session>
