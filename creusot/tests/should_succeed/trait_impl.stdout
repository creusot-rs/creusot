module Type
  use Ref
  use mach.int.Int
  use mach.int.Int32
  use mach.int.Int64
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
end
module TraitImpl_Main_Interface
  val main () : ()
end
module TraitImpl_Main
  let rec cfg main () : () = 
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module TraitImpl_Impl0_X_Interface
  type b   
  type t2   
  type t1   
  val x (self : (t1, t2)) : ()
end
module TraitImpl_Impl0_X
  type b   
  type t2   
  type t1   
  let rec cfg x (self : (t1, t2)) : () = 
  var _0 : ();
  var self_1 : (t1, t2);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- ();
    goto BB1
  }
  BB1 {
    assume { (fun x -> true) self_1 };
    return _0
  }
  
end
module TraitImpl_Impl1_X_Interface
  type b   
  use mach.int.Int
  use mach.int.UInt32
  val x (self : uint32) : ()
end
module TraitImpl_Impl1_X
  type b   
  use mach.int.Int
  use mach.int.UInt32
  let rec cfg x (self : uint32) : () = 
  var _0 : ();
  var self_1 : uint32;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- ();
    assume { (fun x -> true) self_1 };
    return _0
  }
  
end
module Core_Marker_Sized
  type self   
end
module TraitImpl_T
  type self   
  type b   
  clone Core_Marker_Sized as Sized0 with type self = b
  val x (self : self) : ()
end
module TraitImpl_Impl0_Interface
  type b   
  type t2   
  type t1   
  clone export TraitImpl_Impl0_X_Interface with type b = b, type t2 = t2, type t1 = t1
  clone export TraitImpl_T with type self = (t1, t2), type b = b, val x = x
end
module TraitImpl_Impl0
  type b   
  type t2   
  type t1   
  clone export TraitImpl_Impl0_X_Interface with type b = b, type t2 = t2, type t1 = t1
  clone export TraitImpl_T with type self = (t1, t2), type b = b, val x = x
end
module TraitImpl_Impl1_Interface
  type b   
  use mach.int.Int
  use mach.int.UInt32
  clone export TraitImpl_Impl1_X_Interface with type b = b
  clone export TraitImpl_T with type self = uint32, type b = b, val x = x
end
module TraitImpl_Impl1
  type b   
  use mach.int.Int
  use mach.int.UInt32
  clone export TraitImpl_Impl1_X_Interface with type b = b
  clone export TraitImpl_T with type self = uint32, type b = b, val x = x
end
