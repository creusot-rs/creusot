module Type
  use Ref
  use mach.int.Int
  use mach.int.Int32
  use mach.int.Int64
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
end
module Trusted_CallExternal_Interface
  val call_external () : ()
end
module Trusted_CallExternal
  val call_external () : ()
end
module Trusted_Lie_Interface
  use mach.int.Int
  use mach.int.UInt32
  val lie () : uint32
    ensures { result = (10 : uint32) }
    
end
module Trusted_Lie
  use mach.int.Int
  use mach.int.UInt32
  val lie () : uint32
    ensures { result = (10 : uint32) }
    
end
module Trusted_VictimOfLie_Interface
  use mach.int.Int
  use mach.int.UInt32
  val victim_of_lie () : uint32
    ensures { result = (10 : uint32) }
    
end
module Trusted_VictimOfLie
  use mach.int.Int
  use mach.int.UInt32
  clone Trusted_Lie_Interface as Lie0
  let rec cfg victim_of_lie () : uint32
    ensures { result = (10 : uint32) }
    
   = 
  var _0 : uint32;
  {
    goto BB0
  }
  BB0 {
    _0 <- Lie0.lie ();
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module Trusted_TrustedPred_Interface
  use mach.int.Int
  use mach.int.UInt32
  predicate trusted_pred (x : uint32)
end
module Trusted_TrustedPred
  use mach.int.Int
  use mach.int.UInt32
  predicate trusted_pred (x : uint32)
end
