
module SpecTests_T_Type
  type t_t  =
    | C_A
    | C_B
    
end
module SpecTests_S_Type
  type t_s 'a 'b =
    | C_S 'a 'b
    
end
module SpecTests_TestSpecs_Interface
  use mach.int.Int
  use mach.int.UInt32
  use SpecTests_S_Type as SpecTests_S_Type
  use SpecTests_T_Type as SpecTests_T_Type
  val test_specs [@cfg:stackify] [#"../spec_tests.rs" 18 0 18 19] (_1' : ()) : ()
    ensures { [#"../spec_tests.rs" 16 10 16 22] SpecTests_T_Type.C_A = SpecTests_T_Type.C_B }
    ensures { [#"../spec_tests.rs" 17 10 17 41] SpecTests_S_Type.C_S (0 : uint32) true = SpecTests_S_Type.C_S (1 : uint32) false }
    
end
module SpecTests_TestSpecs
  use mach.int.Int
  use mach.int.UInt32
  use SpecTests_S_Type as SpecTests_S_Type
  use SpecTests_T_Type as SpecTests_T_Type
  let rec cfg test_specs [@cfg:stackify] [#"../spec_tests.rs" 18 0 18 19] (_1' : ()) : ()
    ensures { [#"../spec_tests.rs" 16 10 16 22] SpecTests_T_Type.C_A = SpecTests_T_Type.C_B }
    ensures { [#"../spec_tests.rs" 17 10 17 41] SpecTests_S_Type.C_S (0 : uint32) true = SpecTests_S_Type.C_S (1 : uint32) false }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
