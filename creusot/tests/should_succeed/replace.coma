module M_replace__test [#"replace.rs" 8 0 8 44]
  use prelude.prelude.Intrinsic
  
  use prelude.prelude.UInt32
  
  type t_Option'0  =
    | C_None'0
    | C_Some'0 (t_Something'0)
  with t_Something'0  =
    { t_Something__a'0: uint32; t_Something__b'0: t_Option'0 }
  
  meta "compute_max_steps" 1000000
  
  let rec test'0 (_a:t_Something'0) (b:t_Something'0) (return'  (ret:()))= (! bb0
    [ bb0 = bb1 | bb1 = s0 [ s0 =  [ &_a <- b ] s1 | s1 = bb3 ]  | bb3 = bb4 | bb4 = bb5 | bb5 = return' {_0} ]
    ) [ & _0 : () = any_l () | & _a : t_Something'0 = _a | & b : t_Something'0 = b ] 
    [ return' (result:())-> (! return' {result}) ]
    
end
