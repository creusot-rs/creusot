module Prelude
  use Ref
  use mach.int.Int
  use mach.int.Int32
  use mach.int.Int64
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double

  type usize = uint64
  type isize = int64
  type opaque_ptr

  type borrowed 'a = { current : 'a ; final : 'a; }
  let function ( *_ ) x = x.current
  let function ( ^_ ) x = x.final
  val borrow_mut (a : 'a) : borrowed 'a
  ensures { *result = a }
end
